   #GitHub
   [https://github.com/mateusortiz/webcomponents-the-right-way/commits/mas
   ter.atom]Recent Commits to webcomponents-the-right-way:master

   Skip to content
   [https://github.com/]
     * Features
     * Explore
     * Pricing

   This
   repository ____________________
   [file://localhost/login?return_to=%2Fmateusortiz%2Fwebcomponents-the-ri
   ght-way]Sign in or Sign up

     * Watch
       
       68
     * Star
       1,010
     * Fork
       6
       3

webcomponents-the-right-way

   Code
   Pull
   requests 2
   Proj
   ects 0
   Insight
   s
   (BUTTON) Dismiss

Join GitHub today

   GitHub is home to over 20 million developers working together to host
   and review code, manage projects, and build software together.

   Sign up
   This is a guide intended to introduce to Web Components. Everyone can
   contribute here!
     * [file://localhost/mateusortiz/webcomponents-the-right-way/commits/m
       aster]66 commits
     * 
       1 branch
     * 
       0 releases
     * [file://localhost/mateusortiz/webcomponents-the-right-way/graphs/co
       ntributors]11 contributors
     * [file://localhost/mateusortiz/webcomponents-the-right-way/blob/mast
       er/LICENSE]MIT

   Clone or download

Clone with HTTPS [https://help.github.com/articles/which-remote-url-should-i-use]

   Use Git or checkout with SVN using the web URL.
   https://github.com/m
   Download ZIP

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching Xcode...

   If nothing happens, [https://developer.apple.com/xcode/]download Xcode
   and try again.

   (BUTTON) Go back

Launching Visual Studio...

   If nothing happens, [https://visualstudio.github.com/]download the
   GitHub extension for Visual Studio and try again.

   (BUTTON) Go back
   F
   ind file
   (BUTTON) Branch: master
   Switch branches/tags
   ____________________
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/webcomponents
       -the-right-way]Branches
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/webcomponents
       -the-right-way]Tags

   m
   aster
   Nothing to show
   Nothing to show
   (BUTTON) New pull request
   Fetching latest commit...
   Cannot retrieve the latest commit at this time.
   [file://localhost/mateusortiz/webcomponents-the-right-way/tree/1e01e751
   d21fb156e7e04a8abf2d849e3ae5bafd]Permalink
   Failed to load latest commit information.
   LICENSE
   Initial commit Oct 17, 2014
   README.md
   Add Aurelia framework Sep 27, 2017

README.md

Web Components the Right Way

   [https://github.com/sindresorhus/awesome]Awesome

     This is a guide intended to introduce to Web Components. Everyone
     can contribute here!

     * Web Components the Right Way
          + Specs
          + Blogs
          + Reading
          + Interop
          + Generators
          + Tests
          + Discover
          + Best Practices
          + Style Guides
          + Perfomance
          + Libraries
          + Screencasts
          + Suport
          + Concatenating
          + Polyfills
          + Boilerplates
          + Who to follow
          + License

     Web Components the Right Way was made with love by
     [https://twitter.com/mteusortiz]Mateus Ortiz

Specifications

     * [http://w3c.github.io/webcomponents/explainer/]Web Components --
       This document is a non-normative reference, which provides an
       overview of Web Components.
     * [http://w3c.github.io/webcomponents/spec/shadow/]Shadow DOM -- Spec
       of Shadow DOM
     * [http://w3c.github.io/webcomponents/spec/imports/]HTML Imports --
       Spec of HTML imports
     * [https://html.spec.whatwg.org/multipage/scripting.html#the-template
       -element]Template -- Spec of Template
     * [http://w3c.github.io/webcomponents/spec/custom/]Custom Elements --
       Spec Custom Elements is cherry on cake.

Blogs

     * [http://webcomponents.org/]WebComponents.org a place to discuss and
       evolve web component best-practices
     * [https://www.polymer-project.org/1.0/blog/]Polymer Blog The latest
       goings-on with the Polymer project and in the community.

Reading

Overview

     * [https://github.com/basic-web-components/components-dev/wiki/Ten-Pr
       inciples-for-Great-General-Purpose-Web-Components]Ten Principles
       for Great General Purpose Web Components This page lays out a set
       of principles for creating general-purpose web components that can
       be readily adopted in a wide range of sites and application.
     * [https://css-tricks.com/modular-future-web-components/]Modular
       future Web Components A Guide to Web Components
     * [http://www.akitaonrails.com/2014/07/06/web-components-e-uma-revolu
       cao]Web Components é uma Revolução? PT-br Existe uma nova
       celebridade na cidade, e seu nome é "Web Components". Ultimamente
       muitos apresentam esta nova tecnologia como o 'Santo Graal' que vai
       resolver todos os problemas da Web. Este artigo não é um apoio
       incondicional, não é uma crítica negativa irrefutável, mas
       meramente uma apresentação de perspectivas com o objetivo de dar
       clareza.
     * [http://www.leggetter.co.uk/2014/08/06/state-componentised-web.html
       ]The State of the Componentised Web The idea of building
       applications out of a number of independent components isn't
       anything new. But with Web Components is a good time to look at
       component-based application development, how we benefit from taking
       this approach, how we can build our applications in this way using
       existing technologies and how we're likely to be building our
       front-end web apps in the future.
     * [http://kaytcat.github.io/web-components/]Web Components and their
       role in the future of web development A discussion surrounding the
       history and future of Web Components in modern web development.
     * [http://cbateman.com/blog/a-no-nonsense-guide-to-web-components-par
       t-1-the-specs/]A No-Nonsense Guide to Web Components A multi-part
       series with a crash course on Web Components specs, polyfills,
       performance, accessibility, and more.
     * [https://medium.com/the-ui-files/understanding-web-components-d051b
       aa66019]Understanding Web Components Another overview of web
       components specs and explanation of their advantages:
       composability, encapsulation, reusability.
     * [http://www.backalleycoder.com/2016/08/26/demythstifying-web-compon
       ents/]Demythstifying Web Components An attempt to conclusively curb
       stomp the seemingly endless FUD that circulates about Web Component

Custom Elements

     * [https://developers.google.com/web/fundamentals/getting-started/pri
       mers/customelements]Custom elements v1: reusable web components
       With Custom Elements, web developers can create new HTML tags,
       beef-up existing HTML tags, or extend the components other
       developers have authored.
     * [https://www.webreflection.co.uk/blog/2016/08/21/custom-elements-v1
       ]Reintroducing Custom Elements V1 A post describing changes in
       version V1 of Custom Elements which has been agreed by all major
       browsers vendors so that it is, finally today, a safe bet.
     * [https://medium.com/dev-channel/the-case-for-custom-elements-part-1
       -65d807b4b439]The Case for Custom Elements: Part 1 The case for why
       Custom Elements make sense, especially for large organizations.
     * [https://medium.com/dev-channel/the-case-for-custom-elements-part-2
       -2efe42ce9133]The Case for Custom Elements: Part 2 A post
       describing some of the features that make Custom Elements
       compelling if you're considering building your own component
       library.
     * [https://github.com/shawnbot/custom-elements]All about HTML Custom
       Elements A detailed overview including the differences between
       Custom Elements v0 and v1.
     * [https://developer.mozilla.org/en-US/docs/Web/Web_Components/Custom
       _Elements]Custom Elements at Mozilla Developer Network
     * [https://webkit.org/blog/7027/introducing-custom-elements/]Introduc
       ing Custom Elements The Custom Elements API has been implemented
       and enabled by default in the Safari Technology Preview 18.

Shadow DOM

     * [https://developers.google.com/web/fundamentals/getting-started/pri
       mers/shadowdom]Shadow DOM v1: self-contained web components With
       Shadow DOM, you can bundle CSS with markup, hide implementation
       details, and author self-contained components in vanilla
       JavaScript.
     * [http://hayato.io/2016/shadowdomv1/]What's New in Shadow DOM v1 (by
       examples) This document is an attempt to track the difference
       between Shadow DOM v0 and v1.
     * [http://substantial.com/blog/2014/02/05/accessibility-and-the-shado
       w-dom]Accessibility and the Shadow DOM A lesson on rendering trees,
       emerging technologies and tacos
     * [https://webkit.org/blog/4096/introducing-shadow-dom-api/]Introduci
       ng Slot-Based Shadow DOM API Version 1 of the Shadow DOM standard
       was shipped in Safari 10.0.

Templates

     * [http://webcomponents.org/articles/introduction-to-template-element
       /]Introduction to the template elements Templates allow teams to
       divide their work.

HTML imports

     * [http://robdodson.me/exploring-html-imports/]Exploring HTML Imports
       Web Components have come a long way in the past few months. HTML
       Imports allow you to load additional documents into your page
       without having to write a bunch of ajax. This is great for Custom
       Elements where you might want to import a suite of new tags.

Frameworks

     * [http://aurelia.io/]Aurelia - Aurelia is a JavaScript client
       framework for mobile, desktop and web leveraging simple conventions
       and empowering creativity.
     * [http://mikaturunen.github.io/polymer-meetup-tampere-presentation/]
       Polymer vs Angular 2 Which one should I choose?
     * [http://pascalprecht.github.io/2014/07/21/polymer-vs-x-tag-here-is-
       the-difference/]Polymer vs. X-Tag Polymer vs. X-Tag - Here's the
       difference
     * [http://www.binpress.com/blog/2014/06/26/polymer-vs-angular/]Polyme
       r vs Angular Here's the difference between Polymer and Angular

Interoperability

     * [http://pascalprecht.github.io/2014/10/25/integrating-web-component
       s-with-angularjs/]Integrating Web Components with AngularJS This
       article focuses on the integration of Web Components with the
       AngularJS of today and the AngularJS of tomorrow.
     * [http://addyosmani.com/blog/component-interop-with-react-and-custom
       -elements/]React and Custom Elements Component Interop with React
       and Custom Elements
     * [https://github.com/webcomponents/sass-interop]Interop Sass A demo
       of interoperability between Sass and Polymer.
     * [https://github.com/webcomponents/less-interop]Interop Less A demo
       of interoperability between Less and Polymer.
     * [https://github.com/webcomponents/angular-interop]Interop Angular A
       demo of interoperability between Polymer and AngularJs.
     * [https://github.com/vaadin/angular2-polymer]Angular2-Polymer A
       directive factory that allows using Polymer based Web Components in
       Angular 2 applications.

Generators

     * [https://github.com/webcomponents/generator-element]Generator
       Elements A Yeoman Generator that provides a functional boilerplate
       to easily create Custom Elements using Polymer, X-Tag or VanillaJS.
     * [https://github.com/yeoman/generator-polymer/]Generator Polymer
       Yeoman generator for scaffolding Polymer apps
     * [https://github.com/x-tag/yo-x-tag-generator]Geneator X-Tag X-Tag
       generator for Yeoman
     * [https://github.com/webcomponents/slush-element]Slush Element A
       Slush Generator that provides a functional boilerplate to easily
       create Custom Elements using Polymer, X-Tag or VanillaJS.

Tests

     * [https://github.com/PolymerElements/seed-element]Seed-Element
       Polymer element boilerplate Tests
     * [https://github.com/Polymer/web-component-tester]Web Component
       Tester web-component-tester makes testing your web components a
       breeze!

Discover

     * [http://bower.io/search/?q=web-components]Bower search Bower search
       Web Components
     * [http://builtwithpolymer.org/]Built with Polymer A curated
       collection of web apps and websites using Polymer
     * [https://github.com/abdonrd/PolymerProjects]Polymer Projects
       Projects using Polymer
     * [https://component.kitchen/]Components Kitchen The best ingredients
       for your web apps
     * [https://customelements.io/]Custom Elements A web components
       gallery for modern web apps

Best Practices

     * [http://webcomponents.org/articles/web-components-best-practices/]W
       eb Components best practices Web Components (WC) are a new set of
       web platform features that enable developers to build applications
       in a declarative, composable way.
     * [http://webcomponents.org/articles/how-should-i-name-my-element/]Ho
       w should I name my element? Naming is always a challenging task
       when developing a component. We can create truly complex pieces of
       code but we still have a hard time to name a simple variable.
     * [https://www.christianheilmann.com/2014/04/18/web-components-and-yo
       u-dangers-to-avoid/]WEB COMPONENTS AND YOU - DANGERS TO AVOID Web
       Components are a hot topic now. Creating widgets on the web that
       are part of the browser's rendering flow is amazing.
     * [http://tableless.com.br/melhores-praticas-web-components/]Melhores
       Práticas Web Components PT-br Conheça práticas simples que podem
       ajudar na organização do seu web component.
     * [http://addyosmani.com/blog/the-webs-declarative-composable-future/
       ]The Web's Declarative, Composable Future This year, the platform
       is getting Web Components, bringing forward a way to make the
       relationships between markup and behaviour a lot less vague when
       you're looking at the HTML.

Style Guides

     * [https://github.com/GoogleWebComponents/style-guide]Google Web
       Components Style Guide This guide serves as an extension to the
       Google JavaScript Style Guide with additional style guidance around
       authoring Web Components, particuarly those in this element
       collection. It is targeted at Google engineers, but may be useful
       for others too.
     * [http://polymerelements.github.io/style-guide/]Polymer Elements
       Style Guide

Performance

     * [https://www.youtube.com/watch?v=m3EPIeKaDCU]High Performance Web
       Components HTML5DevConf May 2014: Steve Souders, Fastly : High
       Performance Web Components

Libraries

     * [https://www.polymer-project.org/]Polymer Polymer is a new type of
       library for the web, built on top of Web Components, and designed
       to leverage the evolving web platform on modern browsers.
     * [https://x-tag.readme.io/]X-Tag X-Tag is a small JavaScript
       library, created and supported by Mozilla, that brings Web
       Components Custom Element capabilities to all modern browsers.
     * [http://bosonic.github.io/]Bosonic Bosonic is a set of tools that
       enable you to build Web Components as the spec currently describes,
       and supporting not-so-modern browsers like IE9.
     * [https://www.dartlang.org/polymer/]Polymer Dart Polymer.dart is a
       Dart port of Polymer. Build Web Components with Dart, and
       interoperate with Web Components built with JavaScript.
     * [https://github.com/skatejs/skatejs]Skate Skate is a web component
       library that is focused on being a tiny, performant,
       syntactic-sugar for binding behaviour to custom and existing
       elements without ever having to worry about when your element is
       inserted into the DOM.
     * [https://www.bitsrc.io/]Bit Bit lets you easily
       [https://github.com/teambit/bit]create reusable web components from
       any context. You can store and organize your components together
       and still find, modify, test and use them individually in any
       application.

Screencasts

     * [https://www.youtube.com/playlist?list=PLOU2XLYxmsII5c3Mgw6fNYCzaWr
       sM3sMN]Polycasts with Rob Dodson Rob Dodson from the Chrome
       Developer Relations team explores the ins and outs of Polymer.
     * [https://www.youtube.com/watch?v=WX6Hbi-xSUI]Setting up Bower and
       Polymer I wanted to show how easy it is to get Bower and Polymer
       setup.
     * [https://www.youtube.com/watch?v=INH_OW4lFSs]YOLOmer! Polymer and
       Yeoman for lighting fast dev 'Allo! Rob Dodson here, your host on
       this tour of the new Polymer generator for Yeoman.
     * [https://www.youtube.com/watch?v=owT5n9jlzVI&list=UU5f2WvUyrAkoktfi
       Iuu7a-A]Configurando Bower e Polymer PT-br mostrando como é fácil
       começar a instalação do Bower e do Polymer

Support

     * [http://jonrimmer.github.io/are-we-componentized-yet/]Are We
       Componentized Yet? Tracking the progress of Web Components through
       standardisation, polyfillification, and implementation.

Concatenate

     * [https://github.com/polymer/vulcanize]Vulcanize Concatenate a set
       of Web Components into one file

Polyfills

     * [https://github.com/WebComponents/webcomponentsjs]WebComponentsjs:
       A polyfill for Custom Elements, Shadow DOM, HTML Imports, Weakmap,
       and Mutation Observers
     * [https://github.com/webcomponents/custom-elements]custom-elements:
       A polyfill for the v1 spec for Custom Elements.

Boilerplates

     * [https://github.com/webcomponents/polymer-boilerplate]Polymer
       Boilerplate A bare minimum custom element starter-kit using
       Polymer.
     * [https://github.com/webcomponents/xtag-boilerplate]X-Tag
       Boilerplate A bare minimum custom element starter-kit using X-Tag.
     * [https://github.com/webcomponents/element-boilerplate]VanillaJS
       Boilerplate A bare minimum custom element starter-kit using
       VanillaJS.

Who To Follow

   [https://twitter.com/ebidel]Eric Bidelman
   [https://twitter.com/addyosmani]Addy Osmani
   [https://twitter.com/rob_dodson]Rob Dodson
   [https://twitter.com/web_components]Web Components
   [https://twitter.com/polymer]Polymer
   [https://twitter.com/ebidel]Eric Bidelman
   [https://twitter.com/addyosmani]Addy Osmani
   [https://twitter.com/rob_dodson]Rob Dodson
   [https://twitter.com/web_components]Web Components
   [https://twitter.com/polymer]Polymer
   [https://twitter.com/jkomoros]Alex Komoroske
   [https://twitter.com/PascalPrecht]Pascal
   [https://twitter.com/zenorocha]Zeno Rocha
   [https://twitter.com/csuwildcat]Daniel Buchner
   [https://twitter.com/hopefulcyborg]Angelina Fabbro
   [https://twitter.com/jkomoros]Alex Komoroske
   [https://twitter.com/PascalPrecht]Pascal Precht
   [https://twitter.com/zenorocha]Zeno Rocha
   [https://twitter.com/csuwildcat]Daniel Buchner
   [https://twitter.com/hopefulcyborg]Angelina Fabbro

   [https://twitter.com/eduardolundgren]Eduardo |
   [https://twitter.com/passy]Pascal Hartig |
   [https://twitter.com/sindresorhus]Sindre Sorhus |
   [https://twitter.com/codepo8]Christian --- | --- | --- | --- | ---
   [https://twitter.com/eduardolundgren]Eduardo lundgren |
   [https://twitter.com/passy]Pascal Hartig |
   [https://twitter.com/sindresorhus]Sindre Sorhus |
   [https://twitter.com/codepo8]Christian Heilmann

License

   Copyright 2014, All rights reserved.

   Code licensed under the: [http://mateusortiz.mit-license.org/]MIT
   license

   @author Mateus Ortiz [mailto:mteusortiz@gmail.com]mteusortiz@gmail.com

     * © 2018 GitHub, Inc.
     * [https://github.com/site/terms]Terms
     * [https://github.com/site/privacy]Privacy
     * [https://help.github.com/articles/github-security/]Security
     * [https://status.github.com/]Status
     * [https://help.github.com/]Help

   [https://github.com/]
     * [https://github.com/contact]Contact GitHub
     * [https://developer.github.com/]API
     * [https://training.github.com/]Training
     * [https://shop.github.com/]Shop
     * [https://blog.github.com/]Blog
     * [https://github.com/about]About

   (BUTTON) You can't perform that action at this time.

   You signed in with another tab or window.
   [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/webcomponents-the
   -right-way]Reload to refresh your session. You signed out in another
   tab or window.
   Reload to refresh your session.

   (BUTTON)

   Press h to open a hovercard with more details.
