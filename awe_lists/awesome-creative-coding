   #GitHub
   [https://github.com/terkelg/awesome-creative-coding/commits/master.atom
   ]Recent Commits to awesome-creative-coding:master

   Skip to content
   [https://github.com/]
     * Features
     * Explore
     * Pricing

   This repository
   ____________________
   
   Sign in or Sign up

     * Watch
       236
     * [file://localhost/login?return_to=%2Fterkelg%2Fawesome-creative-cod
       ing]Star
       3,462
     * Fork
       244

awesome-creative-coding

   Issues 3
   Projects 0
   Insights
   (BUTTON) Dismiss

Join GitHub today

   GitHub is home to over 20 million developers working together to host
   and review code, manage projects, and build software together.

   Sign up
   ¨ Creative Coding: Generative Art, Data visualization, Interaction
   Design, Resources.
   [https://creativecoding.rocks/]https://creativecoding.rocks
   awesome
   interaction-design
   list
   awesome-list
   data-visualization
   art
   shaders
   computer-graphics
   26
       5 commits
     * 1 branch
     * 0
       releases
     * 24 contributors

    1. HTM
       L 100.0%

   HTML
   Clone or download

Clone with HTTPS [https://help.github.com/articles/which-remote-url-should-i-use]

   Use Git or checkout with SVN using the web URL.
   https://github.com/t
   Do
   wnload ZIP

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching Xcode...

   If nothing happens, [https://developer.apple.com/xcode/]download Xcode
   and try again.

   (BUTTON) Go back

Launching Visual Studio...

   If nothing happens, [https://visualstudio.github.com/]download the
   GitHub extension for Visual Studio and try again.

   (BUTTON) Go back
   Find file
   (BUTTON) Branch: master
   Switch branches/tags
   ____________________
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-creat
       ive-coding]Branches
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-creat
       ive-coding]Tags

   master
   Nothing to show
   Nothing to show
   (BUTTON) New pull request
   Fetching latest commit...
   Cannot retrieve the latest commit at this time.
   Permalink
   Failed to load latest commit information.
   w
   ebsite
   [file://localhost/terkelg/awesome-creative-coding/commit/60249ce9cc0d71
   35927a21cecf8deea8ce33fd5f]Added simple splash page Aug 28, 2017
   [file://localhost/terkelg/awesome-creative-coding/blob/master/README.md
   ]README.md
   [file://localhost/terkelg/awesome-creative-coding/commit/fba147f33ee74b
   fdadbb351fdcbbaf623bc3f1c8]Added Phidgets to Hardware Apr 9, 2018
   [file://localhost/terkelg/awesome-creative-coding/blob/master/code-of-c
   onduct.md]code-of-conduct.md
   [file://localhost/terkelg/awesome-creative-coding/commit/d2201b8df037a3
   1dccb8d0818b9bfb5728f96cee]code of conduct and contrubuting guide Nov
   16, 2016
   contributing.md
   fix format of contributing.md Oct 5, 2017
   cover.png
   New cover Apr 2, 2017
   
   logo.png
   Changed to PNG logo Jan 16, 2017

README.md

Awesome



     Carefully curated list of awesome
     [https://en.wikipedia.org/wiki/Creative_coding]creative coding
     resources primarily for beginners/intermediates.

   Creative coding is a different discipline than programming systems. The
   goal is to create something expressive instead of something functional.
   Interaction design, information visualization and generative art are
   all different types of creative coding - which has become a household
   term describing artworks articulated as code.

   You might also like
   [https://github.com/mattdesl/graphics-resources]Graphics resources and
   [https://github.com/eug/awesome-opengl]Awesome OpenGL.

   Please read the
   contribution guidelines before contributing.
     __________________________________________________________________

Contents

     * Books
     * Online Books
     * Courses
     * Tools
          + Frameworks o
            Libraries o Ecosystems
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#visual-programming-languages]Visual
            Programming Languages
          + Sound Programming
            Languages
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#web-programming--libraries]Web Programming o
            Libraries
          + Projection Mapping o
            VJing
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#online]Online
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#hardware]Hardware
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#other]Other
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-creat
       ive-coding#learning-resources]Learning Resources
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#videos]Videos
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#talks]Talks
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#articles]Articles
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-creative-coding#shaders--opengl--webgl]Shaders o
                 OpenGL o WebGL
               o Canvas
               o Hardware
               o Other
          + Interactive
          + Quick References
            o Cheat-Sheets
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-creat
       ive-coding#communities]Communities
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#subreddits]Subreddits
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#slack]Slack
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            creative-coding#other-2]Other
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-creat
       ive-coding#math]Math
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-creat
       ive-coding#machine-learning--computer-vision--ai]Machine learning o
       Computer Vision o Ai
     * Inspiration
     * Events
     * Schools o Workshops
     * Blogs o Websites
     * Related

Books

     * [http://zenbullets.com/book.php]Generative Art: A Practical Guide -
       Practical guide using Processing.
     * [http://www.generative-gestaltung.de/]Generative Design -
       Visualize, Program, and Create with Processing.
     * [http://natureofcode.com/]The Nature of Code - Simulating natural
       systems with Processing.
     * [https://programmingdesignsystems.com/]Programming Design Systems -
       Practical introduction to the new foundations of graphic design.
     * [https://paroj.github.io/gltut/]Learning Modern 3D Graphics
       Programming - Series of tutorials on using OpenGL to do graphical
       rendering.
     * [http://shop.oreilly.com/product/9780596154158.do]Programming
       Interactivity - Designer's Guide to Processing, Arduino, and
       openFrameworks.
     * [https://www.packtpub.com/application-development/openframeworks-es
       sentials]openFrameworks Essentials - openFrameworks beginner Guide
       for programmer, visual artist, or designer.
     * [https://www.packtpub.com/application-development/mastering-openfra
       meworks-creative-coding-demystified]Mastering openFrameworks:
       Creative Coding Demystified - Advanced in depth guide to
       openFrameworks.
     * [https://www.amazon.com/Algorithms-Visual-Design-Processing-Languag
       e/dp/0470375485]Algorithms for Visual Design Using the Processing
       Language - Experiment with design problems to create 3D animations,
       GUIs, and more.
     * [http://www.apress.com/us/book/9781430236658]Foundation HTML5
       Animation with JavaScript - Everything you need to know to create
       animation using the HTML5 canvas.
     * [http://www.playingwithchaos.net/]Playing with chaos - Programming
       Fractals and Strange Attractors in JavaScript.
     * [https://www.amazon.com/Ray-Tracing-Weekend-Minibooks-Book-ebook/dp
       /B01B5AODD8/]Ray Tracing in One Weekend - Mini book about Ray
       Tracing.
     * [https://www.packtpub.com/hardware-and-creative/processing-2-creati
       ve-programming-cookbook]Processing 2: Creative Programming Cookbook
       - Guides you to explore the Processing environment using practical
       and useful recipes.
     * [https://www.amazon.com/dp/1472578309/]Data-driven Graphic Design -
       Creative Coding for Visual Communication.
     * [https://www.amazon.com/Real-Time-Rendering-Third-Tomas-Akenine-Mol
       ler/dp/1568814240]Real-Time Rendering - Learn how to use modern
       techniques to generate synthetic three-dimensional images in a
       fraction of a second.
     * [https://www.amazon.com/Graphics-Shaders-Theory-Practice-Second/dp/
       1568814348/]Graphics Shaders: Theory and Practice - Introduction to
       shader programming in general, but focusing on the GLSL shading
       language.
     * [https://www.amazon.com/gp/product/B00LAMQYF2/]Anton's OpenGL 4
       Tutorials - Practical guide to starting 3d programming with OpenGL.
     * [http://www.apress.com/us/book/9781430263371]Physics for JavaScript
       Games, Animation, and Simulations - Teaches JavaScript programmers
       how to incorporate real physics into their HTML5 games, animations,
       and simulations.

Online Books

     * [https://thebookofshaders.com/]The Book of Shaders - Step-by-step
       guide through the abstract and complex universe of fragment
       shaders.
     * [http://webglfundamentals.org/]WebGL Fundamentals - WebGL from the
       ground up. No magic.
     * [http://webgl2fundamentals.org/]WebGL 2 Fundamentals - WebGL2 from
       the ground up. No magic.
     * [https://learnopengl.com/]Learn OpenGL - Extensive tutorial
       resource for learning Modern OpenGL.
     * [http://www.scratchapixel.com/]Scratchapixel 2.0 - Learn Computer
       Graphics From Scratch.
     * [http://openframeworks.cc/ofBook/chapters/foreword.html]ofBook -
       Community-written book/guide on openFrameworks.
     * [http://ogldev.atspace.co.uk/]OGLdev - Collection of modern OpenGL
       tutorials by Etay Meiri.
     * [http://www.opengl-tutorial.org/]OpenGL Tutorial - Site dedicated
       to tutorials for OpenGL 3.3 and later.
     * [https://open.gl/]Open.gl - Guide that teach you the basics of
       using OpenGL.
     * [http://pixelshaders.com/]Pixel Shaders - Interactive Introduction
       to Graphics Programming.
     * [http://openglbook.com/]OpenGLBook - Free OpenGL programming
       tutorial in online book format.
     * [http://graphicscodex.com/projects/projects/index.html]Graphics
       Programming Projects - Book about 3D computational graphics by
       Morgan McGuire.
     * [http://inconvergent.net/generative/]On Generative Algorithms -
       Notes about generating various organic patterns, with examples and
       Python code, by Anders Hoff.

Courses

     * [https://egghead.io/courses/create-3d-graphics-in-javascript-using-
       webgl]Create 3D Graphics in JS Using WebGL - Get started creating
       content with WebGL without any frameworks.
     * [https://egghead.io/courses/learn-html5-graphics-and-animation]Lear
       n HTML5 Graphics and Animation - Introduction to the canvas 2D
       drawing API.
     * [https://classroom.udacity.com/courses/cs291]Interactive 3D
       Graphics - Udacity course that teach you the principles of 3D
       computer graphics.
     * [https://www.coursera.org/learn/interactive-computer-graphics]Inter
       active Computer Graphics - Computer graphics course from Coursera.
     * [http://try.kadenze.com/creative-coder/]Kadenze Creative Coding -
       Selection of Kadenze courses covering p5.js, TensorFlow,
       Max/Jitter, and ChucK.
     * [https://www.edx.org/course/think-create-code-adelaidex-code101x-2]
       Think. Create. Code - EDX course to learn programming with
       ProcessingJS.
     * [https://www.futurelearn.com/courses/creative-coding]Creative
       Coding - FutureLearn course on programming with Processing.
     * [https://www.coursera.org/learn/digitalmedia]Creative Programming
       for Digital Media & Mobile Apps - Coursera course on creative
       coding with processing.
     * [https://imaginary-institute.com/]Imaginary Institute - Learn how
       to create gorgeous interactive graphics.
     * [https://www.futurelearn.com/courses/creative-coding]Future Learn:
       Creative Coding - Use computer programming as a creative discipline
       to generate sounds, images, animations and more.
     * [https://www.khanacademy.org/computing/computer-programming/program
       ming]Intro to JS: Drawing & Animation - Use JavaScript and the
       ProcessingJS library to create drawings and animations.
     * [https://www.khanacademy.org/computing/computer-programming/program
       ming-natural-simulations]Advanced JS: Natural Simulations - Combine
       JS, ProcessingJS, and mathematical concepts to simulate nature in
       your programs
     * [https://www.lynda.com/Processing-tutorials/Interactive-Data-Visual
       ization-Processing/97578-2.html]Interactive Data Visualization with
       Processing - Learn how to read, map, and illustrate data with
       Processing.
     * [https://www.skillshare.com/classes/Programming-Data-Visualizations
       -A-Coding-Toolkit-for-Processing/1782124914]Programming Data
       Visualizations: A Coding Toolkit for Processing - Join information
       designer Nicholas Felton in the world of Processing.
     * [https://www.skillshare.com/classes/Introduction-to-Data-Visualizat
       ion-From-Data-to-Design/1435958330]Introduction to Data
       Visualization - Join Nicholas Felton for a smart, comprehensive,
       and inspiring intro to data visualization.
     * [https://www.skillshare.com/classes/Programming-Graphics-I-Introduc
       tion-to-Generative-Art/782118657]Programming Graphics I,
       [https://www.skillshare.com/classes/Programming-Graphics-II-Generat
       ive-Art-Animation/388564917]2,
       [https://www.skillshare.com/classes/Programming-Graphics-III-Painti
       ng-with-Sound/738981508?]3 - Learn generative art and Processing
       with art with Joshua Davis.

Tools

Frameworks o Libraries o Ecosystems

     * [https://processing.org/]Processing [Cross-platform] - Computer
       programming language and IDE for visual arts.
     * [https://libcinder.org/]Cinder [Cross-platform] - Open source
       library for professional-quality creative coding in C++.
     * [http://openframeworks.cc/]openFrameworks [Cross-platform] - Open
       source C++ toolkit for creative coding.
     * [http://www.c4ios.com/]C4 [iOS] - Open-source creative coding
       framework for iOS.
     * [https://unity3d.com/]Unity [Mac, Win] - Game engine, but useful
       for creative coding and installations.
     * [https://playcanvas.com/]PlayCanvas [Cross-platform] - Open source,
       realtime collaborative WebGL engine.
     * [http://mercury.sexy/hg_sdf/]hg_sdf [Cross-platform] - GLSL library
       for building signed distance functions.

Visual Programming Languages

     * [https://vvvv.org/]vvvv [Mac, Win] - Hybrid visual/textual
       live-programming environment for easy prototyping and development.
     * [https://www.nodebox.net/node/]NodeBox [Mac, Win] - Cross-platform,
       node-based GUI for efficient data visualizations and generative
       design.
     * [http://www.derivative.ca/]TouchDesigner [Mac, Win] - Visual
       development platform to create realtime projects.
     * [https://developer.apple.com/library/content/documentation/Graphics
       Imaging/Conceptual/QuartzComposerUserGuide/qc_intro/qc_intro.html]Q
       uartz Composer [Mac] - Development tool for processing and
       rendering graphical data.
     * [http://vuo.org/]Vuo [Mac] - Live interactive-media programming
       environment.
     * [https://cycling74.com/products/max/]Max [Mac, Win] - Visual
       programming language for media.
     * [https://puredata.info/]Pure Data [Cross-platform] - Open source
       visual programming language for multimedia.
     * [http://www.i-score.org/]i-score [Cross-platform] - Interactive
       sequencer to control creative coding libraries and toolkits.
     * [http://tooll.io/]tooll [Win] - Open source tool for creating
       interactive 3d content and animations.
     * [https://xod.io/]XOD [Cross-platform] - Open source visual
       programming language and environment for microcontroller-based
       projects.
     * [https://troikatronix.com/]Isadora [Cross-platform] - Scene based
       media control software with integrated projection mapper.

Sound Programming Languages

     * [http://supercollider.github.io/]SuperCollider [Multi-platform] -
       Platform for audio synthesis and algorithmic composition.
     * [http://chuck.cs.princeton.edu/]ChucK - Strongly-timed, concurrent,
       and on-the-fly music programming language.
     * [https://tidalcycles.org/]TidalCycles - Domain specific language
       for live coding of pattern.
     * [http://sonic-pi.net/]Sonic Pi - The live coding music synth for
       everyone.

Web Programming o Libraries

     * [https://github.com/mrdoob/three.js/]three.js - JavaScript 3D
       library.
     * [https://github.com/regl-project/regl]regl - Functional WebGL.
     * [http://stack.gl/]Stackgl - Open software ecosystem for WebGL,
       built on top of browserify and npm.
     * [http://paperjs.org/]Paper.js - The swiss army knife of vector
       graphics scripting.
     * [http://www.pixijs.com/]Pixi.js - HTML 5 2D rendering engine that
       uses webGL with canvas fallback.
     * [https://p5js.org/]p5.js - JavaScript library that starts with the
       original goal of Processing.
     * [http://fabricjs.com/]Fabric.js - Javascript canvas library,
       SVG-to-canvas parser.
     * [https://maker.js.org/]Maker.js - Parametric line drawing for SVG,
       CNC & laser cutters.
     * [https://openjscad.org/]OpenJSCAD - Programmatic 3D modeling in
       JavaScript.
     * [http://soulwire.github.io/sketch.js/]Sketch.js - Minimal
       JavaScript creative coding framework.
     * [https://two.js.org/]Two.js - Two-dimensional drawing api geared
       towards modern web browsers.
     * [http://claygl.xyz/]ClayGL - WebGL graphic library for building
       scalable Web3D applications.

Projection Mapping o VJing

     * [http://www.madmapper.com/]MadMapper [Mac] - Video mapping
       projections and Light mapping.
     * [https://vidvox.net/]VDMX [Mac] - Realtime multimedia performance
       application.
     * [http://www.modul8.ch/]Modul8 [Mac] - Real time video mixing and
       compositing.
     * [https://resolume.com/]Resolume [Mac, Win] - Mixing of digital
       video and effects in a realtime.
     * [http://imimot.com/cogevj/]CoGe VJ [Mac] - VJ software designed for
       realtime HD video mixing and compositing with a modular user
       interface.
     * [https://github.com/baku89/VirtualMapper]VirtualMapper - Realtime
       preview tool for projection mapping.

Online

     * [https://www.shadertoy.com/]Shadertoy - Build and share shaders
       with the world and get inspired.
     * [http://glslb.in/]GLSLbin - Fragment shader sandbox with support
       for glslify.
     * [http://glslsandbox.com/]GLSL Sandbox - Online shader editor and
       gallery.
     * [http://shdr.bkcore.com/]Shdr Editor - Online shader editor.
     * [http://codepen.io/]CodePen - Show case of advanced techniques with
       editable source code.
     * [http://www.cdglabs.org/Shadershop/]Shadershop - Interface for
       programming GPU shaders.
     * [https://www.vertexshaderart.com/]Vertexshaderart - Online shader
       editor and gallery.
     * [http://cyos.babylonjs.com/]Cyos - Online shader editor.
     * [http://editor.thebookofshaders.com/]GlslEditor - Simple WebGL
       Fragment Shader Editor.
     * [https://www.openprocessing.org/]OpenProcessing - Create and
       experiment with algorithmic design, Processing and P5.js.

Hardware

     * [https://www.arduino.cc/]Arduino - Open source microcontroller kits
       for building digital devices and interactive objects.
     * [https://www.raspberrypi.org/]Raspberry Pi - Small single-board
       computers.
     * [https://www.puck-js.com/]Puck.js - Open source JavaScript
       microcontroller you can program wirelessly.
     * [http://beagleboard.org/]BeagleBoard - Low-power open source
       single-board computers.
     * [http://www.makeymakey.com/]Makey Makey - Turn everyday objects
       into touchpads and combine them with the internet.
     * [https://tessel.io/]Tessel - Easy to use microcontroller that runs
       JavaScript.
     * [https://www.leapmotion.com/]Leap Motion - Sensor device that
       supports hand and finger motions as input.
     * [https://www.axidraw.com/]AxiDraw - Simple, modern, and precise pen
       plotter.
     * [https://www.phidgets.com/]Phidgets - Sensors, input devices and
       controllers for computers.

Other

     * [http://structuresynth.sourceforge.net/]Structure Synth
       [Cross-platform] - Application for generating 3D structures by
       specifying a design grammar.
     * [http://www.syedrezaali.com/f3-mac-app/]F3 [Mac] - Powerful 3D
       design app that enables you to live code 3D form.
     * [http://www.syedrezaali.com/store/fragment-osx-app]Fragment [Mac]-
       App to live code GLSL graphics.
     * [http://store.steampowered.com/app/314720/]ShaderTool [Win] -
       Modern shader IDE for programmers and FX artists.
     * [http://syphon.v002.info/]Syphon [Mac] - Allows applications to
       share frames with one another in realtime.
     * [https://hexler.net/software/kodelife]KodeLife - Real-time GPU
       shader editor, live-code performance tool and graphics prototyping
       sketchpad.
     * [https://www.interactiveshaderformat.com/]ISF - GLSL shaders for
       use in interactive applications.
     * [http://patriciogonzalezvivo.com/2015/glslViewer/]glslViewer -
       Live-coding console tool that renders GLSL Shaders.
     * [http://www.drawbot.com/]DrawBot [Mac] - Education oriented 2d
       graphics programming environment based on python.
     * [https://github.com/keijiro/Klak]Klak - A collection of scripts for
       creative coding with Unity.

Learning Resources

Videos

     * [https://www.youtube.com/user/shiffman]The Coding Train - Daniel
       Shiffman makes videos about creative coding.
     * [https://www.youtube.com/playlist?list=PLW3Zl3wyJwWMpFSRpeMmSBGDShb
       kiV1Cq]MFGD - Fragment Shaders - YouTube playlist about fragment
       shaders.
     * [https://www.youtube.com/channel/UCDk9-aPr8zQzwi4ylnuoJ6w]Shaders
       Laboratory - YouTube channel about shaders.
     * [https://www.youtube.com/channel/UCEklP9iLcpExB8vp_fWQseg]Makin'
       Stuff Look Good - YouTube channel about shaders case studies.
     * [https://www.youtube.com/watch?v=IKSTo_0pB28&index=51&list=PL4neAtv
       21WOmrV8z9rSzL20QpdLU1zJLr]openFrameworks tutorials - YouTube
       playlist about openFrameworks.
     * [https://www.youtube.com/watch?v=LtFujAtKM5I&list=PLMinhigDWz6emRKV
       kVIEAaePW7vtIkaIF]Fun with WebGL 2.0 - YouTube playlist about WebGL
       2.0.
     * [https://www.youtube.com/playlist?list=PLRtjMdoYXLf6zUMDJVRZYV-6g6n
       62vet8]Modern OpenGL 3.0+ Tutorials - YouTube playlist about modern
       OpenGL.
     * [https://www.youtube.com/channel/UC6IqL5vkMJpqBG_bFDjsaxw]Vertexsha
       derart - YouTube playlist about vertex shaders.
     * [https://www.youtube.com/playlist?list=PL08jItIqOb2qyMOhtEUoLh100Kp
       ccQiRf]Diving in Three.js - YouTube playlist diving into three.js.
     * [https://www.youtube.com/watch?v=u5HAYVHsasc&list=PLGmrMu-IwbguU_nY
       2egTFmlg691DN7uE5]Shadertoy Tutorials - YouTube playlist teaching
       you how to make shaders, starting with zero knowledge using
       shadertoy.
     * [https://www.youtube.com/playlist?list=PLxaZqnd-OQM7Y0lfe7h2cjlQAm5
       O9_6UL]WebGL Lightning - Introduction to WebGL lightning with Greg
       Tatum.

Talks

     * [http://davidscottlyons.com/threejs/presentations/frontporch14/]Int
       ro to WebGL Slides
       [https://www.youtube.com/watch?v=6eLl8yQnxHQ]Video - Intro to WebGL
       with three.js.
     * [http://www.iquilezles.org/live/index.htm]Inigo Quilez Live -
       Collection of live coding videos by Íñigo Quílez.
     * [https://slideslive.com/38898318/there-is-also-canvas]There is also
       canvas - Bruno Imbrizi go through the use of canvas for creative
       coding at WebExpo 2016. Interactive slides
       [https://brunoimbrizi.github.io/webexpo-2016/dist/]here.
     * [http://setimeout.com/workshops/gobelins-2016/]Draw. Move. Fail.
       Repeat. - Slides by [https://twitter.com/williamapan]@williamapan
       from his Creative developer workshop at Gobelins.
     * [https://www.youtube.com/playlist?list=PLRIWtICgwaX0u7Rf9zkZhLoLuZV
       fUksDP]OpenGL 3D Game Tutorials - Beginners tutorial series about
       creating 3D games OpenG.
     * [http://how-we-do-this-shit.com/]How We Do This Shit - Talk on how
       tech-based artists do this financially.
     * [http://acko.net/files/fullfrontal/fullfrontal/webglmath/online.htm
       l]Making WebGL Dance - How I Learnt to Stop Worrying and Love
       Linear Algebra.
     * [http://acko.net/files/gltalks/pixelfactory/online.html]The Pixel
       Factory - Talk about WebGL, GPUs and Math by Steven Wittens.

Articles o Tutorials

Shaders o OpenGL o WebGL

     * [https://aerotwist.com/tutorials/an-introduction-to-shaders-part-1/
       ]Introduction to shaders - Part 1 of an introduction to shaders
       using threejs.
     * [https://medium.com/@necsoft/three-js-101-hello-world-part-1-443207
       b1ebe1]Three.js 101 - Introduction to three.js from a creative
       coder perspective.
     * [http://blog.2pha.com/experimenting-threejs-shaders-and-shadermater
       ial]Experimenting with Three.js shaders and the ShaderMaterial -
       Introduction to custom mesh shader materials.
     * [https://github.com/mattdesl/lwjgl-basics/wiki/Shaders]lwjgl:
       Shaders - Shader tutorial in the context of lwjgl-basics.
     * [https://notes.underscorediscovery.com/shaders-a-primer/]Shaders: A
       primer - A primer on shaders.
     * [https://notes.underscorediscovery.com/shaders-second-stage/]Shader
       s: Second stage - The second part to the previous.
     * [https://github.com/Jam3/jam3-lesson-webgl-shader-intro]WebGL
       Lessons -- Fragment Shaders - A brief introduction to fragment
       shaders.
     * [https://github.com/Jam3/jam3-lesson-webgl-shader-threejs]WebGL
       Lessons -- ThreeJS Shaders - Using custom vertex and fragment
       shaders in ThreeJS.
     * [https://github.com/Jam3/threejs-post-process-example]ThreeJS
       post-proces example - example of post-processing effects in
       ThreeJS.
     * [http://www.scratchapixel.com/lessons/3d-basic-rendering/introducti
       on-to-ray-tracing]Ray Marching and Signed Distance Functions -
       Introduction to ray tracing.
     * [http://jamie-wong.com/2016/07/15/ray-marching-signed-distance-func
       tions/]Introduction to Ray Tracing - A simple method for creating
       3D images.
     * [https://github.com/stackgl/glsl-lighting-walkthrough]GLSL lighting
       walkthrough - Phong shading tutorial with glslify.
     * [https://github.com/mattdesl/three-glslify-example]Three glslify
       example - Example on how to use three.js with glslify.
     * [https://github.com/gregtatum/talk-webgl-beyond-dom]WebGL Beyond
       Dom - Greg Tatum explain the basic of WebGL using Regl.
     * [http://barradeau.com/blog/?p=621]FBO particles - Article about
       FBO/GPGPU particles by @nicoptere.
     * [http://barradeau.com/blog/?p=575]Ray marching (with THREE.js) -
       Article about ray marching with three.js by @nicoptere.
     * [https://csantosbh.wordpress.com/2014/01/09/custom-shaders-with-thr
       ee-js-uniforms-textures-and-lighting/]Custom shaders with Three.JS
       - Introduction to custom shaders, uniforms, textures and lighting
       in three.js.
     * [http://duriansoftware.com/joe/An-intro-to-modern-OpenGL.-Chapter-1
       :-The-Graphics-Pipeline.html]An intro to modern OpenGL - First part
       of an introduction to modern OpenGL.
     * [https://github.com/tomdalling/opengl-series]Modern OpenGL Series -
       Good introduction to some of the OpenGL terms.
     * [http://iquilezles.org/www/articles/smin/smin.htm]Smooth minimum -
       Article about the smooth based primitive union.
     * [http://iquilezles.org/www/articles/distfunctions/distfunctions.htm
       ]Modeling with distance functions - Collection of distance
       functions in one centralized place.
     * [http://www.alanzucconi.com/2016/07/01/volumetric-rendering/]Volume
       tric rendering - Explains how to create complex 3D shapes inside
       volumetric shaders.
     * [http://www.realtimerendering.com/]Real-time Rendering - Book, blog
       and collection of resources regarding real-time rendering.
     * [http://antongerdelan.net/opengl/shaders.html]OpenGL 4 Shaders -
       Short and sweet introduction to OpenGL shaders by Anton Gerdelan.
     * [http://www.hugi.scene.org/online/hugi37/hugi%2037%20-%20coding%20a
       dok%20on%20ray%20casting,%20ray%20tracing,%20ray%20marching%20and%2
       0the%20like.htm]On ray casting, ray tracing, ray marching and the
       like - The title says it all. Introduction by Adok.
     * [http://sunandblackcat.com/other.php?l=eng]Sun and Black Cat -
       Articles on shaders and other computer graphics related topics.
     * [http://blog.simonrodriguez.fr/articles/18-02-2017_writing_a_small_
       software_renderer.html]Writing a small software renderer - Really
       good introduction to how basic software rendering works.
     * [http://www.webgltutorials.org/]WebGL Tutorials - Website with a
       really good collection of WebGL tutorials.
     * [http://codepen.io/mcdorli/post/generating-geometry-part-1-basics]G
       enerating Geometry: 1,
       [http://codepen.io/mcdorli/post/generating-geometry-part-2-going-3d
       ]2,
       [http://codepen.io/mcdorli/post/generating-geometry-part-3-getting-
       spherical]3 - Beginner introduction on how to create geometry
       object.
     * [http://www.pshkvsky.com/gif2code/sine-animation-tutorial-three-js/
       ]Three.js sine animation - Learn how to add sine waves to a circle
       with three.js.
       ([http://www.pshkvsky.com/gif2code/sinewaves-animation-tutorial-ope
       nframeworks/]oF version)
     * [https://medium.com/@Zadvorsky/into-vertex-shaders-594e6d8cd804]Int
       o Vertex Shaders - Series of tutorials about WebGL, Three.js, and
       Three.bas.
     * [https://medium.com/@Zadvorsky/into-vertex-shaders-part-1-the-space
       s-of-webgl-c70ded527841]The Spaces of WebGL - Brief overview over
       the different coordinate systems through out the 3D graphics
       pipeline.
     * [http://webgl-workshop.com/]WebGL Workshop - Short and sweet online
       introduction to WebGL.
     * [http://barradeau.com/blog/?p=1109]THREE.js & instanced geometry -
       Fluffy predator with three.js and instanced geometry.
     * [http://www.chinedufn.com/webgl-particle-effect-billboard-tutorial/
       ]Particle Effects via Billboards - How to create a particle effects
       with billboarding and WebGL.
     * [https://peterbeshai.com/beautifully-animate-points-with-webgl-and-
       regl.html]Beautifully Animate Points with WebGL and regl - How to
       create GPGPU particles with regl.
     * WebGL Tutorial:
       Directional Shadow Mapping without extensions - Introduction to the
       concepts behind real time directional light shadow mapping.
     * [http://xem.github.io/articles/#webgl_quest_2]WebGL Quest - A
       tutorial and a list of useful resources to use WebGL raymarching
       and distance functions easily.
     * [http://apoorvaj.io/exploring-bump-mapping-with-webgl.html]Explorin
       g bump mapping with WebGL - Introduction to different bump mapping
       techniques.
     * [http://web.cse.ohio-state.edu/%7Ewang.3602/courses/cse5542-2013-sp
       ring/13-GLSL.pdf]OpenGL/GLSL Shader Programing - Deck on
       OpenGL/GLSL shader programing.
     * [https://codepen.io/DonKarlssonSan/post/particles-in-simplex-noise-
       flow-field]Particles in a Simplex Noise Flow Field - Perlin noise
       flow field tutorial.
     * [https://www.bit-101.com/blog/2017/10/23/flow-fields-part-i/]Flow
       Fields, Part 1
       [https://www.bit-101.com/blog/2017/10/28/flow-fields-part-ii/]Part
       2 - Introduction to flow fields also known as vector fields.
     * [https://research.ncl.ac.uk/game/mastersdegree/graphicsforgames/]Gr
       aphics for Games - Introduction to 3D graphics programming
       including shaders, math post-processing etc. from Newcastle
       University.

Canvas

     * [http://joshondesign.com/p/books/canvasdeepdive/toc.html]HTML
       Canvas Deep Dive - Profound introduction to the canvas API.
     * [http://creativejs.com/2011/08/31-days-of-canvas-tutorials/]31 days
       of Canvas tutorials - Collection of canvas tutorials by Seb
       Lee-Delisle.

Hardware

     * [https://mattdesl.svbtle.com/pen-plotter-1]Pen Plotter Art &
       Algorithms Part 1, [https://mattdesl.svbtle.com/pen-plotter-2]2 -
       How to use the AxiDraw pen plotter with JavaScript.

Other

     * [http://catlikecoding.com/unity/tutorials/]Cat Like Coding - In
       depth tutorials on math, algorithms and Unity.
     * [http://funprogramming.org/]Fun Programming - Learn creative coding
       writing simple programs.
     * [http://www.creativeapplications.net/tutorials/creative-coding-on-i
       os-with-c4-tutorial/]Creative-coding on iOS with C4 - Introduction
       to C4 published on Creative Applications.
     * [http://www.c4ios.com/cosmos/]COSMOS - An end-to-end tutorial on
       the design, programming and launch of an app using C4.
     * [https://www.khanacademy.org/partner-content/pixar/effects/particle
       -physics/a/start-here-fx]Particle Physics - Particle physics
       explained.
     * [https://bost.ocks.org/mike/algorithms/]Visualizing Algorithms -
       Looks at the use of visualization to understand, explain and debug
       algorithms.
     * [http://ruh.li/]Adventures in Game Development World - Easy to
       understand collection of articles on game developement, but
       relevant to creative coding as well.
     * [http://inconvergent.net/shepherding-random-numbers/]Shepherding
       random numbers - Tiny guide to shepherding random numbers.
     * [http://www-cs-students.stanford.edu/%7Eamitp/gameprog.html]Amit's
       Game Programming Information - Collection of resources on stuff
       like path-finding, Ai, math etc.
     * [http://www.tylerlhobbs.com/writings/tips]Tips to Improve Your
       Generative Artwork - Tips to make your art look better.
     * [http://www.tylerlhobbs.com/writings/generative-colors]Working With
       Color in Generative Art - Tips on how to get color right.

Interactive

     * [https://github.com/stackgl/shader-school]Shader-school - Workshop
       for GLSL shaders and graphics programming.
     * [https://github.com/stackgl/webgl-workshop]Webgl-workshop - The
       sequel to shader-school: Learn the WebGL API.
     * [http://hughsk.io/fragment-foundry]Fragment-oundry - Interactive
       fragment shader tutorial.
     * [https://www.shadertoy.com/view/Xl2XWt]SDF Tutorial 1: box &
       balloon - Shadertoy tutorial on raytracing.
     * [https://www.shadertoy.com/view/XllGW4]HOWTO: Ray Marching -
       Shadertoy tutorial on Ray Marching.
     * [https://www.shadertoy.com/view/XlBGDW]Raymarch Tutorial2 -
       Shadertoy raymarch tutorial.
     * [https://www.shadertoy.com/view/Md23DV]GLSL 2D Tutorials -
       Shadertoy GLSL 2D Tutorial.
     * [http://mrl.nyu.edu/%7Eperlin/bubble_breakdown/]Bubble Breakdown -
       Shader breakdown by Perlin.
     * [https://www.shadertoy.com/view/MdBfRK]Let's Make A Ray Marcher -
       Interactive Shader-Toy on writing a ray marcher.

Quick References o Cheatsheets

     * [http://www.shaderific.com/glsl/]Shaderific GLSL - OpenGL ES
       shading language reference.
     * [https://thebookofshaders.com/glossary/]The Book of Shaders
       Glossary - Shader glossary by theme.
     * [https://paroj.github.io/gltut/Basics/Intro%20Glossary.html]gltut
       glossary pages: 1,
       [https://paroj.github.io/gltut/Basics/Tut01%20Glossary.html]2,
       [https://paroj.github.io/gltut/Basics/Tut02%20Glossary.html]3,
       [https://paroj.github.io/gltut/Positioning/Tut04%20Glossary.html]4,
       [https://paroj.github.io/gltut/Positioning/Tut05%20Glossary.html]5,
       [https://paroj.github.io/gltut/Positioning/Tut06%20Glossary.html]6,
       [https://paroj.github.io/gltut/Positioning/Tut07%20Glossary.html]7,
       [https://paroj.github.io/gltut/Positioning/Tut08%20Glossary.html]8
       - OpenGL 3D programming glossary.
     * [https://skilled.co/html-canvas/images/HTML_Canvas_Cheatsheet.pdf]C
       anvas Cheatsheet - Quick and visual canvas cheatsheet.
     * [https://www.khronos.org/files/webgl/webgl-reference-card-1_0.pdf]W
       ebGL Cheatsheet - WebGL 1.0 API reference card.
     * [https://en.wikipedia.org/wiki/Glossary_of_computer_graphics]Glossa
       ry of Computer Graphics - Glossary of terms relating computer
       graphics.
     * [http://www.cs.cmu.edu/afs/cs/academic/class/15462-f10/www/lec_slid
       es/glslref.pdf]GLSL Reference Guide - OpenGL Shading Language quick
       reference guide.
     * [http://antongerdelan.net/teaching/3dprog1/maths_cheat_sheet.pdf]3D
       Maths Cheat Sheet - Math cheatsheet by Anton Gerdelan, from his
       OpenGL book.
     * [http://docs.gl/]docs.GL - Improvement of the official OpenGL
       documentation.
     * [https://www.khronos.org/opengl/wiki/OpenGL_Shading_Language]OpenGL
       Shading Language - Khronos Group GLSL wiki.
     * [https://www.khronos.org/files/opengl43-quick-reference-card.pdf]Op
       enGL 4.3 Reference Card - PDF Reference Card for the OpenGL 4.3
       API.
     * [http://easings.net/]Easings - Interactive easing functions
       cheatsheet.
     * [https://www.artstation.com/artwork/YeBr3]The newbie's PBR Cheat
       Sheet - Short and sweet visual overview on PBR.
     * [http://pixelspiritdeck.com/]PixelSpirit - GLSL library on the back
       of tarot cards, for learning and reference.

Communities

Subreddits

     * [https://www.reddit.com/r/creativecoding/]r/creativecoding -
       Sharing and discussing the use of computer programming as a
       creative discipline.
     * [https://www.reddit.com/r/raytracing/]r/raytraycing - Subreddit on
       raytracing.
     * [https://www.reddit.com/r/opengl/]r/opengl - News and discussion
       about OpenGL on all platforms.
     * [https://www.reddit.com/r/GraphicsProgramming/]r/graphicsprogrammin
       g - Subreddit on graphics programming.
     * [https://www.reddit.com/r/processing/]r/processing - Subreddit on
       Processing.
     * [https://www.reddit.com/r/shaders/]r/shaders - Subreddit on
       shaders.
     * [https://www.reddit.com/r/proceduralgeneration/]r/proceduralgenerat
       ion - Subreddit on procedural generation.
     * [https://www.reddit.com/r/MachineLearning/]r/MachineLearning -
       Subreddit on machine learning.

Slack

     * [https://creative-dev.herokuapp.com/]Creative-Dev Slack - Creative
       Development Slack.
     * [https://genart.herokuapp.com/]Generative Art Slack - Generative
       Art Slack.
     * [http://creative-coding-club.slack.com/]Creative Coding Club -
       Creative Coding Club Slack.
     * [http://the-mccc-project.github.io/creative-coding-sign-up/]Creativ
       e Coding - Creative Coding Slack.
     * [https://ofslack.herokuapp.com/]openFrameworks - openFrameworks
       Slack.

Other

     * [http://creativecodingpodcast.com/]The Creative Coding Podcast -
       Iain and Seb discuss the ins and outs of creative coding.
     * [https://realtimevfx.com/]realtimevfx.com - Real Time VFX
       Community.
     * [http://datastori.es/]Data Stories - Podcast on data visualization.

Math

     * [https://github.com/Jam3/math-as-code]Math as code - Cheat-sheet
       for mathematical notation in code form.
     * [https://www.youtube.com/user/codingmath]Coding Math - Teaches you
       the math you need to understand as a programmer.
     * [https://github.com/terkelg/math]Math snippets - Math snippets with
       graphic programming in mind.
     * [https://www.youtube.com/watch?v=0ifChJ0nJfM]Formul Animations -
       The principles of painting with maths.
     * [https://github.com/silviopaganini/maths]Learning Maths again -
       Collection of JS and GLSL math snippets.
     * [https://github.com/mattdesl/eases]Eases - Grab-bag of modular
       easing equations.
     * [https://soulwire.co.uk/math-for-motion/]Math for Motion -
       Visualization of different motion equations.
     * [http://matrixmultiplication.xyz/]Matrix Multiplication - Matrix
       multiplication visualized.
     * [http://algebrarules.com/]Algebra rules - The most useful rules of
       basic algebra.
     * [http://immersivemath.com/ila/index.html]Immersive Math - Fully
       interactive linear algebra.
     * [http://setosa.io/ev/image-kernels/]Image Kernels - Interactive and
       visual introduction to image kernels.
     * [http://setosa.io/ev/sine-and-cosine/]Sine and Cosine - Interactive
       explination of sine and cosine.
     * [https://eev.ee/blog/2016/05/29/perlin-noise/]Perlin Noise - Perlin
       noise explained in detail.
     * [http://programmedlessons.org/VectorLessons/]Vector Math for 3D
       Computer Graphics - Tutorial on vector algebra and matrix algebra
       from the viewpoint of computer graphics.
     * [https://www.desmos.com/]Desmos - Graph functions, plot data,
       evaluate equations, explore transformations, and much more.
     * [https://www.youtube.com/playlist?list=PLW3Zl3wyJwWNQjMz941uyOIq3Nw
       6bcDYC]MFGD - Math for game developers YouTube playlist.
     * [https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF
       8hE_ab]Essence of linear algebra - Essence of linear algebra
       YouTube playlist.
     * [https://winkervsbecks.github.io/mathematics-of-animation/#/]Mathem
       atics of Animation - Slides about the mathematics of animation
       ([https://github.com/winkerVSbecks/mathematics-of-animation]repo).
     * [https://kynd.github.io/p5sketches/index.html]Sketching with Math
       and Quasi Physics - Beautiful and visual introduction to math and
       quasi physics.
     * [http://genekogan.com/code/p5js-perlin-noise/]Gene Kogan: Perlin
       Noise - introduction to 2D and 3D perlin noise.
     * [https://medium.com/@Zadvorsky/into-vertex-shaders-addendum-1-matri
       x-math-and-you-565a51094472]Matrix Math and You - High level
       introduction to matrices.
     * [http://www.rapidtables.com/math/symbols/Basic_Math_Symbols.htm]Mat
       hematical Symbols - List of all mathematical symbols and signs.
     * [http://ncase.me/matrix/]The magnificent 2d matrix - Interactive
       tool to better understand transformation matrices.
     * [http://www.somethinghitme.com/2013/11/13/snippets-i-always-forget-
       movement/]Game Dev Movement cheatsheet with examples - JavaScript
       math snippets for movement.
     * [https://gist.github.com/xem/99930986c5333125a13b0ea50600391f]Maths
       & trigonometry cheat sheet for 2D & 3D games - Maths cheat-sheet
       for 2D and 3D game-makers.
     * [https://cantelope.org/tiny_3D/]Tiny 3D - The smallest possible
       perspective engine on a 2D canvas.
     * [https://www.youtube.com/watch?v=4k9wTfxfkJU&list=PLxaZqnd-OQM7k2Gp
       3xu02VzExGKMKgqY2]Matrices for Creative Coding - Introduction to
       matrices by Greg Tatum.
     * [https://acko.net/tv/wdcode/]Making Things With Maths - Talk by
       Steven Wittens about bezier curves, procedural generation, physics
       engines and fractals.
     * [https://www.myphysicslab.com/]MyPhysicsLab - Interactive real-time
       physics simulations, with formulars and code.

Machine learning o Computer Vision o Ai

     * [http://ml4a.github.io/]ml4a - Machine learning for artists.
     * [https://transcranial.github.io/keras-js/]Keras.js - Run Keras
       models (tensorflow backend) in the browser, with GPU support.
     * [http://tesseract.projectnaptha.com/]Tesseract.js - Pure Javascript
       Multilingual OCR.
     * [https://cloud.google.com/ml/]Google ML - Cloud machine learning by
       Google.
     * [https://www.tensorflow.org/]TensorFlow - Open source software
       library for machine intelligence.
     * [http://cs.stanford.edu/people/karpathy/convnetjs/started.html]Conv
       NetJS - Deep Learning in your browser.
     * [http://www.wekinator.org/]Wekinator - Allows anyone to use machine
       learning.
     * [https://github.com/CodingTrain/Machine-Learning]Machine Learning -
       Coding Train repo with links to machine learning resources.
     * [http://www.creativeai.net/]CreativeAi.net - Space to share
       creative Ai projects.
     * [http://aiplaybook.a16z.com/]AI Playbook - Ai microsite intended to
       help newcomers get started.
     * [https://github.com/googlecreativelab/teachable-machine]Teachable
       Machine - Explore how machine learning works, live in the browser.

Inspiration

     * [https://www.openprocessing.org/]OpenProcessing - Algorithmic
       Designs Created with Processing, p5js and processingjs.
     * [https://www.dwitter.net/]Dwitter - Social network for short
       JavaScript demos.
     * [https://www.chromeexperiments.com/]Chrome Experiments - Showcase
       of web experiments written by the creative coding community.
     * [http://codedoodl.es/]Codedoodl.es - Showcase of curated creative
       coding sketches.
     * [http://fyprocessing.tumblr.com/]For your Processing - Projects and
       tutorials about Processing.
     * [http://www.artfromcode.com/]Art From Code - Code sketches by Keith
       Peters.
     * [https://www.flickr.com/groups/generatorx/]Generator.x - Flickr
       group about generative strategies in art & design.
     * [https://www.flickr.com/groups/generativeart/]Generative Art -
       Flickr group about generative art.
     * [https://github.com/nucliweb/People-You-Should-Follow-on-CodePen]Pe
       ople You Should Follow on CodePen - List of interesting people
       worth following.
     * [https://ravenkwok.tumblr.com/]Raven Kwok - Tumblr by visual artist
       Raven Kwok.
     * [http://p5art.tumblr.com/]P5Art - Really good collection of
       experiments in Processing.
     * [http://echophon.tumblr.com/]Echophon - Tumblr with visual
       inspiration.
     * [https://beesandbombs.tumblr.com/]Bees & Bombs - Tumblr with gifs
       by Dave.
     * [https://devart.withgoogle.com/]DevArt - Celebration of art made
       with code by artists that push the possibilities of creativity.
     * [http://folds2d.tumblr.com/]Folds2d - Tumblr with curves, surfaces,
       scalar and vector fields.
     * [http://inspiration.wblut.com/]W:BLUT Inspiration - Collection of
       gifs, links and images by W:Blut.

Events

     * [http://offf.barcelona/]OFFF Festival - Digital design festival
       (Online Flash Film Festival).
     * [http://resonate.io/]Resonate - Festical in Belgrade about cutting
       edge music, visual arts and digital culture.
     * [http://grayareafestival.io/]Gray Area Festival - Creative coding,
       art and technology festival.
     * [http://www.signalfestival.com/]Signal Festival - Showcase of light
       art and emerging technologies in Prague, the Czech Republic.
     * [http://eyeofestival.com/]Eyeo Festival - Bring together creative
       coders, data designers and creators working at the intersection of
       data, art and technology.
     * [http://www.mutek.org/en]Mutek - Organization dedicated to digital
       creativity in sound, music, and audio-visual art.
     * [https://nodeforum.org/]Node - An open platform for the exchange on
       culture, arts and technology.
     * [http://www.ddd.it/en]Digital Design Days - OFFF - 3 day event
       offering conferences, workshops, digital showcases & installations.
     * [http://codame.com/]CODAME ART+TECH - Projects and nonprofit
       events, to inspire through experience.
     * [http://events.thesupply.com/]Curated Creative Events - Hand-picked
       design, code, art, fashion and maker events.
     * [https://nextart.tech/]NextArt Night - Inspiring people through
       creative uses of tech.

Schools o Workshops

     * [http://sfpc.io/]School for Poetic Computation - School in New York
       that explore the intersections of code, design, hardware and
       theory.
     * [http://ciid.dk/]Copenhagen Institute of Interaction Design - Hosts
       a range of educational initiatives, most notably, the Interaction
       Design Programme and the CIID Summer School.
     * [https://docs.google.com/spreadsheets/d/1o__WKUBTHLoQX8pSRJsh0wMC8f
       CGzycQ0ezxe5CklxM/edit?usp=sharing]Residencies, Fellowships, Summer
       Schools - Huge list of residencies, fellowships and summer schools
       around the world (Navigate with the bottom left tabs).

Blogs o Websites

     * [http://creativeapplications.net/]CreativeApplications.Net [CAN] -
       Famous digital art blog.
     * [http://abandonedart.org/]abandonedart.org - Generative art blog by
       Matt Pearso. Good for inspiration.
     * [http://www.iquilezles.org/]iquilezles.org - Home of Íñigo Quílez,
       specialised in GLSL and math snippets.
     * [http://www.bit-101.com/blog/]bit-101.com - Blog by Keith Peters,
       specialised in creative coding.
     * [http://ibreakdownshaders.blogspot.com.au/]ibreakdownshaders -
       Explore the math behind shaders.
     * [http://www.adriancourreges.com/blog/]adriancourrèges.com - Blog of
       software engineer Adrian Courrèges. Articles about game graphics
       studies etc.
     * [https://www.clicktorelease.com/]clicktorelease.com - Home of Jaume
       Sanchez Elias, with demos, talks, articles on WebGL and WebVR.
     * [http://blog.hvidtfeldts.net/]syntopia - Blog about generative art
       and systems, by Mikael Hvidtfeldt Christensen.
     * [http://madebyevan.com/]madebyevan.com - WebGL experiments and
       articles by Evan Wallace.
     * [http://www.songho.ca/]songho.ca - Home of Song Ho Ahn, with a good
       collection of tutorials on OpenGL and math.
     * [https://simonschreibt.de/]simonschreibt.de - Game art tricks,
       design tricks by Simon schreibt.

Related

     * [https://github.com/eug/awesome-opengl]Awesome opengl - Curated
       list of awesome OpenGL libraries, debuggers and resources.
     * [https://github.com/sjfricke/awesome-webgl]Awesome webgl - Curated
       list of awesome WebGL libraries, resources and much more.
     * [https://github.com/raphamorim/awesome-canvas]Awesome canvas -
       Curated list of awesome HTML5 canvas with examples, related
       articles and posts.
     * [https://github.com/willianjusten/awesome-audio-visualization]Aweso
       me audio visualization - Curated list about Audio Visualization.
     * [https://github.com/jbhuang0604/awesome-computer-vision]Awesome
       computer vision - Curated list of awesome computer vision
       resources.
     * [https://github.com/mathisonian/awesome-visualization-research]Awes
       ome visualization research - Curated list of recommended research
       papers and other readings on data visualization.
     * [https://github.com/lvm/awesome-livecoding/]Awesome livecoding -
       Curated list of livecoding languages and tools.
     * [https://github.com/ericjang/awesome-graphics]Awesome graphics -
       Curated list of computer graphics tutorials and resources.
     * [https://github.com/mattdesl/graphics-resources]Graphics resources
       - Curated list of graphic programming resources.
     * [https://github.com/ellisonleao/magictools]Magic tools - Curated
       list of game development resources to make magic happen.
     * [http://d.hatena.ne.jp/hanecci/20131005/p1]Hanecci's link
       collection - Link collection of ray marching on the GPU.
     * [https://github.com/caesar0301/awesome-public-datasets]Awesome
       public datasets - Curated list of public avalible datasets, mostly
       free resources.
     * [http://d.hatena.ne.jp/hanecci/20131005/p1]Link collection of ray
       marching on the GPU - Curated list from 2013.

License

   [https://creativecommons.org/publicdomain/zero/1.0/]CC0

   To the extent possible under law, [http://terkel.com/]Terkel Gjervig
   has waived all copyright and related or neighboring rights to this
   work.

     * © 2018 GitHub, Inc.
     * [https://github.com/site/terms]Terms
     * [https://github.com/site/privacy]Privacy
     * [https://help.github.com/articles/github-security/]Security
     * [https://status.github.com/]Status
     * [https://help.github.com/]Help

   [https://github.com/]
     * [https://github.com/contact]Contact GitHub
     * [https://developer.github.com/]API
     * [https://training.github.com/]Training
     * [https://shop.github.com/]Shop
     * [https://blog.github.com/]Blog
     * [https://github.com/about]About

   (BUTTON) You can't perform that action at this time.

   You signed in with another tab or window.
   Reload to refresh your session. You signed out in another tab or
   window.
   [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-creative-
   coding]Reload to refresh your session.

   (BUTTON)

   Press h to open a hovercard with more details.
