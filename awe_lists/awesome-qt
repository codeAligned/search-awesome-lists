   #Recent
   Commits to awesome-qt:master

   Skip to content
   [https://github.com/]
     * Features
     * Explore
     * Pricing

   This repository
   ____________________
   Sign in or
   Sign up

     * 33
     * 184
     * 31

awesome-qt

   Code
   Pull requests 3
   Insights
   (BUTTON) Dismiss

Join GitHub today

   GitHub is home to over 20 million developers working together to host
   and review code, manage projects, and build software together.

   Sign up
   A curated list of awesome tools, libraries, and resources for the Qt
   framework.
   awesome
   qt-applications
   142 commits
     * 0 releases
     * Fetching
       contributors
     * CC0-1.0

   Clone or download

Clone with HTTPS [https://help.github.com/articles/which-remote-url-should-i-use]

   Use Git or checkout with SVN using the web URL.
   https://github.com/J
   Download ZIP

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching Xcode...

   If nothing happens, [https://developer.apple.com/xcode/]download Xcode
   and try again.

   (BUTTON) Go back

Launching Visual Studio...

   If nothing happens, [https://visualstudio.github.com/]download the
   GitHub extension for Visual Studio and try again.

   (BUTTON) Go back
   Find file
   (BUTTON) Branch: master
   Switch branches/tags
   ____________________
     * Br
       anches
     * Ta
       gs

   master
   Nothing to show
   Nothing to show
   (BUTTON) New pull request
   Latest commit
   [file://localhost/JesseTG/awesome-qt/commit/a66fae420567e2b16a1bcfd7ed5
   0d7977daaa353]a66fae4 Nov 10, 2017
   @JesseTG
   JesseTG
   [file://localhost/JesseTG/awesome-qt/commit/a66fae420567e2b16a1bcfd7ed5
   0d7977daaa353]Merge pull request
   [https://github.com/JesseTG/awesome-qt/pull/6]#6
   from vadi2/patch-1 (BUTTON) ...
Skype for Linux doesn't use Qt anymore

   Permalink
   Failed to load latest commit information.
   .gitignore
   Add .gitignore Oct 19, 2016
   .travis.ym
   l
   Oops Mar 22, 2017
   CONTRI
   BUTING.md
   More guidelines to CONTRIBUTING.md Dec 24, 2016
   LICENSE
   [file://localhost/JesseTG/awesome-qt/commit/40a4963db731e4b074c1dfa4b46
   1cb44da371212]Add a license Dec 24, 2016
   README.md
   Skype for Linux doesn't use Qt anymore Oct 17, 2017
   cod
   e-of-conduct.md
   Oops, how did I miss that? Mar 12, 2017
   no-check.
   txt
   Set up a list of URLS mentioned in the README not to
   check Mar 22, 2017
   package.j
   son
   [file://localhost/JesseTG/awesome-qt/commit/c3de0f7106d28ef1f7c8b7d6fff
   0766c636fafb0]Actually, no, let's use awesome-lint instead Aug 14, 2016
   qt.svg
   Compress the Qt logo some more Apr 12, 2017

README.md

Awesome

   [https://www.qt.io/][68747470733a2f2f63646e2e7261776769742e636f6d2f4a65
   73736554472f617765736f6d652d71742f65663966373161392f71742e737667]

     A curated list of awesome tools, libraries, and resources for the Qt
     framework.

   [https://www.qt.io/]Qt is a powerful cross-platform application
   development framework, for use primarily (but not exclusively) in C++.
   It's great for GUI applications, but can be used for many other things
   as well.

   Contributions are welcome!

Conventions

     * Any list item with an OctoCat :octocat: has a GitHub repo or
       organization; click on it to see the source code!
     * List items with this ¦ icon have source code hosted elsewhere.

Contents

     * Official Resources
     * Communities
          + Official
          + Unofficial
     * Tools
          + Official Tools
          + Third-Party Tools
     * Bindings in Other Languages
     * Libraries
          + Integrations
          + New Functionality
     * Software Repositories
     * Blogs
     * Books
     * Software that Uses Qt
     * Other Relevant Awesome Lists
     * License

Official Resources

     * [https://www.qt.io/]Official Website - The official website for the
       Qt framework.
     * [https://doc.qt.io/]Qt Documentation - Official Qt documentation.
       Massive and comprehensive.
     * [https://www.qt.io/newsletters]Qt Newsletters - The best of Qt,
       straight to your spam filter.
     * [https://bugreports.qt.io/]Qt Bug Tracker - If you think you've
       found a bug with Qt or one of its related projects, report it here
       (or see if someone else already has).
     * [https://codereview.qt-project.org/]Qt Code Review - See how the Qt
       maintainers ensure their code is well-written.
     * [https://code.qt.io/]Source Code - Browse the various source trees
       that comprise the Qt project. Has mirrors at several GitHub
       organizations:
          + Qt [https://github.com/qt]:octocat:
          + Qt Project [https://github.com/qtproject]:octocat:
          + Qt Labs [https://github.com/qt-labs]:octocat:

Communities

   If you build it, they will come. This section describes aggregations of
   Qt users who share knowledge and code with one another. The most
   popular and active communities are listed in this section, but you can
   find a more comprehensive list
   [https://wiki.qt.io/Online_Communities]here (that includes several in
   other languages) if you'd prefer.

Official

     * [http://lists.qt-project.org/]Mailing Lists - Mailing lists for
       users and developers of Qt alike. Arguably the best place to
       communicate directly with Qt's maintainers. Sees frequent activity.
     * [https://forum.qt.io/]Qt Forum - If e-mail's not your thing, then
       you might also consider getting help or sharing knowledge on the
       forums.
     * [https://wiki.qt.io/]Qt Wiki - The premier source for
       user-contributed Qt knowledge.
     * [https://webchat.freenode.net/?channels=%23qt%2C%23qt-quick%2C%23qt
       -creator%2C%23qt-chat]IRC - For real-time chat with other Qt
       developers and users. The most popular channels are on Freenode,
       and include #qt, #qt-quick, #qt-creator, and #qt-chat.
          + For a full list of Qt-related IRC channels, see
            [https://wiki.qt.io/Online_Communities#IRC_channels]here.
          + Note that the linked webchat client is not a part of the Qt
            project, and is provided by the author of this list for
            convenience only. These channels can be accessed through any
            IRC client.

Unofficial

     * [http://www.qtforum.org/]QtForum.org - Not to be confused with the
       official [https://forum.qt.io/]Qt forum.

Tools

   A good developer writes his or her own tools. A great one uses tools
   others wrote. This section will help you be great; more formally, this
   section details applications that make it easier to create software
   with Qt. You may also be interested in the
   Libraries section.

Official Tools

   The Qt framework has surprisingly many tools that don't get the
   spotlight. This section describes them (as well as the star players
   that do). For the purpose of this section, "tool" refers to Qt-centric
   utilities whose code does not get embedded within your application (but
   their output might).
     * [https://www.qt.io/ide]Qt Creator
       [https://github.com/qtproject/qt-creator]:octocat: - By no means
       does Qt lock you into its provided IDE, but its firm integration
       with the framework makes it a good sell. Among other things, it
       provides a UI designer, modeling tools, a documentation browser,
       and great QML support if you're into that sort of thing. There's
       also a plugin system, but third-party plugins are unfortunately
       scarce.
          + [https://doc.qt.io/qt-5/qtdesigner-manual.html]Qt Designer
            [https://github.com/qt/qttools/tree/dev/src/designer]:octocat:
            - If you'd rather just design the interfaces and let someone
            else hook them up to logic, the GUI designer is available as a
            separate application.
          + [https://doc.qt.io/qt-5/qtassistant-index.html]Qt Assistant
            [https://github.com/qt/qttools/tree/dev/src/assistant]:octocat
            : - So is the documentation viewer, for that matter.
     * [https://doc.qt.io/archives/vs-addin]Qt Visual Studio Add-in
       [https://github.com/qt-labs/vstools]:octocat: - If you'd rather
       stick to Visual Studio, this add-in will let you do that.
     * [https://doc.qt.io/qt-5/qtlinguist-index.html]Qt Linguist
       [https://github.com/qt/qttools/tree/dev/src/linguist]:octocat: - Qt
       provides excellent internationalization/localization support, and
       this tool is very much responsible for it. Write translatable
       strings in your code with special macros, and this tool will
       aggregate them all for you so you or your translator(s) can broaden
       your software's audience.
     * [https://doc.qt.io/qtinstallerframework]Qt Installer Framework
       [https://github.com/qtproject/installer-framework]:octocat: -
       Nobody seems to talk about this, but Qt also provides a way to
       write an installer for your application. Does not support creation
       of macOS disk images, app bundles, or Linux packages, so be mindful
       of that when considering your project's distribution.
          + [https://doc.qt.io/qt-5/osx-deployment.html]macdeployqt
            [https://github.com/qt/qttools/tree/dev/src/macdeployqt]:octoc
            at: - Generates macOS application bundles for Qt projects.
     * [https://doc.qt.io/qt-5/qmake-manual.html]qmake
       [https://github.com/qt/qtbase/tree/dev/qmake]:octocat: - The
       bundled build system designed for Qt, though it can be used for
       non-Qt projects.
     * [https://doc.qt.io/qbs]qbs
       [https://github.com/qt-labs/qbs]:octocat: - If QML is more your
       style, consider this alternative build system.
     * [https://doc.qt.io/emulator]Emulator - Don't forget about Qt's
       mobile support!
     * qtdiag [https://github.com/qt/qttools/tree/dev/src/qtdiag]:octocat:
       - Command-line tool that prints out a lot of information pertaining
       to both your Qt installation and your system in general. No link
       because there's no dedicated web page; just run qtdiag on the
       command line. Excellent for troubleshooting.
     * qmleasing
       [https://github.com/qt/qtdeclarative/tree/dev/tools/qmleasing]:octo
       cat: - Lets you make easing curves suitable for QML, though if you
       understand the underlying math there's no reason you couldn't use
       the resulting numbers elsewhere.

Third-Party Tools

     * [https://doc.qt.io/qt-5/cmake-manual.html]CMake
       [https://github.com/Kitware/CMake]:octocat: - General C++ build
       tool that happens to have great Qt support.
     * [https://www.kdab.com/development-resources/qt-tools/gammaray]Gamma
       Ray [https://github.com/KDAB/GammaRay]:octocat: - Powerful debugger
       and general inspection tool for Qt-built software. Lets you inspect
       and manipulate the QObject hierarchy, view object properties, edit
       widgets at runtime, and far, far more. A two-sentence blurb can't
       do it justice, seriously check it out.
     * [https://github.com/woboq/moc-ng]moc-ng
       [https://github.com/woboq/moc-ng]:octocat: - Alternative
       implementation of moc that's binary-compatible with Qt's version.
     * [https://github.com/robertknight/Qt-Inspector]Qt-Inspector
       [https://github.com/robertknight/Qt-Inspector]:octocat: -
       Inspection tool with similar goals to GammaRay, though much
       simpler.
     * [https://www.riverbankcomputing.com/software/sip]SIP
       [https://www.riverbankcomputing.com/hg/sip]¦ - Generates Python
       bindings for C or C++ libraries. Has special support for Qt signals
       and slots, and was used to create
       [https://riverbankcomputing.com/software/pyqt]PyQt.
     * [https://github.com/probonopd/linuxdeployqt]linuxdeployqt
       [https://github.com/probonopd/linuxdeployqt]:octocat: - Lets you
       bundle your Qt based application as an AppDir or
       [http://appimage.org/]AppImage, making it possible to ship it to
       users of many desktop Linux distributions. Similar to the official
       windeployqt and macdeployqt tools but for Linux.

Bindings in Other Languages

   This section describes software that enables creation of Qt software in
   a primary language other than C++. Libraries that allow run-time
   scripting in a Qt application are listed under
   Integrations.
     * [https://riverbankcomputing.com/software/pyqt]Python (via PyQt)
       [https://www.riverbankcomputing.com/software/pyqt/download5]¦ -
       Arguably the most comprehensive and well-known binding of Qt to
       another language.
     * [https://wiki.qt.io/PySide]Python (via PySide)
       [https://code.qt.io/cgit/pyside/pyside.git]¦ - Another binding for
       Python, which has been officially adopted by the Qt project.
     * [http://ring-lang.sourceforge.net/doc/qt.html]Ring (via RingQt)
       [https://github.com/ring-lang/ring/tree/master/extensions/ringqt]:o
       ctocat: - I've never heard of this language either, honestly.
     * [https://github.com/ddobrev/QtSharp]Mono/.NET languages (via
       QtSharp) [https://github.com/ddobrev/QtSharp]:octocat: -
       Experimental wrapper for Qt that allows it to be used by .NET-based
       languages such as C#. Young, but active.

   See these
   [https://www.ics.com/blog/using-qt-alternative-programming-languages-pa
   rt-1]these
   [https://www.ics.com/blog/using-qt-alternative-programming-languages-pa
   rt-2]three [https://wiki.qt.io/Category:LanguageBindings]articles if
   you want more.

Libraries

   This section describes two kinds of third-party libraries; those that
   provide their own brand-new functionality (e.g. widgets, dealing with
   particular file formats), and those that provide integrations with
   existing software (e.g. scripting languages, clients for REST APIs,
   implementations of established protocols).

Integrations

   For the purpose of this section, an "Integration"-focused library does
   one of the following:
    1. Serves as a client for an established Web service.
    2. Wraps another library in a Qt-friendly manner as more than just an
       implementation detail (i.e. it tries to mimic the wrapped API).

     * [https://xiangxw.github.io/mupdf-qt]mupdf-qt
       [https://github.com/xiangxw/mupdf-qt]:octocat: - Qt wrapper for the
       [https://mupdf.com/]MuPDF PDF viewer.
     * [https://github.com/lucaspcamargo/neiasound]neiasound
       [https://github.com/lucaspcamargo/neiasound]:octocat: - OpenAL
       wrapper designed for games, with
       [https://nothings.org/stb_vorbis]stb_vorbis and
       [http://www.mega-nerd.com/libsndfile]libsndfile support.
     * [http://pythonqt.sourceforge.net/]PythonQt
       [https://sourceforge.net/projects/pythonqt]¦ - Script your Qt
       applications with Python. Not to be confused with
       [https://riverbankcomputing.com/software/pyqt]PyQt or
       [https://wiki.qt.io/PySide]PySide.
     * [https://riverbankcomputing.com/software/qscintilla]QScintilla
       [https://www.riverbankcomputing.com/software/qscintilla/download]¦
       - Absurdly versatile and customizable text editor widget that
       provides syntax highlighting, code completion, code folding,
       recordable macros, and much more. Built around
       [http://www.scintilla.org/]Scintilla. Created by the same company
       that developed [https://riverbankcomputing.com/software/pyqt]PyQt.
     * [https://github.com/gamecreature/QtAwesome]QtAwesome
       [https://github.com/gamecreature/QtAwesome]:octocat: - Add
       [https://fortawesome.github.io/Font-Awesome]Font Awesome icons to
       your Qt application. Other icon sets are supported, too.
     * [http://www.nongnu.org/libqtlua]QtLua
       [https://svn.savannah.nongnu.org/viewvc/?root=libqtlua]¦ - Use Lua
       as a scripting language for Qt-based software.
     * [https://github.com/cybercatalyst/qtruby]qtruby
       [https://github.com/cybercatalyst/qtruby]:octocat: - Use Ruby as a
       scripting language within your application.
     * [http://quazip.sourceforge.net/]QuaZIP
       [https://sourceforge.net/projects/quazip]¦ - Read from and write to
       ZIP archives. Uses
       [http://www.winimage.com/zLibDll/minizip.html]Minizip under the
       hood.
     * [https://vlc-qt.tano.si/]VLC-Qt
       [https://github.com/vlc-qt/vlc-qt]:octocat: - Wrapper for
       [https://wiki.videolan.org/LibVLC]libvlc that lets you add a
       VLC-like media player to your application.

New Functionality

     * [https://communi.github.io/]Communi
       [https://github.com/communi/libcommuni]:octocat: - Cross-platform
       IRC framework. We've got enough IRC clients out there already, but
       I suppose this could also be used to implement a chat function in
       your application (e.g. for community support).
     * [http://cutelyst.org/]cutelyst
       [https://github.com/cutelyst/cutelyst]:octocat: - Web framework
       that takes some ideas from Perl's Catalyst framework.
     * [https://github.com/Rolisteam/DiceParser]DiceParser
       [https://github.com/Rolisteam/DiceParser]:octocat: - Dice Roller
       framework based on its own syntax.
     * [https://github.com/filcuc/DOtherSide]DOtherSide
       [https://github.com/filcuc/DOtherSide]:octocat: - Binding for QML
       in C, primarily designed as an API for other languages to support
       QML.
     * [https://github.com/cginternals/glraw]glraw
       [https://github.com/cginternals/glraw]:octocat: - Convert images
       from any Qt-supported format to OpenGL-format textures. Useful for
       speeding up texture loading in graphics applications.
     * [https://github.com/steveire/grantlee]grantlee
       [https://github.com/steveire/grantlee]:octocat: - Django-inspired
       text templating.
     * [https://github.com/vogel/injeqt]injeqt
       [https://github.com/vogel/injeqt]:octocat: - Dependency injection
       for Qt.
     * [https://api.kde.org/frameworks]KDE Frameworks
       [https://github.com/KDE]:octocat: [https://quickgit.kde.org/]¦ -
       Metric ass-ton of libraries for KDE, but many of them can be used
       with regular Qt applications as well. Cross-platform, for the most
       part.
     * [https://marble.kde.org/]Marble [https://cgit.kde.org/marble.git]¦
       - Virtual globe and map that can be used standalone or embedded
       within other applications.
     * [https://github.com/Simsys/qhexedit2]qgexedit2
       [https://github.com/Simsys/qhexedit2]:octocat: - Embed a hex editor
       in your application.
     * [https://github.com/papyros/qml-material]qml-material
       [https://github.com/papyros/qml-material]:octocat: - Material
       Design implemented in QML.
     * [https://github.com/gwihlidal/QNodeView]QNodeView
       [https://github.com/gwihlidal/QNodeView]:octocat: - Widget that
       lets you create and edit nodes in a graph similar to the kind
       provided by Unreal Engine, Substance Designer, or PureData.
     * [https://github.com/alex-spataru/QSimpleUpdater]QSimpleUpdater
       [https://github.com/alex-spataru/QSimpleUpdater]:octocat: - Let
       your application update itself.
     * [https://github.com/robertknight/qt-maybe]qt-maybe
       [https://github.com/robertknight/qt-maybe]:octocat: - Fans of type
       theory will enjoy these sum and optional types.
     * [https://github.com/robertknight/qt-mustache]qt-mustache
       [https://github.com/robertknight/qt-mustache]:octocat: - Render
       [https://mustache.github.io/]Mustache templates.
     * [http://www.qtav.org/]QtAV
       [https://github.com/wang-bin/QtAV]:octocat: - Actively developed
       multimedia framework.
     * [https://jpnaude.github.io/Qtilities]Qtilities
       [https://github.com/JPNaude/Qtilities]:octocat: - Powerful set of
       libraries that provide GUI, logging, testing, configuration, and
       project functionality (among other things) for your application.
     * [http://www.devmachines.com/qtitanchart-overview]QtitanChart -
       Chart generation framework. Commercial.
     * [http://www.devmachines.com/qtitanribbon-overview]QtitanRibbon -
       For fans of the ribbons that Microsoft uses in their software.
       Commercial.
     * [https://github.com/cybercatalyst/qtnotify]qtnotify
       [https://github.com/cybercatalyst/qtnotify]:octocat: - Notification
       framework.
     * [https://github.com/cybercatalyst/qtterminalwidget]QtTerminalWidget
       [https://github.com/cybercatalyst/qtterminalwidget]:octocat: - Make
       your application capable of anything.
     * [https://github.com/VerbalExpressions/QtVerbalExpressions]QtVerbalE
       xpressions
       [https://github.com/VerbalExpressions/QtVerbalExpressions]:octocat:
       - Create regular expressions using natural English expressions.
       Part of the [https://verbalexpressions.github.io/]VerbalExpressions
       project, which does the same thing for a wide variety of languages.
     * [https://github.com/cybercatalyst/qtwebserver]qtwebserver
       [https://github.com/cybercatalyst/qtwebserver]:octocat: - If you
       need to write a web application server in Qt for some reason,
       this'll help you along.
     * [http://qtxlsx.debao.me/]QtXlsx
       [https://github.com/dbzhang800/QtXlsxWriter]:octocat: - Read and
       write spreadsheets in Microsoft Excel format.
     * [http://qwt.sourceforge.net/]Qwt
       [https://sourceforge.net/projects/qwt]¦ - Qt widgets designed for
       scientific and technical applications.
     * [https://v-play.net/]V-Play - Cross-platform 2D game engine and app
       framework that relies heavily on QML. Has a lot of tools and
       resources, and may even deserve its own list.
     * [https://github.com/woboq/verdigris]verdigris
       [https://github.com/woboq/verdigris]:octocat: - Experimental
       library to write Qt applications without using the moc.

Software Repositories

   If the
   Libraries section doesn't satisfy you, perhaps one of these will.
     * [https://inqlude.org/]#inqlude - The most well-known aggregation of
       Qt-centric libraries out there. A package manager is also available
       [https://inqlude.org/get.html]here.
     * [https://github.com/qt-pods/qt-pods]QtPods - Another Qt-centric
       package manager. If you want to see the offerings without using
       QtPods, the full list is available
       [https://github.com/qt-pods/qt-pods-master/blob/master/pods.json]he
       re, and can be added to by submitting a pull request.
     * [https://www.linux-apps.com/]Linux-Apps.com - Despite the name,
       Linux-Apps.com aggregates a wide variety of Qt-based tools and
       libraries for both end-users and developers.
     * [https://launchpad.net/%7Ebeineri]Stephan Binner's Ubuntu PPAs -
       Ubuntu users who are hesitant to install anything outside of their
       package managers can obtain any recent version of Qt from these
       repositories. Instructions for adding them are found within.

Blogs

   Each entry is followed by a standout list of articles, talks, or other
   resources.
     * [https://planet.qt.io/]Planet Qt - Official aggregation of
       first-party and third-party Qt-related blogs.
     * [https://www.ics.com/blog]ICS - Qt-centric software consulting firm
       with a really neat blog. Specializes in graphics applications.
          + Qt Tips and Tricks
            [[https://www.ics.com/blog/qt-tips-and-tricks-part-1]1,
            [https://www.ics.com/blog/qt-tips-and-tricks-part-2]2] - Odds
            and ends that might be nice to keep in your back pocket.
          + [https://www.ics.com/blog/mastering-qt-file-selectors]Masterin
            g Qt File Selectors - Sometimes you need different variations
            of the same asset, but you won't know which ones to load until
            runtime. This class will decide for you.
          + Some Lesser Known Qt Tools and Commands
            [[https://www.ics.com/blog/some-lesser-known-qt-tools-and-comm
            ands-part-1]1,
            [https://www.ics.com/blog/some-lesser-known-qt-tools-and-comma
            nds-part-2]2,
            [https://www.ics.com/blog/some-lesser-known-qt-tools-and-comma
            nds-part-3]3,
            [https://www.ics.com/blog/some-lesser-known-qt-tools-and-comma
            nds-part-4]4,
            [https://www.ics.com/blog/some-lesser-known-qt-tools-and-comma
            nds-part-5]5] - You don't find hidden gems by staying on the
            beaten path.
          + [https://www.ics.com/blog/using-self-signed-certificates-qt-co
            de]Using Self-Signed Certificates in Qt Code - Trust nobody.
          + [https://www.ics.com/blog/integrating-c-qml]Integrating C++
            with QML - Talk to your scripting language. That's what it's
            there for.
          + Qt and OpenGL: Loading a 3D Model with Open Asset Import
            Library (Assimp)
            [[https://www.ics.com/blog/qt-and-opengl-loading-3d-model-open
            -asset-import-library-assimp]1,
            [https://www.ics.com/blog/qt-and-opengl-loading-3d-model-open-
            asset-import-library-assimp-part-2]2] - Assimp supports a lot
            of different model types; these articles will help you support
            all of them.
          + [https://www.ics.com/blog/whats-new-qt-5-qstandardpaths]What's
            new in Qt 5: QStandardPaths - This feature's been around for a
            few years, but it's still useful enough to warrant an entry on
            this list.
          + [https://www.ics.com/blog/whats-new-qt-52-qcommandlineparser]W
            hat's New in Qt 5.2: QCommandLineParser - Another oldie, but
            still a goodie.
     * [https://woboq.com/blog]Woboq - Another software consulting firm
       that also contributes code to Qt. They seem to specialize in Qt's
       core architecture.
          + [https://woboq.com/blog/moc-myths.html]Moc myths debunked -
            The magic that Qt appears to rely in is really just a bunch of
            code generators. This post will bring you up to speed on the
            reality of the moc, the most notable one.
          + How Qt Signals and Slots Work
            [[https://woboq.com/blog/how-qt-signals-slots-work.html]1,
            [https://woboq.com/blog/how-qt-signals-slots-work-part2-qt5.ht
            ml]2,
            [https://woboq.com/blog/how-qt-signals-slots-work-part3-queued
            connection.html]3] - Qt's signals/slots system lets any object
            talk to any other object. Understanding these three articles
            will help you take full advantage of the feature.
          + [https://woboq.com/blog/qmetatype-knows-your-types.html]QMetaT
            ype knows your types - C++ isn't known for having good
            run-time type information, so Qt brings its own.
          + [https://woboq.com/blog/cpp11-in-qt5.html]C++11 in Qt5 - Stop
            writing C++ like it's 2003; learn how you can take advantage
            of recent C++ features in your Qt applications.
          + [https://woboq.com/blog/cpp14-in-qt.html]C++14 for Qt
            programmers - s/2003/2011/
          + [https://woboq.com/blog/qstringliteral.html]QStringLiteral
            explained - String literals are widely used in many
            applications; wouldn't it be nice if you could make them
            faster to access?
          + [https://woboq.com/blog/nice-debug-output-with-qt.html]Nicer
            debug output in Qt using QT_MESSAGE_PATTERN - It's nice to be
            able to read your application's logs.
     * [https://www.kdab.com/category/blogs]KDAB - Another consulting firm
       that specializes in Qt.
          + [https://www.youtube.com/watch?v=JcoFk_PVhdk]GammaRay: Taking
            a deep look into your Qt application - Talk about
            [https://www.kdab.com/development-resources/qt-tools/gammaray]
            GammaRay and how it can help you dissect your Qt applications.
            Talk given at QtCon 2016 by [https://github.com/vkrause]Volker
            Krause.
          + [https://www.youtube.com/watch?v=dcSsjxhazu0]Multithreading
            with Qt - I want to make my application do more than once
            thing at once. What could possibly go wrong? Talk given at
            QtCon 2016 by [https://github.com/dangelog]Giuseppe D'Angelo.
          + [https://www.youtube.com/watch?v=L4NClVxqdMw]Linux perf for Qt
            developers - How to make your Qt application faster,
            Linux-style. Talk given at QtCon 2016 by
            [https://github.com/milianw]Milian Wolff.

Books

     * [https://www.packtpub.com/application-development/qt5-c-gui-program
       ming-cookbook]Qt5 C++ GUI Programming Cookbook, by
       [https://www.zhieng.com/]Lee Zhi Eng
       [https://github.com/PacktPublishing/Qt5-C-GUI-Programming-Cookbook]
       :octocat: - Overview of advanced GUI programming techniques for
       those familiar (but not satisfied) with the basics. The source code
       used in the book is available for free.
     * [https://www.packtpub.com/game-development/game-programming-using-q
       t]Game Programming Using Qt: Beginner's Guide by Witold Wysota and
       Lorenz Haas - Good place to start learning how to program games
       with QML.
     * [https://www.packtpub.com/application-development/application-devel
       opment-qt-creator-second-edition]Application Development with Qt
       Creator - 2nd Edition, by [http://www.lothlorien.com/kf6gpe]Ray
       Rischpater - Beginner's guide to Qt, with a lot of focus on Qt
       Creator and its associated tools.
     * [https://www.packtpub.com/application-development/qt-5-blueprints]Q
       t 5 Blueprints, by [https://github.com/librehat]Symeon Huang -
       Seems to be about the overall structure of a Qt project.
     * [https://www.packtpub.com/application-development/mastering-qt-5]Ma
       stering Qt 5, by [https://github.com/GuillaumeLazar]Guillaume Lazar
       and [https://github.com/synapticvoid]Robin Penea
       [https://github.com/PacktPublishing/Mastering-Qt-5]:octocat: - Not
       your daddy's Qt. Tips and tricks for the experienced. The source
       code used in the book is available for free.
     * [https://www.packtpub.com/application-development/pyside-gui-applic
       ation-development-second-edition]PySide GUI Application Development
       - 2nd Edition, by Gopinath Jaganmohan and Venkateshwaran Loganathan
       - Imagine these other books, but in Python.
     * [https://qmlbook.github.io/]Qt5 Cadaques
       [https://github.com/qmlbook/qmlbook]:octocat: - Free book that
       focuses on QML, named for this town in northeastern Spain that the
       authors vacationed to once.

Software that Uses Qt

   A framework is only as great as the software that uses it. Fortunately,
   much great software uses Qt.
     * [http://www.autodesk.com/maya]Autodesk Maya - 3D animation and
       design software that has been used to create visual effects for
       some of the most popular movies and TV shows of all time.
     * [https://cmake.org/]CMake
       [https://github.com/Kitware/CMake]:octocat: - The closest thing to
       a standard C++ build system out there. The bundled GUI uses Qt.
     * [https://www.cryengine.com/]CRYENGINE
       [https://github.com/CRYTEK-CRYENGINE/CRYENGINE]:octocat: - But can
       it run Crysis? Some auxillary tools use Qt.
     * [https://www.stack.nl/%7Edimitri/doxygen]Doxygen
       [https://github.com/doxygen/doxygen]:octocat: - The most popular
       documentation generator for C++, though it supports other languages
       as well. The bundled GUI uses Qt.
     * [https://www.google.com/earth]Google Earth - The virtual globe.
     * [https://www.kde.org/]KDE [https://github.com/KDE]:octocat: - One
       of the most popular desktop environments for Linux.
     * [https://www.malwarebytes.com/]Malwarebytes - Your Windows
       desktop's personal bodyguard.
     * [https://www.parallels.com/products/desktop]Parallels Desktop -
       Consumer-focused virtualization.
     * [https://www.qt.io/ide]Qt Creator
       [https://github.com/qtproject/qt-creator]:octocat: - Something
       something eating your own dog food. Listed in the
       official tools, but not listing it here doesn't feel
       right.
     * [http://www.rolisteam.org/]Rolisteam
       [https://github.com/Rolisteam/rolisteam]:octocat: - Virtual
       tabletop for remote Role Playing Games.
     * [https://www.iforce2d.net/rube]RUBE - Level design tool for any
       game that uses the Box2D physics engine.
     * [https://www.teamspeak.com/]TeamSpeak - When gamers want to voice
       chat in a game that doesn't support it, they'll use this.
     * [https://desktop.telegram.org/]Telegram Desktop
       [https://github.com/telegramdesktop/tdesktop]:octocat: - Secure
       your conversations so well, you'll raise the blood pressure of
       potential eavesdroppers. The desktop client uses Qt and is open
       source.
     * [http://www.mapeditor.org/]Tiled
       [https://github.com/bjorn/tiled]:octocat: - Perhaps the world's
       most popular tilemap editor. Suitable for level design in games.
     * [https://www.virtualbox.org/]VirtualBox
       [https://www.virtualbox.org/browser/vbox/trunk]¦ - Virtualization
       software for x86/64 processors. The bundled GUI uses Qt.
     * [https://www.videolan.org/vlc]VLC [https://code.videolan.org/]¦ -
       One of the most flexible open source video players in existence.
     * [https://vuo.org/]Vuo [https://github.com/vuo/vuo]:octocat: --
       Realtime visual programming language for interactive media.
     * [https://www.wireshark.org/]Wireshark
       [https://code.wireshark.org/review/gitweb?p=wireshark.git;a=tree]¦
       - The most popular packet-sniffer out there. You are going to use
       this for good and not evil, right?
     * [https://www.wolfram.com/mathematica]Wolfram Mathematica -
       Programming language, symbolic calculator, and an engineer's best
       friend.
     * [https://yabause.org/]Yabause
       [https://github.com/Yabause/yabause]:octocat: - Sega Saturn
       emulator.

   There's also an official showroom [https://showroom.qt.io/]here, which
   lets developers submit their own Qt-powered applications for display.

Other Relevant Awesome Lists

   If you're familiar with Awesome, you'll know that there's an extremely
   wide variety of resources, the usefulness of which will depend on your
   project. However, if you're developing Qt applications, you'll almost
   certainly want to look at these as well.
     * [https://github.com/fffaraz/awesome-cpp]Awesome C/C++ - There's no
       reason you can't use C++ libraries that weren't designed for Qt.
       Sometimes they might even suit your needs better than what Qt
       offers.
     * [https://github.com/aleksandar-todorovic/awesome-c]Awesome C - Same
       goes for C libraries; might wanna brush up on those RAII techniques
       while you're at it.
     * [https://github.com/onqtam/awesome-cmake]Awesome CMake - If you're
       not using qmake for your project, you're likely using CMake
       instead.
     * [https://github.com/eug/awesome-opengl]Awesome OpenGL - Qt is
       commonly used for graphics applications, even providing its own
       wrappers around OpenGL.

License

   [https://creativecommons.org/publicdomain/zero/1.0]CC0

   To the extent possible under law, [https://jessetg.github.io/]Jesse
   Talavera-Greenberg has waived all copyright and related or neighboring
   rights to this work. See the
   LICENSE file
   for details.

     * © 2018 GitHub, Inc.
     * [https://github.com/site/terms]Terms
     * [https://github.com/site/privacy]Privacy
     * [https://help.github.com/articles/github-security/]Security
     * [https://status.github.com/]Status
     * [https://help.github.com/]Help

   [https://github.com/]
     * [https://github.com/contact]Contact GitHub
     * [https://developer.github.com/]API
     * [https://training.github.com/]Training
     * [https://shop.github.com/]Shop
     * [https://blog.github.com/]Blog
     * [https://github.com/about]About

   (BUTTON) You can't perform that action at this time.

   You signed in with another tab or window.
   Reload
   to refresh your session. You signed out in another tab or window.
   Reload
   to refresh your session.

   (BUTTON)

   Press h to open a hovercard with more details.
