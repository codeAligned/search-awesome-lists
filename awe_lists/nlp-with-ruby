   #Recent
   Commits to nlp-with-ruby:master

   Skip to content
   [https://github.com/]
     * Features
     * Explore
     * Pricing

   This repository
   ____________________
   Sign in or
   Sign up

     * 51
     * 739
     * 41

nlp-with-ruby

   Code
   Pull requests 0
   Insights
   (BUTTON) Dismiss

Join GitHub today

   GitHub is home to over 20 million developers working together to host
   and review code, manage projects, and build software together.

   Sign up
   Practical Natural Language Processing done in Ruby.
   [http://rubynlp.org/]http://rubynlp.org
   machine-learning
   ruby
   sentiment-analysis
   awesome
   list
   rubynlp
   338 commits
     * 0 releases
     * 4
       contributors
     * CC0-1.0

    1. Ruby 100.0%

   Ruby
   Clone or download

Clone with HTTPS [https://help.github.com/articles/which-remote-url-should-i-use]

   Use Git or checkout with SVN using the web URL.
   https://github.com/a
   Download ZIP

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching Xcode...

   If nothing happens, [https://developer.apple.com/xcode/]download Xcode
   and try again.

   (BUTTON) Go back

Launching Visual Studio...

   If nothing happens, [https://visualstudio.github.com/]download the
   GitHub extension for Visual Studio and try again.

   (BUTTON) Go back
   Find file
   (BUTTON) Branch: master
   Switch branches/tags
   ____________________
     * Branches
     * Tags

   fb_test
   ing_templates master
   Nothing to show
   Nothing to show
   (BUTTON) New pull request
   Fetching latest commit...
   Cannot retrieve the latest commit at this time.
   Permalink
   Failed to load latest commit information.
   tutorials
   Repository cleanup. Feb 14, 2017
   .gitignore
   [file://localhost/arbox/nlp-with-ruby/commit/59da2a05c1cb310cdc63b267b5
   c9a22d865d4d1b]Not tracking web related sources. Feb 23, 2017
   .ruby-v
   ersion
   [file://localhost/arbox/nlp-with-ruby/commit/5e3a41b07edca26aa2eac2dd29
   cccac1465277e3]Updated tooling to newest versions. Apr 6, 2018
   .travis.y
   ml
   [file://localhost/arbox/nlp-with-ruby/commit/f9f73888703326b6d7c11a63ae
   fb3ea3d75c51f8]Corrected the build script to reflect naming changes.
   Jul 7, 2017
   FAQ.md
   [file://localhost/arbox/nlp-with-ruby/commit/a35c2b9496c64afda71e268b8b
   062c81211fd0e8]Corrected links. Apr 16, 2017
   Gemfile
   Updated tooling to newest versions. Apr 6, 2018
   LICENSE
   [file://localhost/arbox/nlp-with-ruby/commit/8418cb8089c00725e9b18b3fa6
   53901ed85defae]Added the most complete license version. Apr 26, 2017
   Rakefile
   Updated the release task. Apr 27, 2017
   contr
   ibuting.md
   Extracted the contribution section into a separate file.
   Jul 7, 2017
   header.png
   Added the real header image. May 5, 2017
   inbox.md
   [file://localhost/arbox/nlp-with-ruby/commit/1b8d275b1a939f7ff9e20bb21c
   26e458051a948d]Added cyrillic by
   [https://github.com/rovetz]@rovetz[file://localhost/arbox/nlp-with-ruby
   /commit/1b8d275b1a939f7ff9e20bb21c26e458051a948d]. Apr 6, 2018
   motivat
   ion.md
   [file://localhost/arbox/nlp-with-ruby/commit/b3e9e77ea59a2ef24e61ba8938
   b3e4fd00af4f43]Updated the motivating text. Nov 27, 2016
   [file://localhost/arbox/nlp-with-ruby/blob/master/pull_request_template
   .md]pull_request_template.md
   [file://localhost/arbox/nlp-with-ruby/commit/2b54e921b582b2e7e35f853a87
   1bcc0ebdadc114]Added the new short PR template. Apr 28, 2017
   readme.md
   Updated errored links. Apr 6, 2018
   ruby.jpg
   [file://localhost/arbox/nlp-with-ruby/commit/f1a2cb2452e175142ebbf43fcc
   a7db53f7a49806]Removed unused images. Feb 23, 2017
   test.png
   Updated the header image. May 5, 2017

readme.md

   [header.pn
   g]

   [[https://github.com/arbox/machine-learning-with-ruby]RubyML |
   [https://github.com/arbox/data-science-with-ruby]RubyDataScience |
   [https://github.com/arbox/ruby-interoperability]RubyInterop]

Awesome RubyNLP

   [https://www.ruby-lang.org/en/][ruby.jpg]

     Useful resources for text processing in Ruby

   This curated list comprises
   [https://github.com/sindresorhus/awesome/blob/master/awesome.md]awesome
   resources, libraries, information sources about computational
   processing of texts in human languages with the
   Ruby programming
   language. That field is often referred to as
   [https://en.wikipedia.org/wiki/Natural_language_processing]NLP,
   [https://en.wikipedia.org/wiki/Computational_linguistics]Computational
   Linguistics, [https://en.wikipedia.org/wiki/Language_technology]HLT
   (Human Language Technology) and can be brought in conjunction with
   [https://en.wikipedia.org/wiki/Artificial_intelligence]Artificial
   Intelligence, [https://en.wikipedia.org/wiki/Machine_learning]Machine
   Learning,
   [https://en.wikipedia.org/wiki/Information_retrieval]Information
   Retrieval, [https://en.wikipedia.org/wiki/Text_mining]Text Mining,
   [https://en.wikipedia.org/wiki/Knowledge_extraction]Knowledge
   Extraction and other related disciplines.

   This list comes from our day to day work on Language Models and NLP
   Tools. Read
   why
   this list is awesome. Our
   FAQ describes
   the important decisions and useful answers you may be interested in.

   ¨ Every
   contribution is welcome! Add links through pull requests or
   create an issue to start a discussion.

   Follow us on [https://twitter.com/NonWebRuby]Twitter and please spread
   the word using the #RubyNLP hash tag!

Contents

     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with-ruby
       #sparkles-tutorials]¨ Tutorials
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with-ruby
       #nlp-pipeline-subtasks]NLP Pipeline Subtasks
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with
            -ruby#pipeline-generation]Pipeline Generation
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with
            -ruby#multipurpose-engines]Multipurpose Engines
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp
                 -with-ruby#on-line-apis]On-line APIs
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with
            -ruby#language-identification]Language Identification
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with
            -ruby#segmentation]Segmentation
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with
            -ruby#lexical-processing]Lexical Processing
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp
                 -with-ruby#stemming]Stemming
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp
                 -with-ruby#lemmatization]Lemmatization
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp
                 -with-ruby#lexical-statistics-counting-types-and-tokens]L
                 exical Statistics: Counting Types and Tokens
               o Filtering Stop Words
          + Phrasal Level Processing
          + Syntactic Processing
               o Constituency Parsing
          + Semantic Analysis
          + Pragmatical Analysis
     * High Level Tasks
          + Spelling and Error
            Correction
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with
            -ruby#text-alignment]Text Alignment
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with
            -ruby#machine-translation]Machine Translation
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with
            -ruby#sentiment-analysis]Sentiment Analysis
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with
            -ruby#numbers-dates-and-time-parsing]Numbers, Dates, and Time
            Parsing
          + Named Entity Recognition
          + Text-to-Speech-to-Text
     * Dialog Agents, Assistants,
       and Chatbots
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with-ruby
       #linguistic-resources]Linguistic Resources
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with-ruby
       #machine-learning-libraries]Machine Learning Libraries
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with-ruby
       #data-visualization]Data Visualization
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with-ruby
       #optical-character-recognition]Optical Character Recognition
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with-ruby
       #text-extraction]Text Extraction
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with-ruby
       #full-text-search-information-retrieval-indexing]Full Text Search,
       Information Retrieval, Indexing
     * Language Aware String
       Manipulation
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with-ruby
       #articles-posts-talks-and-presentations]Articles, Posts, Talks, and
       Presentations
     * Projects and Code Examples
     * Books
     * Community
     * Needs your Help!
     * Related Resources
     * License

¨ Tutorials

   Please help us to fill out this section!

NLP Pipeline Subtasks

   An NLP Pipeline starts with a plain text.

Pipeline Generation

     * [https://github.com/t6d/composable_operations]composable_operations
       - Definition framework for operation pipelines.
     * [https://github.com/ondra-m/ruby-spark]ruby-spark - Spark bindings
       with an easy to understand DSL.
     * [https://github.com/klarna/phobos]phobos - Simplified Ruby Client
       for [https://kafka.apache.org/]Apache Kafka.
     * [https://github.com/grosser/parallel]parallel - Supervisor for
       parallel execution on multiple CPUs or in many threads.
     * [https://github.com/masa16/pwrake]pwrake - Rake extensions to run
       local and remote tasks in parallel.

Multipurpose Engines

     * [https://github.com/louismullie/open-nlp]open-nlp - Ruby Bindings
       for the [https://opennlp.apache.org/]OpenNLP Toolkit.
     * [https://github.com/louismullie/stanford-core-nlp]stanford-core-nlp
       - Ruby Bindings for the Stanford
       [https://github.com/stanfordnlp/CoreNLP]CoreNLP tools.
     * [https://github.com/louismullie/treat]treat - Natural Language
       Processing framework for Ruby (like [http://www.nltk.org/]NLTK for
       Python).
     * [https://github.com/LeFnord/nlp_toolz]nlp_toolz - Wrapper over some
       [https://opennlp.apache.org/]OpenNLP classes and the original
       [https://github.com/slavpetrov/berkeleyparser]Berkeley Parser.
     * [https://github.com/hck/open_nlp]open_nlp - JRuby Bindings for the
       [https://opennlp.apache.org/]OpenNLP Toolkit.

On-line APIs

     * [https://github.com/alchemyapi/alchemyapi_ruby]alchemyapi_ruby -
       Legacy Ruby SDK for AlchemyAPI/Bluemix.
     * [https://github.com/wit-ai/wit-ruby]wit-ruby - Ruby client library
       for the [https://wit.ai/]Wit.ai Language Understanding Platform.
     * [https://github.com/arbox/wlapi]wlapi - Ruby client library for
       [http://wortschatz.uni-leipzig.de/de]Wortschatz Leipzig web
       services.
     * [https://github.com/monkeylearn/monkeylearn-ruby]monkeylearn-ruby -
       Sentiment Analysis, Topic Modelling, Language Detection, Named
       Entity Recognition via a Ruby based Web API client.
     * [https://github.com/GoogleCloudPlatform/google-cloud-ruby/tree/mast
       er/google-cloud-language]google-cloud-language - Google's Natural
       Language service API for Ruby.

Language Identification

   Language Identification is one of the first crucial steps in every NLP
   Pipeline.
     * [https://github.com/hashwin/scylla]scylla - Language Categorization
       and Identification.

Segmentation

   Tools for Tokenization, Word and Sentence Boundary Detection and
   Disambiguation.
     * [https://github.com/arbox/tokenizer]tokenizer - Simple multilingual
       tokenizer.
       ^[[file://localhost/arbox/nlp-with-ruby/blob/master/tutorials/token
       izer.md]tutorial]
     * [https://github.com/diasks2/pragmatic_tokenizer]pragmatic_tokenizer
       - Multilingual tokenizer to split a string into tokens.
     * [https://github.com/parhamr/nlp-pure]nlp-pure - Natural language
       processing algorithms implemented in pure Ruby with minimal
       dependencies.
     * [https://github.com/manorie/textoken]textoken - Simple and
       customizable text tokenization library.
     * [https://github.com/diasks2/pragmatic_segmenter]pragmatic_segmenter
       - Word Boundary Disambiguation with many cookies.
     * [https://github.com/lfcipriani/punkt-segmenter]punkt-segmenter -
       Pure Ruby implementation of the Punkt Segmenter.
     * [https://github.com/zencephalon/Tactful_Tokenizer]tactful_tokenizer
       - RegExp based tokenizer for different languages.
     * [https://github.com/louismullie/scalpel]scapel - Sentence Boundary
       Disambiguation tool.

Lexical Processing

Stemming

   Stemming is the term used in information retrieval to describe the
   process for reducing wordforms to some base representation. Stemming
   should be distinguished from
   Lemmatization since stems are not necessarily have
   linguistic motivation.
     * [https://github.com/aurelian/ruby-stemmer]ruby-stemmer -
       Ruby-Stemmer exposes the SnowBall API to Ruby.
     * [https://github.com/ealdent/uea-stemmer]uea-stemmer - Conservative
       stemmer for search and indexing.

Lemmatization

   Lemmatization is considered a process of finding a base form of a word.
   Lemmas are often collected in dictionaries.
     * [https://github.com/yohasebe/lemmatizer]lemmatizer - WordNet based
       Lemmatizer for English texts.

Lexical Statistics: Counting Types and Tokens

     * [https://github.com/thesp0nge/wc]wc - Facilities to count word
       occurrences in a text.
     * [https://github.com/AtelierConvivialite/word_count]word_count -
       Word counter for String and Hash objects.
     * [https://github.com/abitdodgy/words_counted]words_counted - Pure
       Ruby library counting word statistics with different custom
       options.

Filtering Stop Words

     * [https://github.com/brenes/stopwords-filter]stopwords-filter -
       Filter and Stop Word Lexicon based on the SnowBall lemmatizer.

Phrasal Level Processing

     * [https://github.com/reddavis/N-Gram]n_gram - N-Gram generator.
     * [https://github.com/tkellen/ruby-ngram]ruby-ngram - Break words and
       phrases into ngrams.
     * [https://github.com/postmodern/raingrams]raingrams - Flexible and
       general-purpose ngrams library written in pure Ruby.

Syntactic Processing

Constituency Parsing

     * [https://rubygems.org/gems/stanfordparser]stanfordparser - Ruby
       based wrapper for the Stanford Parser.
     * [https://github.com/famished-tiger/Rley]rley - Pure Ruby
       implementation of the
       [https://en.wikipedia.org/wiki/Earley_parser]Earley Parsing
       Algorithm for Context-Free Constituency Grammars.
     * [https://github.com/yohasebe/rsyntaxtree]rsyntaxtree -
       Visualization for syntactic trees in Ruby based on
       [https://github.com/rmagick/rmagick]RMagick. ^[dep:
       [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/nlp-with-ruby
       #imagemagick]ImageMagick]

Semantic Analysis

     * [https://github.com/flori/amatch]amatch - Set of five distance
       types between strings (including Levenshtein, Sellers,
       Jaro-Winkler, 'pair distance').
     * [https://github.com/GlobalNamesArchitecture/damerau-levenshtein]dam
       erau-levenshtein - Calculates edit distance using the
       Damerau-Levenshtein algorithm.
     * [https://github.com/colinsurprenant/hotwater]hotwater - Fast Ruby
       FFI string edit distance algorithms.
     * [https://github.com/dbalatero/levenshtein-ffi]levenshtein-ffi -
       Fast string edit distance computation, using the
       Damerau-Levenshtein algorithm.
     * [https://github.com/reddavis/TF-IDF]tf_idf - Term Frequency /
       Inverse Document Frequency in pure Ruby.
     * [https://github.com/jpmckinney/tf-idf-similarity]tf-idf-similarity
       - Calculate the similarity between texts using TF/IDF.

Pragmatical Analysis

     * [https://github.com/nzaillian/sentiment_lib]SentimentLib - Simple
       extensible sentiment analysis gem.

High Level Tasks

Spelling and Error Correction

     * [https://github.com/subosito/gingerice]gingerice - Spelling and
       Grammar corrections via the [http://www.gingersoftware.com/]Ginger
       API.
     * [https://github.com/romanbsd/hunspell]hunspell-i18n - Ruby bindings
       to the standard [https://hunspell.github.io/]Hunspell Spell
       Checker.
     * [https://github.com/postmodern/ffi-hunspell]ffi-hunspell - FFI
       based Ruby bindings for [https://hunspell.github.io/]Hunspell.
     * [https://github.com/segabor/Hunspell]hunspell - Ruby bindings to
       [https://hunspell.github.io/]Hunspell via Ruby C API.

Text Alignment

     * [https://github.com/povilasjurcys/alignment]alignment - Alignment
       routines for bilingual texts (Gale-Church implementation).

Machine Translation

     * [https://github.com/google/google-api-ruby-client]google-api-client
       - Google API Ruby Client.
     * [https://github.com/ikayzo/microsoft_translator]microsoft_translato
       r - Ruby client for the microsoft translator API.
     * [https://github.com/pawurb/termit]termit - Google Translate with
       speech synthesis in your terminal.
     * [https://github.com/pks/zipf]zipf - implementation of BLEU and
       other base algorithms.

Sentiment Analysis

     * [https://github.com/pachacamac/stimmung]stimmung - Semantic
       Polarity based on the
       [http://wortschatz.uni-leipzig.de/en/download]SentiWS lexicon.

Numbers, Dates, and Time Parsing

     * [https://github.com/mojombo/chronic]chronic - Pure Ruby natural
       language date parser.
     * [https://github.com/jrobertson/chronic_between]chronic_between -
       Simple Ruby natural language parser for date and time ranges.
     * [https://github.com/henrypoydar/chronic_duration]chronic_duration -
       Pure Ruby parser for elapsed time.
     * [https://github.com/xaviershay/kronic]kronic - Methods for parsing
       and formatting human readable dates.
     * [https://github.com/iainbeeston/nickel]nickel - Extracts date,
       time, and message information from naturally worded text.
     * [https://github.com/yb66/tickle]tickle - Parser for recurring and
       repeating events.
     * [https://github.com/jduff/numerizer]numerizer - Ruby parser for
       English number expressions.

Named Entity Recognition

     * [https://github.com/mblongii/ruby-ner]ruby-ner - Named Entity
       Recognition with Stanford NER and Ruby.
     * [https://github.com/tiendung/ruby-nlp]ruby-nlp - Ruby Binding for
       Stanford Pos-Tagger and Name Entity Recognizer.

Text-to-Speech-to-Text

     * [https://github.com/dejan/espeak-ruby]espeak-ruby - Small Ruby API
       for utilizing 'espeak' and 'lame' to create text-to-speech mp3
       files.
     * [https://github.com/c2h2/tts]tts - Text-to-Speech conversion using
       the Google translate service.
     * [https://github.com/adhearsion/att_speech]att_speech - Ruby wrapper
       over the AT&T Speech API for speech to text.
     * [https://github.com/watsonbox/pocketsphinx-ruby]pocketsphinx-ruby -
       Pocketsphinx bindings.

Dialog Agents, Assistants, and Chatbots

     * [https://github.com/muffinista/chatterbot]chatterbot -
       Straightforward ruby-based Twitter Bot Framework, using OAuth to
       authenticate.
     * [https://github.com/litaio/lita]lita - Highly extensible chat
       operation bot framework written with persistent storage on
       [https://redis.io/]Redis.

Linguistic Resources

     * [https://github.com/doches/rwordnet]rwordnet - Pure Ruby self
       contained API library for the
       [https://wordnet.princeton.edu/]Princeton WordNet®.
     * [https://github.com/ged/ruby-wordnet/blob/master/README.rdoc]wordne
       t - Performance tuned bindings for the
       [https://wordnet.princeton.edu/]Princeton WordNet®.

Machine Learning Libraries

   [https://en.wikipedia.org/wiki/Machine_learning]Machine Learning
   Algorithms in pure Ruby or written in other programming languages with
   appropriate bindings for Ruby.

   For more up-to-date list please look at the
   [https://github.com/arbox/machine-learning-with-ruby]Awesome ML with
   Ruby list.
     * [https://github.com/febeling/rb-libsvm]rb-libsvm - Support Vector
       Machines with Ruby.
     * [https://github.com/paulgoetze/weka-jruby]weka - JRuby bindings for
       Weka, different ML algorithms implemented through Weka.
     * [https://github.com/igrigorik/decisiontree]decisiontree - Decision
       Tree ID3 Algorithm in pure Ruby
       ^[[https://www.igvita.com/2007/04/16/decision-tree-learning-in-ruby
       /]post].
     * [https://github.com/maspwr/rtimbl]rtimbl - Memory based learners
       from the Timbl framework.
     * [https://github.com/jekyll/classifier-reborn]classifier-reborn -
       General classifier module to allow Bayesian and other types of
       classifications.
     * [https://github.com/ealdent/lda-ruby]lda-ruby - Ruby implementation
       of the
       [https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation]LDA
       (Latent Dirichlet Allocation) for automatic Topic Modelling and
       Document Clustering.
     * [https://github.com/tomz/liblinear-ruby-swig]liblinear-ruby-swig -
       Ruby interface to LIBLINEAR (much more efficient than LIBSVM for
       text classification).
     * [https://github.com/djcp/linnaeus]linnaeus - Redis-backed Bayesian
       classifier.
     * [https://github.com/mccraigmccraig/maxent_string_classifier]maxent_
       string_classifier - JRuby maximum entropy classifier for string
       data, based on the OpenNLP Maxent framework.
     * [https://github.com/reddavis/Naive-Bayes]naive_bayes - Simple Naive
       Bayes classifier.
     * [https://github.com/oasic/nbayes]nbayes - Full-featured, Ruby
       implementation of Naive Bayes.
     * [https://github.com/mustafaturan/omnicat]omnicat - Generalized rack
       framework for text classifications.
     * [https://github.com/mustafaturan/omnicat-bayes]omnicat-bayes -
       Naive Bayes text classification implementation as an OmniCat
       classifier strategy.
     * [https://github.com/tangledpath/ruby-fann]ruby-fann - Ruby bindings
       to the [http://leenissen.dk/fann/wp/]Fast Artificial Neural Network
       Library (FANN).
     * [https://github.com/himkt/rblearn]rblearn - Feature Extraction and
       Crossvalidation library.

Data Visualization

   Please refer to the
   [https://github.com/arbox/data-science-with-ruby#visualization]Data
   Visualization section on the
   [https://github.com/arbox/data-science-with-ruby]Data Science with Ruby
   list.

Optical Character Recognition

     * [https://github.com/meh/ruby-tesseract-ocr]tesseract-ocr - FFI
       based wrapper over the
       [https://github.com/tesseract-ocr/tesseract]Tesseract OCR Engine.

Text Extraction

     * [https://github.com/yomurb/yomu]yomu - library for extracting text
       and metadata from files and documents using the
       [https://tika.apache.org/]Apache Tika content analysis toolkit.

Full Text Search, Information Retrieval, Indexing

     * [https://github.com/rsolr/rsolr]rsolr - Ruby and Rails client
       library for [http://lucene.apache.org/solr/]Apache Solr.
     * [https://github.com/sunspot/sunspot]sunspot - Rails centric client
       for [http://lucene.apache.org/solr/]Apache Solr.
     * [https://github.com/pat/thinking-sphinx]thinking-sphinx -
       [http://guides.rubyonrails.org/active_record_basics.html#what-is-ac
       tive-record-questionmark]Active Record plugin for using
       [http://sphinxsearch.com/]Sphinx in (not only) Rails based
       projects.
     * [https://github.com/elastic/elasticsearch-ruby/tree/master/elastics
       earch]elasticsearch - Ruby client and API for
       [https://www.elastic.co/]Elasticsearch.
     * [https://github.com/elastic/elasticsearch-rails]elasticsearch-rails
       - Ruby and Rails integrations for
       [https://www.elastic.co/]Elasticsearch.
     * [https://github.com/google/google-api-ruby-client]google-api-client
       - Ruby API library for
       [https://developers.google.com/api-client-library/ruby/]Google
       services.

Language Aware String Manipulation

   Libraries for language aware string manipulation, i.e. search, pattern
   matching, case conversion, transcoding, regular expressions which need
   information about the underlying language.
     * [https://github.com/seamusabshere/fuzzy_match]fuzzy_match - Fuzzy
       string comparison with Distance measures and Regular Expression.
     * [https://github.com/kiyoka/fuzzy-string-match]fuzzy-string-match -
       Fuzzy string matching library for Ruby.
     * [https://github.com/rails/rails/tree/master/activesupport/lib/activ
       e_support]active_support - RoR ActiveSupport gem has various string
       extensions that can handle case.
     * [https://github.com/brianhempel/fuzzy_tools]fuzzy_tools - Toolset
       for fuzzy searches in Ruby tuned for accuracy.
     * [http://disu.se/software/u-1.0/]u - U extends Ruby's Unicode
       support.
     * [https://github.com/blackwinter/unicode]unicode - Unicode
       normalization library.
     * [https://github.com/talyssonoc/CommonRegexRuby]CommonRegexRuby -
       Find a lot of kinds of common information in a string.
     * [https://github.com/tom-lord/regexp-examples]regexp-examples -
       Generate strings that match a given regular expression.
     * [https://github.com/ryan-endacott/verbal_expressions]verbal_express
       ions - Make difficult regular expressions easy.
     * [https://github.com/AnalyzePlatypus/TranslitKit]translit_kit -
       Transliterate Hebrew & Yiddish text into Latin characters.
     * [https://github.com/mudge/re2]re2 - hight-speed Regular Expression
       library for Text Mining and Text Extraction.
     * [https://github.com/mochizukikotaro/regex_sample]regex_sample -
       sample string generation from a given Regular Expression.

Articles, Posts, Talks, and Presentations

     * 2017
          + Syntax Isn't Everything: NLP For Rubyists by
            [https://twitter.com/the_thagomizer]Aja Hammerly
            ^[[http://www.thagomizer.com/files/NLP_RailsConf2017.pdf]slide
            s]
          + Scientific Computing on JRuby by
            [https://twitter.com/prasun_anand]Prasun Anand
            ^[[https://www.slideshare.net/PrasunAnand2/fosdem2017-scientif
            ic-computing-on-jruby]slides |
            [https://ftp.fau.de/fosdem/2017/K.4.201/ruby_scientific_comput
            ing_on_jruby.mp4]video |
            [https://www.slideshare.net/PrasunAnand2/scientific-computing-
            on-jruby]slides |
            [https://www.slideshare.net/PrasunAnand2/scientific-computatio
            n-on-jruby]slides]
          + Unicode Normalization in Ruby by
            [https://twitter.com/starrhorne]Starr Horne
            ^[[http://blog.honeybadger.io/ruby_unicode_normalization/]post
            ]
     * 2016
          + Quickly Create a Telegram Bot in Ruby by
            [https://twitter.com/ArdianHaxha]Ardian Haxha
            ^[[https://www.sitepoint.com/quickly-create-a-telegram-bot-in-
            ruby/]tutorial]
          + Deep Learning: An Introduction for Ruby Developers by
            [https://twitter.com/geoffreylitt]Geoffrey Litt
            ^[[https://speakerdeck.com/geoffreylitt/deep-learning-an-intro
            duction-for-ruby-developers]slides]
          + How I made a pure-Ruby word2vec program more than 3x faster by
            [https://twitter.com/remore]Kei Sawada
            ^[[https://speakerdeck.com/remore/how-i-made-a-pure-ruby-word2
            vec-program-more-than-3x-faster]slides]
          + Domo arigato, Mr. Roboto: Machine Learning with Ruby by
            [https://twitter.com/ericqweinstein]Eric Weinstein
            ^[[https://speakerdeck.com/ericqweinstein/domo-arigato-mr-robo
            to-machine-learning-with-ruby]slides |
            [https://www.youtube.com/watch?v=T1nFQ49TyeA]video]
     * 2015
          + N-gram Analysis for Fun and Profit by
            [https://github.com/matugm]Jesus Castello
            ^[[http://www.rubyguides.com/2015/09/ngram-analysis-ruby/]tuto
            rial]
          + Machine Learning made simple with Ruby by
            [https://github.com/rugginoso]Lorenzo Masini
            ^[[https://www.leanpanda.com/blog/2015/08/24/machine-learning-
            automatic-classification/]tutorial]
          + Using Ruby Machine Learning to Find Paris Hilton Quotes by
            [https://github.com/RickCarlino]Rick Carlino
            ^[[http://web.archive.org/web/20160414072324/http://datamelon.
            io/blog/2015/using-ruby-machine-learning-id-paris-hilton-quote
            s.html]tutorial]
          + Exploring Natural Language Processing in Ruby by
            [https://github.com/diasks2]Kevin Dias
            ^[[https://www.slideshare.net/diasks2/exploring-natural-langua
            ge-processing-in-ruby]slides]
          + Machine Learning made simple with Ruby by
            [https://twitter.com/rugginoso]Lorenzo Masini
            ^[[https://www.leanpanda.com/blog/2015/08/24/machine-learning-
            automatic-classification/]post]
          + Practical Data Science in Ruby by Bobby Grayson
            ^[[http://slides.com/bobbygrayson/p#/]slides]
     * 2014
          + Natural Language Parsing with Ruby by
            [https://github.com/glaucocustodio]Glauco Custódio
            ^[[http://glaucocustodio.github.io/2014/11/10/natural-language
            -parsing-with-ruby/]tutorial]
          + Demystifying Data Science: Analyzing Conference Talks with
            Rails and Ngrams by [https://github.com/toddwschneider]Todd
            Schneider ^[[https://www.youtube.com/watch?v=2ZDCxwB29Bg]video
            | [https://github.com/Genius/abstractogram]code]
          + Natural Language Processing with Ruby by
            [https://github.com/t6d]Konstantin Tennhard
            ^[[https://www.youtube.com/watch?v=5u86qVh8r0M]video |
            [https://www.youtube.com/watch?v=oFmy_QBQ5DU]video |
            [https://www.youtube.com/watch?v=sPkeeWnsMn0]video |
            [http://euruko2013.org/speakers/presentations/natural_language
            _processing_with_ruby_and_opennlp-tennhard.pdf]slides]
     * 2013
          + How to parse 'go' - Natural Language Processing in Ruby by
            [https://twitter.com/tomcartwrightuk]Tom Cartwright
            ^[[https://www.slideshare.net/TomCartwright/natual-language-pr
            ocessing-in-ruby]slides |
            [https://skillsmatter.com/skillscasts/4883-how-to-parse-go]vid
            eo]
          + Natural Language Processing in Ruby by
            [https://github.com/brandonblack]Brandon Black
            ^[[https://speakerdeck.com/brandonblack/natural-language-proce
            ssing-in-ruby]slides |
            [http://confreaks.tv/videos/railsconf2013-natural-language-pro
            cessing-with-ruby]video]
          + Natural Language Processing with Ruby: n-grams by
            [https://github.com/nathankleyn]Nathan Kleyn
            ^[[https://www.sitepoint.com/natural-language-processing-ruby-
            n-grams/]tutorial |
            [https://github.com/nathankleyn/ruby_nlp]code]
          + Seeking Lovecraft, Part 1: An introduction to NLP and the
            Treat Gem by [https://github.com/rlqualls]Robert Qualls
            ^[[https://www.sitepoint.com/seeking-lovecraft-part-1-an-intro
            duction-to-nlp-and-the-treat-gem/]tutorial]
     * 2012
          + Machine Learning with Ruby, Part One by
            [https://twitter.com/vasinov]Vasily Vasinov
            ^[[http://www.vasinov.com/blog/machine-learning-with-ruby-part
            -one/]tutorial]
     * 2011
          + Ruby one-liners by [https://twitter.com/benoithamelin]Benoit
            Hamelin ^[[http://benoithamelin.tumblr.com/ruby1line]post]
          + Clustering in Ruby by [https://twitter.com/colinfdrake]Colin
            Drake
            ^[[https://colindrake.me/post/k-means-clustering-in-ruby/]post
            /)]
     * 2010
          + bayes_motel - Bayesian classification for Ruby by
            [https://twitter.com/mperham]Mike Perham
            ^[[http://www.mikeperham.com/2010/04/28/bayes_motel-bayesian-c
            lassification-for-ruby/]post]
     * 2009
          + Porting the UEA-Lite Stemmer to Ruby by
            [https://twitter.com/ealdent]Jason Adams
            ^[[https://ealdent.wordpress.com/2009/07/16/porting-the-uea-li
            te-stemmer-to-ruby/]post]
          + NLP Resources for Ruby by [https://twitter.com/ealdent]Jason
            Adams
            ^[[https://ealdent.wordpress.com/2009/09/13/nlp-resources-for-
            ruby/]post]
     * 2008
          + Support Vector Machines (SVM) in Ruby by
            [https://twitter.com/igrigorik]Ilya Grigorik
            ^[[https://www.igvita.com/2008/01/07/support-vector-machines-s
            vm-in-ruby/]post]
          + Practical text classification with Ruby by
            [https://twitter.com/gleicon]Gleicon Moraes
            ^[[https://zenmachine.wordpress.com/practical-text-classificat
            ion-with-ruby/]post |
            [https://github.com/gleicon/zenmachine]code]
     * 2007
          + Decision Tree Learning in Ruby by
            [https://twitter.com/igrigorik]Ilya Grigorik
            ^[[https://www.igvita.com/2007/04/16/decision-tree-learning-in
            -ruby/]post]
     * 2006
          + Speak My Language: Natural Language Processing With Ruby by
            [https://deveiate.org/resume.html]Michael Granger
            ^[[https://deveiate.org/misc/Speak-My-Language.pdf]slides |
            [http://blog.nicksieger.com/articles/2006/10/22/rubyconf-natur
            al-language-generation-and-processing-in-ruby/]write-up |
            [http://juixe.com/papers/RubyConf2006.pdf]write-up]

Projects and Code Examples

     * [https://github.com/schneems/going_the_distance]Going the Distance
       - Implementations of various distance algorithms with example
       calculations.
     * [https://github.com/mblongii/ruby-ner]Named entity recognition with
       Stanford NER and Ruby - NER Examples in Ruby and Java with some
       [https://web.archive.org/web/20120722225402/http://mblongii.com/201
       2/04/15/named-entity-recognition-with-stanford-ner-and-ruby/]explan
       ations.
     * [http://rubywordcount.com/]Words Counted - examples of customizable
       word statistics powered by
       [https://github.com/abitdodgy/words_counted]words_counted.
     * [https://yohasebe.com/rsyntaxtree/]RSyntaxTree - Web based
       demonstration of the syntactic tree visualization.

Books

     * [https://twitter.com/robmil/]Miller, Rob. Text Processing with
       Ruby: Extract Value from the Data That Surrounds You. Pragmatic
       Programmers, 2015.
       ^[[https://www.amazon.com/Text-Processing-Ruby-Extract-Surrounds/dp
       /1680500708]link]
     * [https://twitter.com/mark_l_watson]Watson, Mark. Scripting
       Intelligence: Web 3.0 Information Gathering and Processing. APRESS,
       2010.
       ^[[https://www.amazon.de/Scripting-Intelligence-Information-Gatheri
       ng-Processing/dp/1430223510]link]
     * [https://twitter.com/mark_l_watson]Watson, Mark. Practical Semantic
       Web and Linked Data Applications. Lulu, 2010.
       ^[[http://www.lulu.com/shop/mark-watson/practical-semantic-web-and-
       linked-data-applications-java-edition/paperback/product-10915016.ht
       ml]link]

Community

     * [https://www.reddit.com/r/LanguageTechnology/search?q=ruby&restrict
       _sr=on]Reddit
     * [https://stackoverflow.com/search?q=%5Bnlp%5D+and+%5Bruby%5D]Stack
       Overflow
     * [https://twitter.com/search?q=Ruby%20NLP%20%23ruby%20OR%20%23nlproc
       %20OR%20%23rubynlp%20OR%20%23nlp&src=typd&lang=en]Twitter

Needs your Help!

   All projects in this section are really important for the community but
   need more attention. Please if you have spare time and dedication spend
   some hours on the code here.
     * [https://github.com/dbalmain/ferret]ferret - Information Retrieval
       in C and Ruby.
     * [https://github.com/ssoper/summarize]summarize - Ruby native
       wrapper for
       [https://github.com/neopunisher/Open-Text-Summarizer]Open Text
       Summarizer.

Related Resources

     * [https://github.com/jonsafari/nmt-list]Neural Machine Translation
       Implementations
     * [https://github.com/markets/awesome-ruby#natural-language-processin
       g]Awesome Ruby - Among other awesome items a short list of NLP
       related projects.
     * [https://github.com/diasks2/ruby-nlp]Ruby NLP - State-of-Art
       collection of Ruby libraries for NLP.
     * [https://github.com/edobashira/speech-language-processing]Speech
       and Natural Language Processing - General List of NLP related
       resources (mostly not for Ruby programmers).
     * [http://sciruby.com/]Scientific Ruby - Linear Algebra,
       Visualization and Scientific Computing for Ruby.
     * [https://github.com/SciRuby/iruby]iRuby - IRuby kernel for Jupyter
       (formelly IPython).
     * [https://github.com/kba/awesome-ocr]Awesome OCR - Multitude of OCR
       (Optical Character Recognition) resources.
     * [https://github.com/jtoy/awesome-tensorflow]Awesome TensorFlow -
       Machine Learning with TensorFlow libraries.
     * [https://www.imagemagick.org/script/index.php]ImageMagick

License

   [https://creativecommons.org/publicdomain/zero/1.0/]Creative Commons
   Zero 1.0 Awesome NLP with Ruby by [https://github.com/arbox]Andrei
   Beliankou and
   [https://github.com/arbox/nlp-with-ruby/graphs/contributors]Contributor
   s.

   To the extent possible under law, the person who associated CC0 with
   Awesome NLP with Ruby has waived all copyright and related or
   neighboring rights to Awesome NLP with Ruby.

   You should have received a copy of the CC0 legalcode along with this
   work. If not, see
   [https://creativecommons.org/publicdomain/zero/1.0/]https://creativecom
   mons.org/publicdomain/zero/1.0/.

     * © 2018 GitHub, Inc.
     * [https://github.com/site/terms]Terms
     * [https://github.com/site/privacy]Privacy
     * [https://help.github.com/articles/github-security/]Security
     * [https://status.github.com/]Status
     * [https://help.github.com/]Help

   [https://github.com/]
     * [https://github.com/contact]Contact GitHub
     * [https://developer.github.com/]API
     * [https://training.github.com/]Training
     * [https://shop.github.com/]Shop
     * [https://blog.github.com/]Blog
     * [https://github.com/about]About

   (BUTTON) You can't perform that action at this time.

   You signed in with another tab or window.
   Rel
   oad to refresh your session. You signed out in another tab or window.
   Rel
   oad to refresh your session.

   (BUTTON)

   Press h to open a hovercard with more details.
