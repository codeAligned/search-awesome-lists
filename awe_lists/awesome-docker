   #Recen
   t Commits to awesome-docker:master

   Skip to content
   [https://github.com/]
     * Features
     * Explore
     * Pricing

   This repository
   ____________________
   Sign
   in or Sign up

     * 595
     * 10,006
     * 1,178

awesome-docker

   Code
   Pull requests 0
   Insights
   (BUTTON) Dismiss

Join GitHub today

   GitHub is home to over 20 million developers working together to host
   and review code, manage projects, and build software together.

   Sign up
   ³ A curated list of Docker resources and projects
   [https://awesome-docker.netlify.com/]https://awesome-docker.netlify.com
   /
   docker
   awesome-list
   tools
   moby
   docker-image
   docker-deployment
   docker-api
   docker-machine
   docker-registry
     * 1,515
       commits
     * 1 release
     * 214
       contributors

   Clone or download

Clone with HTTPS [https://help.github.com/articles/which-remote-url-should-i-use]

   Use Git or checkout with SVN using the web URL.
   https://github.com/v
   Download
   ZIP

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching Xcode...

   If nothing happens, [https://developer.apple.com/xcode/]download Xcode
   and try again.

   (BUTTON) Go back

Launching Visual Studio...

   If nothing happens, [https://visualstudio.github.com/]download the
   GitHub extension for Visual Studio and try again.

   (BUTTON) Go back
   Find file
   (BUTTON) Branch: master
   Switch branches/tags
   ____________________
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-docke
       r]Branches
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-docke
       r]Tags

   
   container-terminology
   fix-ansible-container-link
   master
   Nothing to show
   v0.8
   Nothing to show
   (BUTTON) New pull request
   Fetching latest commit...
   Cannot retrieve the latest commit at this time.
   Permalink
   Failed to load latest commit information.
   .github
   Move LICENSE.md Apr 6, 2018
   website
   [file://localhost/veggiemonk/awesome-docker/commit/ead9baa1178f07319898
   39313513f0b7173bf145]Improve CSS Apr 7, 2018
   .e
   slintrc.js
   [file://localhost/veggiemonk/awesome-docker/commit/ead9baa1178f07319898
   39313513f0b7173bf145]Improve CSS Apr 7, 2018
   
   .gitattributes
   [file://localhost/veggiemonk/awesome-docker/commit/6fbbe114d032b8f3fd74
   497b3be9efad26106c58]Create .gitattributes Feb 18, 2017
   .git
   ignore
   [file://localhost/veggiemonk/awesome-docker/commit/3e5646c4dbf60dd6ad17
   a8c4988ab72594c91182]Add warning Mar 30, 2018
   .nvmrc
   Netlify Mar 17, 2018
   .tr
   avis.yml
    white list blog.sixeyed Dec 1, 2017
   LICE
   NSE.md
   Move LICENSE.md Apr 6, 2018
   READM
   E.md
   updated PR Apr 9, 2018
   badge
   .svg
   Badge Mar 23, 2017
   build.
   js
   Improve CSS Apr 7, 2018
   inde
   x.html
   refactor build step Mar 18, 2018
   pa
   ckage.json
   critical css inlined Mar 18, 2018

README.md

Say Thanks

     A curated list of Docker resources and projects Inspired by
     [https://github.com/sindresorhus]@sindresorhus'
     [https://github.com/sindresorhus/awesome]awesome and improved by
     these
     [https://github.com/veggiemonk/awesome-docker/graphs/contributors]am
     azing contributors.

   Just click
   [https://github.com/veggiemonk/awesome-docker/edit/master/README.md]REA
   DME.md to submit a
   [https://github.com/veggiemonk/awesome-docker/edit/master/README.md]pul
   l request. If this list is not complete, you can
   [https://github.com/veggiemonk/awesome-docker/edit/master/README.md]con
   tribute to make it so. Here is a great video tutorial to learn how to
   [https://egghead.io/lessons/javascript-identifying-how-to-contribute-to
   -an-open-source-project-on-github]contribute on Github

   You can see the updates from
   [https://twitter.com/awesome_docker]TWITTER

     Please, help organize these resources so that they are easy to find
     and understand for new comers. See how to
     [https://github.com/veggiemonk/awesome-docker/blob/master/.github/CO
     NTRIBUTING.md]Contribute for tips!

pull request to improve this file. Thank you!

   The creators and maintainers of this list do not receive any form of
   payment to accept a change made by any contributor. This page is not an
   official Docker product in any way. It is a list of links to projects
   and is maintained by volunteers. Everybody is welcome to contribute.
   The goal of this repo is to index open-source projects, not to
   advertise for profit.

   All the links are monitored and tested with
   [https://github.com/dkhamsing/awesome_bot]awesome_bot made by
   [https://github.com/dkhamsing]@dkhamsing

Contents

     * Introduction
          + What is Docker?
          + Where to start?
          + Where to start? (Windows)
     * Projects
          + Container Operations
               o Container Composition
               o Deployment and
                 Infrastructure
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#monitoring]Monitoring
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#networking]Networking
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#orchestration]Orchestration
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#paas]PaaS
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#reverse-proxy]Reverse Proxy
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#security]Security
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#service-discovery]Service Discovery
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#volume-management--data]Volume Management /
                 Data
               o User Interface
                    # Desktop
                    # Terminal
                    # Web
          + Docker Images
               o Base Tools
               o Builder
               o Dockerfile
               o Linter
               o Metadata
               o Registry
          + Development with Docker
               o API Client
               o CI/CD
               o Development
                 Environment
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#garbage-collection]Garbage Collection
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#serverless]Serverless
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#testing]Testing
               o [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awe
                 some-docker#wrappers]Wrappers
          + [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-
            docker#services-based-on-docker-heavy_dollar_sign]Services
            based on Docker (²)
               o CI/CD
               o CaaS
               o Monitoring Services
     * Useful Resources
          + Awesome Lists
          + Good Tips
          + Raspberry Pi & ARM
          + Security
          + Videos
     * Communities and Meetups
          + Brazilian
          + Chinese
          + English
          + Russian

Legend

     * Abandoned
     * Beta §
     * Monetized ²

What is Docker

     Docker is an open platform for developers and sysadmins to build,
     ship, and run distributed applications. Consisting of Docker Engine,
     a portable, lightweight runtime and packaging tool, and Docker Hub,
     a cloud service for sharing applications and automating workflows,
     Docker enables apps to be quickly assembled from components and
     eliminates the friction between development, QA, and production
     environments. As a result, IT can ship faster and run the same app,
     unchanged, on laptops, data center VMs, and any cloud.

   Source: [https://www.docker.com/what-docker]What is Docker

Where to start

     * [http://etherealmind.com/basics-docker-containers-hypervisors-coreo
       s/]Basics - Docker, Containers, Hypervisors, CoreOS
     * [https://www.youtube.com/watch?v=XeSD17YRijk&list=PL-v3vdeWVEsXT-u0
       JDQZnM90feU3NE3v8]Dive Into Docker: From "What is Docker?" to
       "Hello World" (60:25) by
       [https://twitter.com/nickjanetakis]@nickjanetakis
     * [https://docker-curriculum.com/]Docker Curriculum: A comprehensive
       tutorial for getting started with Docker. Teaches how to use Docker
       and deploy dockerized apps on AWS with Elastic Beanstalk and
       Elastic Container Service.
     * [https://docs.docker.com/]Docker Documentation
     * [https://github.com/machzqcq/docker-for-all]Docker for all -
       Developers, Testers, DevOps, Product Owners + Videos Docker
       Training Videos for all
     * [https://github.com/odewahn/docker-jumpstart/]Docker Jumpstart: a
       quick introduction
     * [https://docs.docker.com/toolbox/overview/]Docker Toolbox - Quick
       setup and launch of a Docker environment on older Mac (10.10 and
       below) and Windows (8.1 and below) systems. On newer systems it's
       recommended to use the
       [https://docs.docker.com/docker-for-mac/]Docker for Mac or
       [https://docs.docker.com/docker-for-windows/]Docker for Windows.
     * [https://training.docker.com/]Docker Training - Includes a free
       self-paced hands-on tutorial (free registration required or sign-in
       with DockerHub ID)
     * [https://www.katacoda.com/]Katacoda: Learn Docker using Interactive
       Browser-Based Labs
     * [https://github.com/dwyl/learn-docker]Learn Docker Full environment
       set up, screenshots, step-by-step tutorial and more resources
       (video, articles, cheat sheets) by [https://github.com/dwyl]@dwyl
     * [https://training.play-with-docker.com/]Play With Docker - PWD is a
       great way to get started with Docker from beginner to advanced
       users. Docker runs directly in your browser.
     * [http://play-with-moby.com/]Play With Moby - PWM is a web based
       Moby playground which allows you to try different components of the
       platform in seconds. It gives you the experience of having a free
       Alpine Linux Virtual Machine in the cloud where you can build and
       run Moby projects and even create clusters to experiment.
     * [https://developers.redhat.com/blog/2018/02/22/container-terminolog
       y-practical-introduction/]Practical Introduction to Container
       Terminology The landscape for container technologies is larger than
       just docker. Without a good handle on the terminology, It can be
       difficult to grasp the key differences between docker and (pick
       your favorites, CRI-O, rkt, lxc/lxd) or understand what the Open
       Container Initiative is doing to standardize container technology.

   Cheatsheets by
     * [https://github.com/eon01/DockerCheatSheet]@eon01
     * [https://github.com/dimonomid/docker-quick-ref]@dimonomid (PDF)
     * [http://docker.jens-piegsa.com/]@JensPiegsa
     * [https://github.com/wsargent/docker-cheat-sheet]@wsargent

Where to start (Windows)

     * [http://collabnix.com/a-comparative-study-of-docker-engine-on-windo
       ws-server-vs-linux-platform/]A Comparative Study of Docker Engine
       on Windows Server vs Linux Platform Comparing the feature sets and
       implementations of Docker on Windows and Linux
     * [https://blog.docker.com/2016/09/build-your-first-docker-windows-se
       rver-container/]Build And Run Your First Docker Windows Server
       Container Walkthrough installing Docker on Windows 10, building a
       Docker image and running a Windows container
     * [https://toedter.com/2015/05/11/docker-on-windows-behind-a-firewall
       /]Docker on Windows behind a firewall by
       [https://twitter.com/kaitoedter]@kaitoedter
     * [https://success.docker.com/article/modernizing-traditional-dot-net
       -applications]Docker Reference Architecture: Modernizing
       Traditional .NET Framework Applications - You will learn to
       identify the types of .NET Framework applications that are good
       candidates for containerization, the "lift-and-shift" approach to
       containerization.
     * [https://blog.alexellis.io/docker-does-sql2016-aspnet/]Docker with
       Microsoft SQL 2016 + ASP.NET Demonstration running ASP.NET and SQL
       Server workloads in Docker
     * [https://www.hanselman.com/blog/ExploringASPNETCoreWithDockerInBoth
       LinuxAndWindowsContainers.aspx]Exploring ASP.NET Core with Docker
       in both Linux and Windows Containers Running ASP.NET Core apps in
       Linux and Windows containers, using
       [https://docs.docker.com/docker-for-windows/]Docker for Windows
     * [https://blog.sixeyed.com/dockerizing-nerd-dinner-part-1-running-a-
       legacy-asp-net-app-in-a-windows-container/]Running a Legacy ASP.NET
       App in a Windows Container Steps for Dockerizing a legacy ASP.NET
       app and runnning as a Windows container
     * [https://www.youtube.com/watch?v=N7SG2wEyQtM]Windows Containers and
       Docker: The 101 ¥ - A 20-minute overview, using Docker to run
       PowerShell, ASP.NET Core and ASP.NET apps
     * [https://docs.microsoft.com/en-us/virtualization/windowscontainers/
       about/index]Windows Containers Quick Start Overview of Windows
       containers, drilling down to Quick Starts for Windows 10 and
       Windows Server 2016
     __________________________________________________________________

Projects

   Moby = open source development

   Docker CE = free product release based on Moby

   Docker EE = commercial product release based on Docker CE.

   Docker EE is on the same code base as Docker CE, so also built from
   Moby, with commercial components added, such as "docker data center /
   universal control plane"
     * [https://github.com/moby/moby]Moby
     * [https://hub.docker.com/]Docker Images
     * [https://github.com/docker/compose/]Docker Compose (Define and run
       multi-container applications with Docker)
     * [https://github.com/docker/machine]Docker Machine (Machine
       management for a container-centric world)
     * [https://github.com/docker/distribution]Docker Registry (The Docker
       toolset to pack, ship, store, and deliver content)
     * [https://github.com/docker/swarm]Docker Swarm (Swarm: a
       Docker-native clustering system)

Container Operations

Container Composition

     * [https://github.com/icy/bocker]bocker (2) - Write Dockerfile
       completely in Bash. Extensible and simple. --> Reusable by
       [https://github.com/icy]@icy
     * [https://github.com/p8952/bocker]bocker (1) - Docker implemented in
       100 lines of bash by [https://github.com/p8952]p8952
     * [https://github.com/box-builder/box]box - Build Dockerfile images
       with a mruby DSL, includes flattening and layer manipulation
     * [https://github.com/byrnedo/capitan]Capitan - Composable docker
       orchestration with added scripting support by
       [https://github.com/byrnedo]@byrnedo.
     * compose_plantuml - Generate Plantuml graphs from docker-compose
       files by [https://github.com/funkwerk]@funkwerk
     * [https://github.com/magicmark/composerize]Composerize - Convert
       docker run commands into docker-compose files
     * [https://github.com/polonskiy/crowdr]crowdr - Tool for managing
       multiple Docker containers (docker-compose alternative) by
       [https://github.com/polonskiy/]@polonskiy
     * [https://github.com/abesto/docker-compose-graphviz]docker-compose-g
       raphviz - Turn a docker-compose.yml files into Graphviz .dot files
       by [https://github.com/abesto]@abesto
     * [https://github.com/Alexis-benoist/draw-compose]draw-compose -
       Utility to draw a schema of a docker compose by
       [https://github.com/Alexis-benoist]@Alexis-benoist
     * [https://github.com/cisco/elsy]elsy - An opinionated,
       multi-language, build tool based on Docker and Docker Compose
     * [https://github.com/cloud66/habitus]habitus - A Build Flow Tool for
       Docker by [https://github.com/cloud66]@cloud66
     * [https://github.com/toscanini/maestro]Maestro - Maestro provides
       the ability to easily launch, orchestrate and manage mulitiple
       Docker containers as single unit by
       [https://github.com/toscanini]@tascanini
     * [https://github.com/ashmckenzie/percheron]percheron - Organise your
       Docker containers with muscle and intelligence by
       [https://github.com/ashmckenzie]@ashmckenzie
     * [https://github.com/ihucos/plash]plash - A container run and build
       engine - runs inside docker.
     * [https://github.com/grammarly/rocker-compose]rocker-compose -
       Docker composition tool with idempotency features for deploying
       apps composed of multiple containers. By
       @
       grammarly
     * [https://github.com/grammarly/rocker]rocker - Extended Dockerfile
       builder. Supports multiple FROMs, MOUNTS, templates, etc. by
       g
       rammarly.
     * [https://github.com/stacker/stacker-cli]Stacker - Docker Compose
       Templates. Stacker provides an abstraction layer over Docker
       Compose and a better DX (developer experience).
     * [https://github.com/CenturyLinkLabs/zodiac]Zodiac - A lightweight
       tool for easy deployment and rollback of dockerized applications.
       By [https://github.com/CenturyLinkLabs]@CenturyLinkLabs

Deployment and Infrastructure

     * [https://gitlab.com/blackfish/blackfish]blackfish - a CoreOS VM to
       build swarm clusters for Dev & Production by
       [http://datamc.io/]@DataMC
     * [https://github.com/newrelic/centurion]Centurion - Centurion is a
       mass deployment tool for Docker fleets. It takes containers from a
       Docker registry and runs them on a fleet of hosts with the correct
       environment variables, host volume mappings, and port mappings. By
       [https://github.com/newrelic]@newrelic
     * [https://github.com/brooklyncentral/clocker]Clocker - Clocker
       creates and manages a Docker cloud infrastructure. Clocker supports
       single-click deployments and runtime management of multi-node
       applications that run as containers distributed across multiple
       hosts, on both Docker and Marathon. It leverages
       [https://github.com/projectcalico/calicoctl]Calico and
       [https://github.com/weaveworks/weave]Weave for networking and
       [http://brooklyn.apache.org/]Brooklyn for application blueprints.
       By [https://github.com/brooklyncentral]@brooklyncentral
     * [https://github.com/ehazlett/conduit]Conduit - Experimental
       deployment system for Docker by
       [https://github.com/ehazlett]@ehazlett
     * [https://github.com/gondor/depcon]depcon - Depcon is written in Go
       and allows you to easily deploy Docker containers to Apache
       Mesos/Marathon, Amazon ECS and Kubernetes. By
       [https://github.com/gondor]@gonodr
     * [https://github.com/ttiny/deploy]deploy - Git and Docker deployment
       tool. A middle ground between simple Docker composition tools and
       full blown cluster orchestration by
       [https://github.com/ttiny]@ttiny
     * [https://github.com/humblec/dockit]dockit - Do docker actions and
       Deploy gluster containers! By [https://github.com/humblec]@humblec
     * [https://github.com/Grafeas/Grafeas]Grafeas - A common API for
       metadata about containers, from image and build details to security
       vulnerabilities. By [https://github.com/Grafeas]Grafeas
     * [https://github.com/longshoreman/longshoreman]Longshoreman -
       Longshoreman automates application deployment using Docker. Just
       create a Docker repository (or use a service), configure the
       cluster using AWS or Digital Ocean (or whatever you like) and
       deploy applications using a Heroku-like CLI tool. By
       [https://github.com/longshoreman]longshoreman

Monitoring

     * [https://github.com/axibase/atsd-use-cases/tree/master/Solutions/do
       cker]Axibase Collector - Axibase Collector streams performance
       counters, configuration changes and lifecycle events from the
       Docker engine(s) into Axibase Time Series Database for roll-up
       dashboards and integration with upstream monitoring systems.
     * [https://github.com/google/cadvisor]cAdvisor - Analyzes resource
       usage and performance characteristics of running containers.
       Created by [https://github.com/google]@Google
     * [https://github.com/deltaskelta/docker-alertd]Docker-Alertd -
       Monitor and send alerts based on docker container resource
       usage/statistics
     * [https://github.com/vfarcic/docker-flow-monitor]Docker-Flow-Monitor
       - Reconfigures Prometheus when a new service is updated or deployed
       automatically by [https://github.com/vfarcic]@vfarcic
     * [https://github.com/kiyoto/docker-fluentd]Docker-Fluentd - Docker
       container to Log Other Containers' Logs. One can aggregate the logs
       of Docker containers running on the same host using Fluentd by
       [https://github.com/kiyoto]@kiyoto
     * [https://github.com/dockerana/dockerana]Dockerana - packaged
       version of Graphite and Grafana, specifically targeted at metrics
       from Docker.
     * [https://www.dynatrace.com/technologies/cloud-and-microservices/doc
       ker-monitoring/]Dynatrace - Monitor containerized applications
       without installing agents or modifying your Run commands
     * [https://nicolargo.github.io/glances/]Glances - A cross-platform
       curses-based system monitoring tool written in Python by
       [https://github.com/nicolargo]@nicolargo
     * [https://grafana.com/dashboards/179]Grafana Docker Dashboard
       Template - A template for your Docker, Grafana and Prometheus stack
       [https://github.com/vegasbrianc]@vegasbrianc
     * [https://github.com/vegasbrianc/docker-monitoring]InfluxDB,
       cAdvisor, Grafana - InfluxDB Time series DB in combination with
       Grafana and cAdvisor by
       [https://github.com/vegasbrianc]@vegasbrianc
     * [https://github.com/gocardless/logjam]LogJam - Logjam is a log
       forwarder designed to listen on a local port, receive log entries
       over UDP, and forward these messages on to a log collection server
       (such as logstash) by [https://github.com/gocardless]@gocardless
     * [https://github.com/sematext/sematext-agent-docker]Logsene for
       Docker Monitoring of Metrics, Events and Logs implemented in
       Node.js. Integrated
       [https://github.com/sematext/logagent-js]logagent-js to detect and
       parse various log formats. [https://twitter.com/sematext]@sematext
     * [https://github.com/gliderlabs/logspout]Logspout - Log routing for
       Docker container logs by [https://github.com/gliderlabs]@gliderlabs
     * [https://github.com/uschtwill/docker_monitoring_logging_alerting]Ou
       t-of-the-box Host/Container Monitoring/Logging/Alerting Stack -
       Docker host and container monitoring, logging and alerting out of
       the box using cAdvisor, Prometheus, Grafana for monitoring,
       Elasticsearch, Kibana and Logstash for logging and elastalert and
       Alertmanager for alerting. Set up in 5 Minutes. Secure mode for
       production use with built-in
       [https://github.com/jwilder/nginx-proxy]Automated Nginx Reverse
       Proxy (jwilder's).
     * [https://github.com/monitoringartist/Zabbix-Docker-Monitoring]Zabbi
       x Docker module - Zabbix module that provides discovery of running
       containers, CPU/memory/blk IO/net container metrics. Systemd Docker
       and LXC execution driver is also supported. It's a dynamically
       linked shared object library, so its performance is (~10x) better,
       than any script solution.
     * [https://github.com/gomex/docker-zabbix]Zabbix Docker - Monitor
       containers automatically using zabbix LLD feature.

Networking

     * [https://www.projectcalico.org/getting-started/docker/]Calico-Docke
       r - Calico is a pure layer 3 virtual network that allows containers
       over multiple docker-hosts to talk to each other.
     * [https://github.com/coreos/flannel/]Flannel - Flannel is a virtual
       network that gives a subnet to each host for use with container
       runtimes. By [https://github.com/coreos]@coreos
     * [https://github.com/nicolaka/netshoot]netshoot - The netshoot
       container has a powerful set of networking tools to help
       troubleshoot Docker networking issues by
       [https://github.com/nicolaka]@nicolaka
     * [https://github.com/weaveworks/weave]Weave (The Docker network) -
       Weave creates a virtual network that connects Docker containers
       deployed across multiple hosts.

Orchestration

     * [https://github.com/athena-oss/athena]athena - An automation
       platform with a plugin architecture that allows you to easily
       create and share services.
     * [https://github.com/tubesandlube/blimp]blimp - Uses Docker Machine
       to easily move a container from one Docker host to another, show
       containers running against all of your hosts, replicate a container
       across multiple hosts and more by
       [https://github.com/defermat]@defermat and
       [https://github.com/schvin]@schvin
     * [http://www.cloudslang.io/]CloudSlang - CloudSlang is a workflow
       engine to create Docker process automation
     * [https://github.com/clusterdock/clusterdock]clusterdock - Docker
       container orchestration to enable the testing of long-running
       cluster deployments
     * [https://github.com/containership/containership]ContainerShip A
       simple container management platform
     * [https://github.com/Dataman-Cloud/crane]Crane - Control plane based
       on docker built-in swarm
       [https://github.com/Dataman-Cloud]@Dataman-Cloud
     * [https://github.com/vfarcic/docker-flow-swarm-listener]Docker Flow
       Swarm Listener - Docker Flow Swarm Listener project is to listen to
       Docker Swarm events and send requests when a change occurs. By
       [https://github.com/vfarcic]@vfarcic
     * [https://github.com/DevTable/gantryd]gantryd - A framework for easy
       management of docker-based components across machines by
       [https://github.com/DevTable]@DevTable
     * [https://github.com/codeabovelab/haven-platform]Haven - Haven is a
       simplified container management platform that integrates container,
       application, cluster, image, and registry managements. By
       [https://github.com/codeabovelab]@codeabovelab
     * [https://github.com/spotify/helios]Helios - A simple platform for
       deploying and managing containers across an entire fleet of servers
       by
       @sp
       otify
     * [https://github.com/kontena/kontena]Kontena - Application
       Containers for Masses [https://www.kontena.io/]website
     * [https://github.com/kubernetes/kubernetes]Kubernetes - Open source
       orchestration system for Docker containers by Google
     * [https://github.com/ManageIQ/manageiq]ManageIQ - Discover, optimize
       and control your hybrid IT. By
       [https://github.com/ManageIQ]ManageIQ
     * [https://github.com/mantl/mantl]Mantl - Mantl is a modern platform
       for rapidly deploying globally distributed services
     * [https://mesosphere.github.io/marathon/docs/]Marathon - Marathon is
       a private PaaS built on Mesos. It automatically handles hardware or
       software failures and ensures that an app is "always on"
     * [https://mesos.apache.org/documentation/latest/docker-containerizer
       /]Mesos - Resource/Job scheduler for containers, VM's and physical
       hosts [https://mesos.apache.org/]@apache
     * [https://mesosphere.com/product/]Mesosphere DC/OS ² - Integrated
       platform for data and containers built on Apache Mesos by
       [https://mesosphere.com/]@mesosphere
     * [https://github.com/nebula-orchestrator]Nebula - A Docker
       orchestration tool designed to manage massive scale distributed
       clusters.
     * [https://github.com/hashicorp/nomad]Nomad - Easily deploy
       applications at any scale. A Distributed, Highly Available,
       Datacenter-Aware Scheduler by
       [https://github.com/hashicorp]@hashicorp
     * [https://github.com/CenturyLinkLabs/panamax-ui]Panamax - An
       open-source project that makes deploying complex containerized apps
       as easy as Drag-and-Drop by
       [https://github.com/CenturyLinkLabs]@CenturyLinkLabs.
     * [https://github.com/rancher/rancher]Rancher - An open source
       project that provides a complete platform for operating Docker in
       production by [https://github.com/rancher]@rancher.
     * [https://github.com/swarmpit/swarmpit]Swarmpit - Lightweight Docker
       Swarm orchestration. Swarmpit provides clean way to manage your
       Docker Swarm cluster with various handful features such Service
       management, smart search, shared access and private registries.

PaaS

     * [https://github.com/ooyala/atlantis]Atlantis - Atlantis is an Open
       Source PaaS for HTTP applications built on Docker and written in Go
     * [https://github.com/githubsaturn/captainduckduck]CaptainDuckDuck -
       Open source Heroku-like platform with a one-liner installer and a
       GUI for managing apps - with serveral one-click databases and apps.
     * [https://github.com/convox/rack]Convox Rack - Convox Rack is open
       source PaaS built on top of expert infrastructure automation and
       devops best practices.
     * [https://github.com/pbertera/dcw]Dcw - Docker-compose SSH wrapper:
       a very poor man PaaS, exposing the docker-compose and
       custom-container commands defined in container labels.
     * [https://github.com/dokku/dokku]Dokku - Docker powered mini-Heroku
       that helps you build and manage the lifecycle of applications
       (originally by [https://github.com/progrium]@progrium)
     * [https://github.com/remind101/empire]Empire - A PaaS built on top
       of Amazon EC2 Container Service (ECS)
     * [https://github.com/flynn/flynn]Flynn - A next generation open
       source platform as a service
     * [https://jelastic.com/]Jelastic - An advanced PaaS for developers
       that simplifies clustering and complex cloud deployments with
       powerful web UI and usage-only pricing
     * [https://github.com/nanobox-io/nanobox]Nanobox ² - An application
       development platform that creates local environments that can then
       be deployed and scaled in the cloud.
     * [https://www.openshift.org/]OpenShift - An open source PaaS built
       on [https://kubernetes.io/]Kubernetes and optimized for Dockerized
       app development and deployment by [https://www.redhat.com/]Red Hat
     * [https://github.com/tsuru/tsuru]Tsuru - Tsuru is an extensible and
       open source Platform as a Service software
     * [https://github.com/deis/workflow]Workflow - The open source PaaS
       for Kubernetes by [https://github.com/deis]Deis. Formerly Deis v1.

Reverse Proxy

     * [https://github.com/vfarcic/docker-flow-proxy]docker-flow-proxy -
       Reconfigures proxy every time a new service is deployed, or when a
       service is scaled. By [https://github.com/vfarcic]@vfarcic
     * [https://github.com/silarsis/docker-proxy]docker-proxy -
       Transparent proxy for docker containers, run in a docker container.
       By [https://github.com/silarsis]@silarsis
     * [https://github.com/fabiolb/fabio]fabio - A fast, modern, zero-conf
       load balancing HTTP(S) router for deploying microservices managed
       by consul. By [https://github.com/magiconair]@magiconair (Frank
       Schroeder)
     * [https://github.com/zchee/h2o-proxy]h2o-proxy - Automated H2O
       reverse proxy for Docker containers. An alternative to
       [https://github.com/jwilder/nginx-proxy]jwilder/nginx-proxy by
       [https://github.com/zchee]@zchee
     * [https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion]L
       et's Encrypt Nginx-proxy Companion - A lightweight companion
       container for the nginx-proxy. It allow the creation/renewal of
       Let's Encrypt certificates automatically. By
       [https://github.com/JrCs]@JrCs
     * [https://github.com/mattallty/muguet]muguet - DNS Server & Reverse
       proxy for Docker environments. By
       [https://github.com/mattallty]@mattallty
     * [https://github.com/jwilder/nginx-proxy]nginx-proxy - Automated
       nginx proxy for Docker containers using docker-gen by
       [https://github.com/jwilder]@jwilder
     * [https://github.com/tpbowden/swarm-ingress-router]Swarm Ingress
       Router - Route DNS names to Swarm services based on labels. By
       [https://github.com/tpbowden/]@tpbowden
     * [https://github.com/flavioaiello/swarm-router]Swarm Router - A
       «zero config» service name based router for docker swarm mode with
       a fresh and more secure approach. By
       [https://twitter.com/flavioaiello]@flavioaiello
     * [https://github.com/containous/traefik]TræfIk - Automated reverse
       proxy and load-balancer for Docker, Mesos, Consul, Etcd... By
       [https://github.com/emilevauge]@EmileVauge

Security

     * [https://anchore.com/cloud/]Anchor Cloud ² - Hosted version of
       Anchor Engine by [https://github.com/anchore]@Anchor
     * [https://github.com/anchore/anchore]Anchor Engine - Analyze images
       for CVE vulnerabilities and against custom security policies by
       [https://github.com/anchore]@Anchor
     * [https://www.aquasec.com/]Aqua Security ² - Securing
       container-based applications from Dev to Production on any platform
     * [https://github.com/genuinetools/bane]bane - AppArmor profile
       generator for Docker containers by
       [https://github.com/genuinetools]@genuinetools
     * [https://github.com/dev-sec/cis-docker-benchmark]CIS Docker
       Benchmark - This [https://github.com/chef/inspec]InSpec compliance
       profile implement the CIS Docker 1.12.0 Benchmark in an automated
       way to provide security best-practice tests around Docker daemon
       and containers in a production environment. By
       [https://github.com/dev-sec]@dev-sec
     * [https://github.com/coreos/clair]Clair - Clair is an open source
       project for the static analysis of vulnerabilities in appc and
       docker containers. By [https://github.com/coreos]@coreos
     * [https://github.com/eliasgranderubio/dagda]Dagda - Dagda is a tool
       to perform static analysis of known vulnerabilities, trojans,
       viruses, malware & other malicious threats in docker
       images/containers and to monitor the docker daemon and running
       docker containers for detecting anomalous activities. By
       [https://github.com/eliasgranderubio]@eliasgranderubio
     * [https://github.com/docker/docker-bench-security]docker-bench-secur
       ity - script that checks for dozens of common best-practices around
       deploying Docker containers in production. By
       [https://github.com/docker]@docker
     * [https://github.com/theupdateframework/notary]notary - a server and
       a client for running and interacting with trusted collections. By
       [https://github.com/theupdateframework]@TUF
     * [https://github.com/OpenSCAP/openscap]oscap-docker - OpenSCAP
       provides oscap-docker tool which is used to scan Docker containers
       and images. By RedHat
     * [https://github.com/draios/falco]Sysdig Falco - Sysdig Falco is an
       open source container security monitor. It can monitor application,
       container, host, and network activity and alert on unauthorized
       activity.
     * [https://sysdig.com/product/secure/]Sysdig Secure ² - Sysdig Secure
       addresses run-time security through behavioral monitoring and
       defense, and provides deep forensics based on open source Sysdig
       for incident response.
     * [https://www.twistlock.com/]Twistlock ² - Twistlock Security Suite
       detects vulnerabilities, hardens container images, and enforces
       security policies across the lifecycle of applications.

Service Discovery

     * [https://github.com/cpuguy83/docker-grand-ambassador]Docker Grand
       Ambassador - This is a fully dynamic docker link ambassador. +
       [https://docs.docker.com/engine/admin/ambassador_pattern_linking/]A
       rticle by [https://github.com/cpuguy83]@cpuguy83
     * [https://github.com/gliderlabs/docker-consul]docker-consul by
       [https://github.com/progrium]@progrium
     * [https://github.com/coreos/etcd]etcd - A highly-available key value
       store for shared configuration and service discovery by
       [https://github.com/coreos]@coreOS
     * [https://github.com/istio/istio]istio - An open platform to
       connect, manage, and secure microservices by
       @Isti
       oMesh
     * [https://github.com/factorish/proxy]proxy - lightweight nginx based
       load balancer self using service discovery provided by registrator.
       by [https://github.com/factorish]@factorish
     * [https://github.com/gliderlabs/registrator]registrator - Service
       registry bridge for Docker by
       [https://github.com/gliderlabs]@gliderlabs and
       [https://github.com/progrium]@progrium

Volume Management / Data

     * [https://github.com/blockbridge/blockbridge-docker-volume]Blockbrid
       ge - The Blockbridge plugin is a volume plugin that provides access
       to an extensible set of container-based persistent storage options.
       It supports single and multi-host Docker environments with features
       that include tenant isolation, automated provisioning, encryption,
       secure deletion, snapshots and QoS. By
       [https://github.com/blockbridge]@blockbridge
     * [https://github.com/rancher/convoy]Convoy - an open-source Docker
       volume driver that can snapshot, backup and restore Docker volumes
       anywhere. By [https://github.com/rancher]@rancher
     * [https://github.com/adlogix/docker-machine-nfs]Docker Machine NFS
       Activates NFS for an existing boot2docker box created through
       Docker Machine on OS X.
     * [https://github.com/leighmcculloch/docker-unison]Docker Unison A
       docker volume container using Unison for fast two-way folder sync.
       Created as an alternative to slow boot2docker volumes on OS X. By
       [https://github.com/leighmcculloch]@leighmcculloch
     * [https://github.com/CWSpear/local-persist]Local Persist Specify a
       mountpoint for your local volumes (created via docker volume
       create) so that files will always persist and so you can mount to
       different directories in different containers.
     * [https://github.com/jelastic-jps/minio]Minio - S3 compatible object
       storage server in Docker containers
     * [https://github.com/ContainX/docker-volume-netshare]Netshare Docker
       NFS, AWS EFS, Ceph & Samba/CIFS Volume Plugin. By
       [https://github.com/ContainX]@ContainX
     * [https://portworx.com/]portworx ² - Decentralized storage solution
       for persistent, shared and replicated volumes.
     * [https://www.quobyte.com/]quobyte ² - fully fault-tolerant
       distributed file system with a docker volume driver
     * [https://github.com/rexray/rexray]REX-Ray provides a vendor
       agnostic storage orchestration engine. The primary design goal is
       to provide persistent storage for Docker, Kubernetes, and Mesos.
       By[https://github.com/thecodeteam]@thecodeteam (DELL Technologies)

User Interface

Desktop

   Native desktop applications for managing and montoring docker hosts and
   clusters
     * [https://getcaptain.co/]Captain - Manage containers from the MacOSX
       menu bar by [https://github.com/rickwong]@RickWong
     * [https://github.com/dockeron/dockeron]Dockeron - A project built on
       Electron + Vue.js for Docker on desktop.
       [https://github.com/fluency03]@fluency03
     * [https://github.com/DockStation/dockstation]DockStation - A
       developer centric UI to configure, monitor, and manage services and
       containers [https://twitter.com/dock_station]@dock_station
     * [https://github.com/jplhomer/lifeboat]Lifeboat - An easy way to
       launch Docker projects with a graphical interface on your Mac.
       [https://github.com/jplhomer]@jplhomer

Terminal

     * [https://github.com/jenssegers/captain]captain - Easily start and
       stop docker compose projects from any directory. By
       [https://github.com/jenssegers]@jenssegers
     * [https://github.com/yadutaf/ctop]ctop (1) - A command line / text
       based Linux Containers monitoring tool that works just like you
       expect (Python) by [https://github.com/yadutaf]@yadutaf
     * [https://github.com/bcicen/ctop]ctop (2) - Top-like interface for
       container metrics (Golang) by [https://github.com/bcicen/]@bcicen
     * [https://github.com/vutran/dext-docker-registry-plugin]dext-docker-
       registry-plugin - Search the Docker Registry with the Dext smart
       launcher.
     * [https://github.com/mayflower/docker-ls]docker-ls - CLI tools for
       browsing and manipulating docker registries by
       [https://github.com/mayflower]@mayflower
     * [https://github.com/icecrime/docker-mon]Docker-mon - Console-based
       Docker monitoring by [https://github.com/icecrime]@icecrime
     * [https://github.com/Silex/docker.el]docker.el Manage docker from
       Emacs by [https://github.com/Silex]Silex
     * [https://github.com/docker/dockercraft]dockercraft - Docker +
       Minecraft = Dockercraft by [https://github.com/docker]@docker
     * [https://github.com/spotify/dockerfile-mode]dockerfile-mode An
       emacs mode for handling Dockerfiles by
       [https://github.com/spotify]spotify
     * [https://github.com/crosbymichael/dockersql]dockersql - A command
       line interface to query Docker using SQL by
       [https://github.com/crosbymichael]@crosbymichael
     * [https://github.com/lirantal/dockly]dockly - An interactive shell
       UI for managing Docker containers by
       [https://github.com/lirantal]@lirantal
     * [https://github.com/moncho/dry]dry - An interactive CLI for Docker
       containers by [https://github.com/moncho]@moncho
     * [https://github.com/howtowhale/dvm]DVM - Docker version manager by
       [https://github.com/howtowhale]@howtowhale
     * [https://github.com/marty90/multidocker]MultiDocker - Create a
       secure multi-user Docker machine, where each user is segregated
       into an indepentent container.
     * [https://github.com/jpetazzo/nsenter]ns-enter - no more ssh, enter
       name spaces of container by [https://github.com/jpetazzo]@jpetazzo
     * [https://github.com/adrianmo/powerline-docker]Powerline-Docker - A
       Powerline segment for showing the status of Docker containers by
       [https://github.com/adrianmo]@adrianmo
     * [https://github.com/genuinetools/reg]reg - Docker registry v2
       command line client by
       [https://github.com/genuinetools]@genuinetools
     * [https://github.com/JonathonReinhart/scuba]scuba - Transparently
       use Docker containers to encapsulate software build environments,
       by [https://github.com/JonathonReinhart]@JonathonReinhart
     * [https://github.com/TomasTomecek/sen]sen - Terminal user interface
       for docker engine, by
       [https://github.com/TomasTomecek]@TomasTomecek
     * [https://github.com/segersniels/supdock]supdock - § Allows for
       slightly more visual usage of Docker with an interactive prompt by
       [https://github.com/segersniels]@segersniels
     * [https://github.com/qazbnm456/tsaotun]tsaotun - Python based
       Assistance for Docker by [https://github.com/qazbnm456]@qazbnm456
     * [https://github.com/j-bennet/wharfee]wharfee - Autocompletion and
       syntax highlighting for Docker commands. by
       [https://github.com/j-bennet]@j-bennet

Web

     * [https://github.com/klausmeyer/docker-registry-browser]Docker
       Registry Browser - Web Interface for the Docker Registry HTTP API
       v2 by [https://github.com/klausmeyer]@klausmeyer
     * [https://github.com/squidnyan/docker-registry-ui]Docker Registry UI
       - A web UI for easy private/local Docker Registry integration by
       [https://github.com/squidnyan]@squidnyan
     * [https://github.com/mkuchin/docker-registry-web]docker-registry-web
       - Web UI, authentication service and event recorder for private
       docker registry v2 by [https://github.com/mkuchin]@mkuchin
     * [https://github.com/dockersamples/docker-swarm-visualizer]docker-sw
       arm-visualizer - Visualizes Docker services on a Docker Swarm (for
       running demos).
     * [https://github.com/Electrofenster/dockerding-on-rails]dockering-on
       -rails - Simple Web-Interface for Docker with a lot of features by
       [https://github.com/Electrofenster/]@Electrofenster
     * [https://github.com/Simone-Erba/DockerSurfer]DockerSurfer § - A web
       service for analyze and browse dependencies between Docker images
       in the Docker registry, by
       [https://github.com/Simone-Erba/]@Simone-Erba
     * [https://github.com/OctoLinker/OctoLinker]OctoLinker - A browser
       extension for GitHub that makes the image name in a Dockerfile
       clickable and redirect you to the related Docker Hub page.
     * [https://github.com/portainer/portainer]Portainer - A lightweight
       management UI for managing your Docker hosts or Docker Swarm
       clusters by [https://github.com/portainer]@portainer
     * [https://github.com/SUSE/Portus]Portus - Authorization service and
       frontend for Docker registry (v2) by [https://github.com/SUSE]@SUSE
     * [https://github.com/ozlerhakan/rapid]Rapid Dashboard - A simple
       query dashboard to use Docker Remote API by
       [https://github.com/ozlerhakan/]@ozlerhakan
     * [https://github.com/tobegit3hub/seagull]Seagull - Friendly Web UI
       to monitor docker daemon. by
       [https://github.com/tobegit3hub]@tobegit3hub
     * [https://github.com/cuigh/swirl]Swirl - Swirl is a web management
       tool for Docker, focused on swarm cluster By
       [https://github.com/cuigh/]@cuigh

Docker Images

Base Tools

   Tools and applications that are either installed inside containers or
   designed to be run as a
   [https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar]s
   idecar
     * [https://github.com/genuinetools/amicontained]amicontained -
       Container introspection tool. Find out what container runtime is
       being used as well as features available by
       [https://github.com/genuinetools]@genuinetools
     * [https://github.com/prologic/autodock]autodock - Daemon for Docker
       Automation by [https://github.com/prologic]@prologic
     * [https://github.com/garywiz/chaperone]Chaperone - A single PID1
       process designed for docker containers. Does user management, log
       management, startup, zombie reaping, all in one small package. by
       [https://github.com/garywiz]@garywiz
     * [https://github.com/coreos]CoreOS - Linux for Massive Server
       Deployments
     * [https://github.com/gliderlabs/docker-alpine]docker-alpine - A
       super small Docker base image (5MB) using Alpine Linux by
       [https://github.com/gliderlabs]@gliderlabs
     * [https://github.com/jwilder/docker-gen]docker-gen - Generate files
       from docker container meta-data by
       [https://github.com/jwilder]@jwilder
     * [https://github.com/jwilder/dockerize]dockerize - Utility to
       simplify running applications in docker containers by
       [https://github.com/jwilder]@jwilder
     * [https://github.com/tianon/gosu]GoSu - Run this specific
       application as this specific user and get out of the pipeline
       (entrypoint script tool) by [https://github.com/tianon]@tianon
     * [https://github.com/sindresorhus/is-docker]is-docker - Check if the
       process is running inside a Docker container by
       [https://github.com/sindresorhus/awesome]@sindresorhus
     * [https://github.com/ivanilves/lstags]lstags - sync Docker images
       across registries by [https://github.com/ivanilves]@ivanilves
     * [https://github.com/aptible/supercronic]supercronic -
       crontab-compatible job runner, designed specifically to run in
       containers by [https://github.com/aptible/]@aptible
     * [https://github.com/vorakl/TrivialRC]TrivialRC - A minimalistic
       Runtime Configuration system and process manager for containers
       [https://github.com/vorakl]@vorakl

Builder

   Applications designed to help or simplify building new images
     * [https://github.com/GoogleCloudPlatform/container-diff]container-di
       ff - An image tool for comparing and analzying container images by
       [https://github.com/GoogleCloudPlatform]@GoogleCloudPlatform
     * [https://github.com/mutable/container-factory]container-factory -
       Produces Docker images from tarballs of application source code by
       [https://github.com/mutable]@mutable
     * [https://github.com/mdlavin/copy-docker-image]copy-docker-image -
       Copy a Docker image between registries without a full Docker
       installation by [https://github.com/mdlavin]@mdlavin
     * [https://github.com/alibaba/derrick]Derrick - A tool help you to
       automate the generation of Dockerfile and dockerize application by
       scanning the code. By [https://github.com/alibaba]@alibaba.
     * [https://github.com/wercker/dlayer]dlayer - Stats collector for
       Docker layers by [https://github.com/wercker]@wercker
     * [https://github.com/mudler/docker-companion]docker-companion - A
       command line tool written in Golang to squash and unpack docker
       images by [https://github.com/mudler/]@mudler
     * [https://github.com/CtripCloud/docker-make]docker-make - Build,
       tag,and push a bunch of related docker images via a single command.
     * [https://github.com/bcicen/docker-replay]docker-replay - Generate
       docker runcommand and options from running containers. By
       [https://github.com/bcicen]bcicen
     * [https://github.com/docker-slim/docker-slim]DockerSlim shrinks fat
       Docker images creating the smallest possible images.
     * [https://github.com/swipely/dockly]Dockly - Dockly is a gem made to
       ease the pain of packaging an application in Docker by
       [https://github.com/swipely/]@swipely
     * [https://github.com/jlhawn/dockramp]dockramp - Proof of Concept: A
       Client Driven Docker Image Builder by
       [https://github.com/jlhawn]@jlhawn
     * [http://flyimg.io/]flyimg - Docker image resizing, cropping, and
       compression on the fly.
     * [https://github.com/genuinetools/img]img - Standalone, daemon-less,
       unprivileged Dockerfile and OCI compatible container image builder
       by [https://github.com/genuinetools]@genuinetools
     * [https://microbadger.com/]MicroBadger - Analyze the contents of
       images and add metadata labels
     * [https://www.packer.io/docs/builders/docker.html]packer - Hashicorp
       tool to build machine images including docker image integrated with
       configuration management tools like chef, puppet, ansible
     * [https://github.com/duedil-ltd/portainer]portainer - Apache Mesos
       framework for building Docker images by
       [https://github.com/duedil-ltd]@duedil-ltd
     * [https://github.com/lavie/runlike]runlike § - Generate docker
       runcommand and options from running containers by
       [https://github.com/lavie]@lavie
     * [https://github.com/djosephsen/skinnywhale]SkinnyWhale -
       Skinnywhale helps you make smaller (as in megabytes) Docker
       containers.
     * [https://github.com/Gueils/whales]Whales - A tool to automatically
       dockerize your applications by
       [https://github.com/IcaliaLabs]@icalialabs.

Dockerfile

     * [https://github.com/garywiz/chaperone-docker]chaperone-docker - A
       set of images using the Chaperone process manager, including a lean
       Alpine image, LAMP, LEMP, and bare-bones base kits.
     * [http://jrruethe.github.io/blog/2015/09/20/dockerfile-generator/]Do
       ckerfile Generator
     * [http://dockerfile.github.io/]Dockerfile Project : Trusted
       Automated Docker Builds. Dockerfile Project maintains a central
       repository of Dockerfile for various popular open source software
       services runnable on a Docker container.
     * [https://github.com/vektorcloud]Vektorcloud - A collection of
       minimal, Alpine-based Docker images

   Examples by:
     * [https://github.com/arun-gupta/docker-images]@arun-gupta
     * [https://github.com/awesome-startup/docker-compose]@awesome-startup
     * [https://github.com/crosbymichael/Dockerfiles]@crosbymichael
     * [https://github.com/jessfraz/Dockerfiles]@jessfraz
     * [https://github.com/komljen/dockerfile-examples]@komljen
     * [https://github.com/kstaken/dockerfile-examples]@kstaken
     * [https://github.com/ondrejmo/Dockerfiles]@ondrejmo
     * [https://github.com/pandrew/dockerfiles]@pandrew
     * [https://github.com/vimagick/dockerfiles]@vimagick

Linter

     * [https://github.com/projectatomic/dockerfile_lint]dockerfile_lint -
       A rule-based 'linter' for Dockerfiles by
       [https://github.com/redhataccess]@redhataccess
     * [https://github.com/replicatedhq/dockerfilelint]Dockerfilelint - A
       node module that analyzes a Dockerfile and looks for common traps,
       mistakes and helps enforce best practices by
       [https://github.com/replicatedhq]@replicatedhq
     * [https://github.com/jessfraz/dockfmt]dockfmt § - Dockerfile
       formatter and parser by [https://github.com/jessfraz]@jessfraz
     * [https://github.com/hadolint/hadolint]Hadolint - A Dockerfile
       linter that checks for best practices, common mistakes, and is also
       able to lint any bash written in RUN instructions; by
       [https://github.com/lukasmartinelli]@lukasmartinelli
     * [https://github.com/jeromepin/whale-linter]Whale-linter - A simple
       and small Dockerfile linter written in Python3+ without
       dependencies by [https://github.com/jeromepin]@jeromepin

Metadata

     * [https://github.com/opencontainers/image-spec/blob/master/annotatio
       ns.md]opencontainer - A convention and shared namespace for Docker
       labels defined by OCI Image Spec.

Registry

   Services to securely store your Docker images.
     * [https://aws.amazon.com/ecr/]Amazon EC2 Container Registry Amazon
       EC2 Container Registry (ECR) is a fully-managed Docker container
       registry that makes it easy for developers to store, manage, and
       deploy Docker container images.
     * [https://azure.microsoft.com/de-de/services/container-registry/]Azu
       re Container Registry Manage a Docker private registry as a
       first-class Azure resource
     * [https://github.com/RedCoolBeans/cargos-buildroot]CargoOS - A bare
       essential OS for running the Docker Engine on bare metal or Cloud.
       By [https://github.com/RedCoolBeans]@RedCoolBeans
     * [https://cycle.io/]Cycle.io Bare-metal container hosting.
     * [https://hub.docker.com/]Docker Hub provided by Docker Inc.
     * [https://github.com/docker/distribution]Docker Registry v2 - The
       Docker toolset to pack, ship, store, and deliver content
     * [https://github.com/netvarun/docket]Docket - Custom docker registry
       that allows for lightning fast deploys through bittorrent by
       [https://github.com/netvarun/]@netvarun
     * [https://github.com/puppetlabs/europa]Europa ² - Private docker
       registry with support for image pipelines and webhooks. By
       [https://github.com/puppetlabs]@puppetlabs
     * [https://cloud.google.com/container-registry/]GCE Container
       Registry Fast, private Docker image storage on Google Cloud
       Platform
     * [https://docs.gitlab.com/ce/user/project/container_registry.html]Gi
       tLab Container Registry - Repositories focused on using it images
       in GitLab CI
     * [https://jfrog.com/artifactory/]JFrog Artifactory - Artifact
       Repository Manager, can be used as private Docker Registry as well
     * [https://private-docker-registry.com/]Private Docker Registry ² -
       Dedicated Conainer Registry Service with unlimited private
       repositories, users, teams, namespaces together with enterprise
       grade authentication LDAP/AD/OAuth/SAML.
     * [https://quay.io/]Quay.io (part of CoreOS) - Secure hosting for
       private Docker repositories
     * [https://github.com/noteed/rescoyl]Rescoyl - Private Docker
       registry (free and open source) by
       [https://github.com/noteed]@noteed
     * [https://www.sonatype.com/nexus-repository-oss]Sonatype Nexus -
       Repository with Universal Support, also for Docker images
     * [https://github.com/treescale]TreeScale - Build and Distribute
       container based applications. By
       [https://github.com/tigranbs]@tigranbs
     * [http://vmware.github.io/harbor/]VMWare Harbor Project Harbor by
       VMWare is an enterprise-class registry server that stores and
       distributes Docker images. Harbor extends the open source Docker
       Distribution by adding the functionalities usually required by an
       enterprise, such as security, identity and management.

Development with Docker

API Client

     * [https://github.com/instacart/ahab]ahab - Docker event handling
       with Python by [https://github.com/instacart]@instacart
     * [https://github.com/gesellix/docker-client]Docker Client for JVM -
       A Docker remote api client library for the JVM, written in Groovy
       by [https://github.com/gesellix]@gesellix
     * [https://gitlab.com/masaeedu/docker-client]Docker Client TypeScript
       - Docker API client for JavaScript, automatically generated from
       Swagger API definition from moby repository. By
       [https://github.com/masaeedu]@masaeedu
     * [https://github.com/whisklabs/docker-it-scala]docker-it-scala -
       Docker integration testing kit with Scala by
       [https://github.com/whisklabs]@whisklabs
     * [https://github.com/fabric8io/docker-maven-plugin]docker-maven-plug
       in - A Maven plugin for running and creating Docker images by
       [https://github.com/fabric8io]@fabric8io
     * [https://github.com/Microsoft/Docker-PowerShell]Docker-PowerShell -
       PowerShell Module for Docker
     * [https://github.com/Microsoft/Docker.DotNet]Docker.DotNet - C#/.NET
       HTTP client for the Docker remote API by
       @ahmetalpbalkan
     * [https://github.com/spotify/dockerfile-maven]dockerfile-maven - A
       Maven plugin for building and pushing Docker images by
       [https://github.com/spotify]@spotify
     * [https://github.com/apocas/dockerode]dockerode - Docker Remote API
       node.js module by [https://github.com/apocas]@apocas
     * [https://github.com/eon01/DoMonit]DoMonit - A simple Docker
       Monitoring wrapper For Docker API
     * [https://github.com/fsouza/go-dockerclient/]go-dockerclient - Go
       HTTP client for the Docker remote API by
       [https://github.com/fsouza/]@fsouza
     * [https://github.com/gesellix/gradle-docker-plugin]Gradle Docker
       plugin - A Docker remote api plugin for Gradle by
       [https://github.com/gesellix]@gesellix
     * [https://github.com/docker/libcompose]libcompose - Go library for
       Docker Compose.
     * [https://github.com/Tapad/sbt-docker-compose]sbt-docker-compose -
       Integrates Docker Compose functionality into sbt by
       [https://github.com/kurtkopchik/]@kurtkopchik
     * [https://github.com/marcuslonnberg/sbt-docker]sbt-docker - Create
       Docker images directly from sbt by
       [https://github.com/marcuslonnberg]@marcuslonnberg

CI/CD

     * [https://buddy.works/]Buddy - The best of Git, build & deployment
       tools combined into one powerful tool that supercharged our
       development.
     * [https://github.com/harbur/captain]Captain - Convert your Git
       workflow to Docker containers ready for Continuous Delivery by
       [https://github.com/harbur]@harbur.
     * [https://github.com/caicloud/cyclone]Cyclone - A cloud native CI/CD
       platform built for container workflow by
       [https://github.com/caicloud]@caicloud.
     * [https://github.com/jenkinsci/docker-plugin/]Docker plugin for
       Jenkins - The aim of the docker plugin is to be able to use a
       docker host to dynamically provision a slave, run a single build,
       then tear-down that slave.
     * [https://github.com/drone/drone]Drone - Continuous integration
       server built on Docker and configured using YAML files.
     * [https://about.gitlab.com/gitlab-ci/]GitLab CI - GitLab has
       integrated CI to test, build and deploy your code with the use of
       GitLab runners.
     * [https://github.com/gocd/gocd-docker]GOCD-DockerGo Server and Agent
       in docker containers to provision.
     * [https://github.com/francescou/docker-continuous-deployment]Microse
       rvices Continuous Deployment - Continuous deployment of a
       microservices application.
     * [https://github.com/stelligent/mu]mu - Tool to configure CI/CD of
       your container applications via AWS CodePipeline, CodeBuild and ECS
       [https://github.com/stelligent]@Stelligent
     * [http://screwdriver.cd/]Screwdriver - Yahoo's OpenSource
       buildplatform designed for Continous Delivery.
     * [https://github.com/Stratoscale/skipper]Skipper - Easily dockerize
       your Git repository by [https://github.com/Stratoscale]@Stratoscale
     * [https://github.com/ghostsquad/swarmci]SwarmCI - Create a
       distributed, isolated task pipeline in your Docker Swarm.
     * [https://github.com/v2tec/watchtower]Watchtower - Automatically
       update running Docker containers by
       [https://github.com/CenturyLinkLabs]@CenturyLinkLabs

Development Environment

     * [https://github.com/binci/binci]Binci - Containerize your
       development workflow. (formerly DevLab by
       [https://github.com/TechnologyAdvice]@TechnologyAdvice)
     * [https://github.com/boot2docker/boot2docker]Boot2Docker - Docker
       for OSX and Windows
     * [https://github.com/lstephen/construi]construi - Run your builds
       inside a Docker defined environment by
       [https://github.com/lstephen]@lstephen
     * [https://github.com/fgrehm/devstep]Devstep - Development
       environments powered by Docker and buildpacks by
       [https://github.com/fgrehm]@fgrehm
     * [https://github.com/codekitchen/dinghy]Dinghy - An alternative way
       to use Docker on Mac OS X using Docker Machine with virtualbox,
       vmware, xhyve or parallels
     * [https://github.com/nlf/dlite]DLite - Simplest way to use Docker on
       OSX, no VM needed. By [https://github.com/nlf]@nlf
     * [https://github.com/nandoquintana/docker-missing-tools]Docker
       Missing Tools - A set of bash commands to shortcut typical docker
       dev-ops. An alternative to creating typical helper scripts like
       "build.sh" and "deploy.sh" inside code repositories. By
       [https://github.com/nandoquintana]@NandoQuintana.
     * [https://github.com/brikis98/docker-osx-dev]Docker osx dev - A
       productive development environment with Docker on OS X by
       [https://github.com/brikis98]@brikis98
     * [https://github.com/ph3nol/docker-arch]Docker-Arch - Generate
       Web/CLI projects Dockerized development environments, from 1 simple
       YAML file. By [https://github.com/ph3nol]@Ph3nol
     * [http://docker-sync.io/]Docker-sync - Drastically improves
       performance
       ([https://github.com/EugenMayer/docker-sync/wiki/4.-Performance]50-
       70x) when using Docker for development on Mac OS X/Windows and
       Linux while sharing code to the container. By
       [https://github.com/EugenMayer]@EugenMayer
     * [https://github.com/shyiko/docker-vm]docker-vm - Simple and
       transparent alternative to boot2docker (backed by Vagrant) by
       [https://github.com/shyiko]@shyiko
     * [http://dusty.gc.com/]Dusty - Managed Docker development
       environments on OS X
     * [http://www.eclipse.org/che/]Eclipse Che - Developer workspace
       server with Docker runtimes, cloud IDE, next-generation Eclipse IDE
     * [https://github.com/PhilippHeuer/EnvCLI]EnvCLI - Replace your local
       installation of Node, Go, ... with project-specific docker
       containers. By [https://github.com/PhilippHeuer]@PhilippHeuer
     * [https://github.com/bsideup/forward2docker]forward2docker - Utility
       to auto forward a port from localhost into ports on Docker
       containers running in a boot2docker VM by
       [https://github.com/bsideup]@bsideup
     * [https://github.com/lando/lando]Lando - Lando is for developers who
       want to quickly specify and painlessly spin up the services and
       tools needed to develop their projects. By
       [https://thinktandem.io/]Tandem
     * [https://github.com/tailhook/vagga]Vagga - Vagga is a
       containerisation tool without daemons. It is a fully-userspace
       container engine inspired by Vagrant and Docker, specialized for
       development environments by [https://github.com/tailhook/]@tailhook

Garbage Collection

     * [https://github.com/tjamet/caduc]caduc - A docker garbage collector
       cleaning stuff you did not use recently
     * [https://github.com/zzrotdesign/docker-clean]Docker Clean - A
       script that cleans Docker containers, images and volumes by
       [https://github.com/zzrotdesign]@zzrotdesign
     * [https://github.com/meltwater/docker-cleanup]Docker-cleanup -
       Automatic Docker image, container and volume cleanup by
       [https://github.com/meltwater]@meltwater
     * [https://github.com/konstruktoid/docker-garby]docker-garby - Docker
       garbage collection script by
       [https://github.com/konstruktoid]@konstruktoid.
     * [https://github.com/spotify/docker-gc]docker-gc - A cron job that
       will delete old stopped containers and unused images by
       [https://github.com/spotify]@spotify
     * [https://github.com/rancher/sherdock]sherdock - Automatic GC of
       images based on regexp by [https://github.com/rancher]@rancher

Serverless

     * [https://github.com/appcelerator/amp]AMP - The open source unified
       CaaS/FaaS platform for Docker, batteries included. By
       [https://github.com/appcelerator/]@Appcelerator
     * [https://github.com/apache/incubator-openwhisk]Apache OpenWhisk - a
       serverless, open source cloud platform that executes functions in
       response to events at any scale. By
       [https://github.com/apache]@apache
     * [https://github.com/lambci/docker-lambda]Docker-Lambda - Docker
       images and test runners that replicate the live AWS Lambda
       environment. By [https://github.com/lambci]@lamb-ci
     * [https://github.com/bfirsh/funker-example-voting-app]Funker -
       Functions as Docker containers example voting app. By
       [https://github.com/bfirsh]@bfirsh
     * [https://github.com/iron-io/functions]IronFunctions - The
       serverless microservices platform FaaS (Funcitons as a Service)
       which uses Docker containers to run Any language or AWS Lambda
       functions
     * [https://github.com/openfaas/faas]OpenFaaS - A complete serverless
       functions framework for Docker and Kubernetes. By
       [https://github.com/openfaas]OpenFaaS
     * [https://github.com/grycap/scar]SCAR - Serverless Container-aware
       Architectures (SCAR) is a serverless framework that allows easy
       deployment and execution of containers (e.g. Docker) in Serverless
       environments (e.g. Lambda) by [https://github.com/grycap]@grycap

Testing

     * [https://github.com/GoogleCloudPlatform/container-structure-test]Co
       ntainer Structure Test - A framework to validate the structure of
       an image by checking the outputs of commands or the contents of the
       filesystem. By
       [https://github.com/GoogleCloudPlatform]@GoogleCloudPlatform
     * [https://github.com/aelsabbahy/goss/tree/master/extras/dgoss]dgoss
       - A fast YAML based tool for validating docker containers.
     * [https://github.com/zuazo/dockerspec]DockerSpec - A small Ruby Gem
       to run RSpec and Serverspec, Infrataster and Capybara tests against
       Dockerfiles or Docker images easily. By
       [https://github.com/zuazo]@zuazo
     * [https://github.com/dockunit/platform]Dockunit - Docker based
       integration tests. A simple Node based utility for running Docker
       based unit tests. By [https://github.com/dockunit]@dockunit
     * [https://github.com/chef/inspec]InSpec - InSpec is an open-source
       testing framework for infrastructure with a human- and
       machine-readable language for specifying compliance, security and
       policy requirements. By [https://github.com/chef]@chef
     * [https://github.com/alexei-led/pumba]Pumba - Chaos testing tool for
       Docker. Can be deployed on kubernetes and CoreOS cluster. By
       [https://github.com/alexei-led]@alexei-led

Wrappers

     * [http://docs.ansible.com/ansible/latest/modules/docker_container_mo
       dule.html]Ansible - Manage the life cycle of Docker containers. By
       RedHat
     * [https://github.com/azukiapp/azk]Azk - Orchestrate development
       enviornments on your local machine by
       [https://github.com/azukiapp]@azukiapp
     * [https://github.com/cortexmedia/Beluga]Beluga - CLI to deploy
       docker containers on a single server or low amount of servers. By
       [https://github.com/cortexmedia]@cortextmedia
     * [https://github.com/docker-exec/dexec]dexec - Command line
       interface written in Go for running code with Docker Exec images.
     * [https://github.com/benzaita/docker-do]docker-do - hassle-free
       docker run, like env but for docker by
       [https://github.com/benzaita]@benzaita
     * [https://github.com/CenturyLinkLabs/dray]Dray - An engine for
       managing the execution of container-based workflows by
       [https://github.com/CenturyLinkLabs]@CenturyLinkLabs
     * [https://github.com/mattes/fugu]FuGu - Docker run wrapper without
       orchestration by [https://github.com/mattes]@mattes
     * [https://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.
       dockerng.html#module-salt.modules.dockerng]SaltStack Docker module
       - SaltStack Docker module
     * [http://ianmiell.github.io/shutit/]Shutit - Tool for building and
       maintaining complex Docker deployments by
       [https://github.com/ianmiell]@ianmiell
     * [http://subuser.org/]subuser - Makes it easy to securely and
       portably run graphical desktop applications in Docker
     * [https://ramitsurana.github.io/turbo/]Turbo - Simple and Powerful
       utility for docker. By [https://github.com/ramitsurana]@ramitsurana
     * [https://github.com/indigo-dc/udocker]udocker - A tool to execute
       simple docker containers in batch or interactive systems without
       root privileges by [https://github.com/indigo-dc]@inidigo-dc
     * [https://www.vagrantup.com/docs/docker/basics.html]Vagrant - Docker
       provider - Good starting point is
       [https://github.com/bubenkoff/vagrant-docker-example]vagrant-docker
       -example by [https://github.com/bubenkoff]@bubenkoff

Services based on Docker (²)

CI Services

     * [https://circleci.com/]CircleCI - Push or pull Docker images from
       your build environment, or build and run containers right on
       CircleCI.
     * [https://codefresh.io/]CodeFresh - Everything you need to build,
       test, and share your Docker applications. Provides automated end to
       end testing.
     * [https://codeship.com/features/pro]CodeShip - Work with your
       established Docker workflows while automating your testing and
       deployment tasks with our hosted platform dedicated to speed and
       security.
     * [https://concourse-ci.org/]ConcourseCI - A CI SaaS platform for
       developers and DevOps teams pipeline oriented.
     * [https://console.bluemix.net/devops/getting-started?auth=false]IBM
       Bluemix Continous Delivery - Continuous delivery using a pipeline
       deployment onto IBM containers on Bluemix.
     * [https://semaphoreci.com/product/docker]Semaphore CI -- A
       high-performance cloud solution that makes it easy to build, test
       and ship your containers to production.
     * [https://app.shippable.com/]Shippable - A SaaS platform for
       developers and DevOps teams that significantly reduces the time
       taken for code to be built, tested and deployed to production.
     * [https://travis-ci.org/]TravisCI - A Free github projects
       continuous integration Saas platform for developers and Devops.
     * [http://www.wercker.com/]Wercker - A Docker-Native continous
       integration & deployment Automation platform for Kubernetes &
       Microservice Deployments.

CaaS

     * [https://aws.amazon.com/ecs/]Amazon ECS - A management service on
       EC2 that supports Docker containers.
     * [https://arukas.io/]Arukas - Heroku-inspired CaaS
     * [https://azure.microsoft.com/en-us/services/container-service/]Azur
       e ACS - A management service on Azure Virtual Machines that
       supports Docker containers.
     * [https://www.cloud66.com/]Cloud 66 - Full-stack hosted container
       management as a service
     * [https://codenvy.com/]Codenvy - One-click Docker environments and
       cloud workspace for development teams
     * [https://containership.io/]ContainerShip Cloud - Multi-Cloud
       Container Hosting Automation Platform.
     * [https://cloud.docker.com/]Docker Cloud - Former Tutum
     * [https://dockhero.io/]Dockhero - Dockhero is a Heroku add-on which
       turns a Docker image into a microservice attached to the Heroku
       app. Currently in beta.
     * [https://giantswarm.io/]Giant Swarm - Simple microservice
       infrastructure. Deploy your containers in seconds.
     * [https://cloud.google.com/kubernetes-engine/docs/]Google Container
       Engine - Docker containers on Google Cloud Computing powered by
       [https://kubernetes.io/]Kubernetes.
     * [https://hyper.sh/]Hyper_ - Secure container hosting service with
       "nano-containers" and per-second billing.
     * [https://console.bluemix.net/docs/containers/container_index.html]I
       BM Bluemix Container Service - Run Docker containers in a hosted
       cloud environment on IBM Bluemix.
     * [https://jelastic.cloud/]Jelastic Cloud - "Easy-to-use" container
       hosting platfrom with automatic vertical and horizontal scaling.
       Available over 50+ hosting providers worldwide.
     * [https://www.openshift.com/dedicated/index.html]OpenShift Dedicated
       - A hosted [https://www.openshift.org/]OpenShift cluster for
       running your Docker containers managed by Red Hat.
     * [https://sloppy.io/]Sloppy.io - all-in-one solution for container
       deployment and hosting - made and hosted in Germany
     * [https://www.joyent.com/]Triton - Elastic container-native
       infrastructure by Joyent.

Monitoring Services

     * [https://www.appdynamics.com/community/exchange/extension/docker-mo
       nitoring-extension/]AppDynamics - AppDynamics gives enterprises
       real-time insights into application performance, user performance,
       and business performance so they can move faster in an increasingly
       sophisticated, software-driven world.
     * [http://axibase.com/products/axibase-time-series-database/writing-d
       ata/docker-cadvisor/]Axibase Time-Series Database - Long-term
       retention of container statistics and built-in dashboards for
       Docker. Collected with native Google cAdvisor storage driver.
     * [https://www.ca.com/us/products/docker-monitoring.html]CA
       Technologies Docker Monitoring - Agile Operations solutions from CA
       deliver the modern Docker monitoring businesses need to accelerate
       and optimize the performance of microservices and the dynamic
       Docker environments running them. Monitor both the Docker
       environment and apps that run inside them.
     * [https://www.splunk.com/blog/2015/08/24/collecting-docker-logs-and-
       stats-with-splunk.html]Collecting docker logs and stats with Splunk
     * [https://www.coscale.com/docker-monitoring]CoScale - Full stack
       monitoring for containerized applications and microservices.
       Powered by anomaly detection to find performance problems faster.
     * [https://www.datadoghq.com/]Datadog - Datadog is a full-stack
       monitoring service for large-scale cloud environments that
       aggregates metrics/events from servers, databases, and
       applications. It includes support for Docker, Kubernetes, and
       Mesos.
     * [https://meros.io/]Meros - Analyzes containers resources, captures
       logs, remote web SSH terminal and powerful DevOps alerts.
     * [https://prometheus.io/]Prometheus - Open-source service monitoring
       system and time series database
     * [https://www.site24x7.com/docker-monitoring.html]Site24x7 - Docker
       Monitoring for DevOps and IT is a SaaS Pay per Host model
     * [https://github.com/sematext/sematext-agent-docker]SPM for Docker -
       Monitoring of host and container metrics, Docker events and logs.
       Automatic log parser. Anomaly Detection and alerting for metrics
       and logs. [https://twitter.com/sematext]@sematext
     * [https://sysdig.com/product/monitor/]Sysdig Monitor - Sysdig
       Monitor can be used as either software or a SaaS service to
       monitor, alert, and troubleshoot containers using system calls. It
       has container-specific features for Docker and Kubernetes.

Useful Resources

     * [http://www.nkode.io/2014/08/24/valuable-docker-links.html]Valuable
       Docker Links High quality articles about docker! MUST SEE
     * [https://github.com/cncf/landscape]Cloud Native Landscape
     * [https://blog.docker.com/docker-weekly-archives/]Docker Weekly Huge
       resource
     * [https://hackr.io/tutorials/learn-docker]Programming Community
       Curated Resources for learning Docker

   Blogs by
     * [https://blog.codeship.com/]@codeship
     * [http://crosbymichael.com/]@crosbymichael
     * [https://gliderlabs.com/devlog/]@gliderlabs
     * [https://blog.jessfraz.com/]@jessfraz
     * [http://jpetazzo.github.io/]@jpetazzo
     * [http://jasonwilder.com/]@jwilder
     * [https://nickjanetakis.com/blog/tag/docker-tips-tricks-and-tutorial
       s]@nickjanetakis
     * [http://progrium.com/blog/]@progrium
     * [http://sebgoa.blogspot.be/]@sebgoa
     * [http://container-solutions.com/blog/]Container solutions
     * [https://container42.com/]Container42

Awesome Lists

     * [https://github.com/ciandcd/awesome-ciandcd]Awesome CI/CD - Not
       specific to docker but relevant.
     * [https://github.com/ramitsurana/awesome-kubernetes]Awesome
       Kubernetes by [https://github.com/ramitsurana]@ramitsurana
     * [https://github.com/Friz-zy/awesome-linux-containers]Awesome Linux
       Container more general about container than this repo, by
       [https://github.com/Friz-zy]@Friz-zy.
     * [https://github.com/Kickball/awesome-selfhosted]Awesome Selfhosted
       list of Free Software network services and web applications which
       can be hosted locally by running in a classical way (setup local
       web server and run applications from there) or in a Docker
       container. By [https://github.com/Kickball]@Kickball
     * [https://github.com/n1trux/awesome-sysadmin]Awesome Sysadmin by
       [https://github.com/n1trux]@n1trux
     * [https://github.com/cjbarber/ToolsOfTheTrade]ToolsOfTheTrade a list
       of SaaS and On premise applications by
       [https://github.com/cjbarber]@cjbarber

Good Tips

     * [http://brunorocha.org/python/dealing-with-linked-containers-depend
       ency-in-docker-compose.html]Dealing with linked containers
       dependency in docker-compose by
       [https://github.com/rochacbruno]@rochacbruno
     * [http://docker-saigon.github.io/post/Docker-Caveats/]Docker Caveats
       What You Should Know About Running Docker In Production (written 11
       APRIL 2016) MUST SEE
     * [https://blog.jessfraz.com/post/docker-containers-on-the-desktop/]D
       ocker Containers on the Desktop - The funniest way to learn about
       docker by [https://github.com/jessfraz]@jessfraz who also gave a
       [https://www.youtube.com/watch?v=1qlLUf7KtAw]presentation about it
       @ DockerCon 2015
     * [https://www.rightscale.com/blog/cloud-management-best-practices/do
       cker-vs-vms-combining-both-cloud-portability-nirvana]Docker vs.
       VMs? Combining Both for Cloud Portability Nirvana
     * [https://medium.com/@kinghuang/docker-compose-anchors-aliases-exten
       sions-a1e4105d70bd]Don't Repeat Yourself with Anchors, Aliases and
       Extensions in Docker Compose Files by
       [https://github.com/kinghuang]@King Chung Huang
     * [http://fabiorehm.com/blog/2014/09/11/running-gui-apps-with-docker/
       ]GUI Apps with Docker by [https://github.com/fgrehm]@fgrehm

Raspberry Pi & ARM

     * [http://blog.hypriot.com/]Docker Pirates ARMed with explosive stuff
       Huge resource on clustering, swarm, docker, pre-installed image for
       SD card on Raspberry Pi
     * [https://github.com/umiddelb/armhf/wiki/Get-Docker-up-and-running-o
       n-the-RaspberryPi-%28ARMv6%29-in-three-steps]Get Docker up and
       running on the RaspberryPi in three steps
     * [https://resin.io/]git push docker containers to linux devices
       Modern DevOps for IoT, leveraging git and Docker.
     * [https://github.com/umiddelb/armhf/wiki/Installing,-running,-using-
       docker-on-armhf-(ARMv7)-devices]Installing, running, using Docker
       on armhf (ARMv7) devices

Security

     * [https://opensource.com/business/14/9/security-for-docker]Bringing
       new security features to Docker
     * [https://github.com/tomwillfixit/alpine-cvecheck]CVE Scanning
       Alpine images with Multi-stage builds in Docker 17.05 by
       [https://twitter.com/tomwillfixit]@tomwillfixit
     * [http://www.projectatomic.io/docs/docker-and-selinux/]Docker and
       SELinux
     * [https://github.com/GDSSecurity/Docker-Secure-Deployment-Guidelines
       ]Docker Secure Deployment Guidelines
     * [https://binarymist.io/publication/docker-security/]Docker
       Securitiy - Quick Reference
     * [https://github.com/konstruktoid/Docker/blob/master/Security/CheatS
       heet.adoc]Docker Security Cheat Sheet
     * [https://fr.slideshare.net/MichaelBoelen/docker-security-are-your-c
       ontainers-tightly-secured-to-the-ship]Docker Security: Are Your
       Containers Tightly Secured to the Ship? SlideShare
     * [https://github.com/docker-library/official-images/issues/1448]How
       CVE's are handled on Offical Docker Images
     * [https://www.blockbridge.com/improving-docker-security-with-authent
       icated-volumes/]Improving Docker Security with Authenticated
       Volumes
     * [https://cisofy.com/lynis/]Lynis is an open source security
       auditing tool including Docker auditing
     * [https://linux-audit.com/tag/docker/]Security Best Practices for
       Building Docker Images
     * [http://www.se-radio.net/2017/05/se-radio-episode-290-diogo-monica-
       on-docker-security/]Software Engineering Radio interview of Docker
       Security Team Lead (Diogo Mónica)
     * [https://opensource.com/business/15/3/docker-security-tuning]Tuning
       Docker with the newest security enhancements
     * [https://blog.docker.com/2015/05/understanding-docker-security-and-
       best-practices/]Understanding Docker security and best practices
       (written 5 MAY 2015)

Videos

     * [https://www.youtube.com/watch?v=1jwo8-1HYYg]Contributing to Docker
       by Andrew "Tianon" Page (InfoSiftr) (34:31)
     * [https://www.youtube.com/watch?v=GpHMTR7P2Ms]Deploying and scaling
       applications with Docker, Swarm, and a tiny bit of Python magic
       (3:11:06) by [https://github.com/jpetazzo]@jpetazzo
     * [https://www.youtube.com/watch?v=zWGFqMuEHdw]Docker and SELinux by
       Daniel Walsh from Red Hat (40:23)
     * [https://www.youtube.com/watch?v=FdkNAjjO5yQ]Docker for Developers
       (54:26) by [https://github.com/jpetazzo]@jpetazzo <== Good
       introduction, context, demo
     * [https://www.youtube.com/watch?v=Glk5d5WP6MI]Docker in Production
       by [https://github.com/jpetazzo]@jpetazzo (36:05)
     * [https://www.youtube.com/watch?v=CAewZCBT4PI]Docker: How to Use
       Your Own Private Registry (15:01)
     * [https://vimeo.com/110835013]Extending Docker with Plugins (15:21)
     * [https://www.youtube.com/watch?v=7CZFpHUPqXw]From Local Docker
       Development to Production Deployments by
       [https://github.com/jpetazzo]@jpetazzo @ AWS re:Invent 2015
     * [https://www.youtube.com/watch?v=GaHzdqFithc]Immutable
       Infrastructure with Docker and EC2 by Michael Bryzek (Gilt) (42:04)
     * [https://www.youtube.com/watch?v=ZVaRK10HBjo]Introduction to Docker
       and containers (3:09:00) by [https://github.com/jpetazzo]@jpetazzo
     * [https://vimeo.com/123341629]Logging on Docker: What You Need to
       Know (51:27)
     * [https://www.youtube.com/watch?v=6f2E6PKYb0w]Performance Analysis
       of Docker - Jeremy Eder (1:36:58)
     * [https://www.udacity.com/course/scalable-microservices-with-kuberne
       tes--ud615]Scalable Microservices with Kubernetes Free Udacity
       course
     * [https://www.youtube.com/watch?v=IiITP3yIRd8]State of containers: a
       debate with CoreOS, VMware and Google (27:38)
     * [https://sysadmincasts.com/episodes/31-introduction-to-docker]SysAd
       minCasts: Introduction to Docker (15:49)

Communities and Meetups

Brazilian

     * [http://docker-br.herokuapp.com/]Docker BR on Slack - Auto invite
       url
     * [https://telegram.me/dockerbr]Docker BR on Telegram

Chinese

     * [http://dockone.io/]DockerOne Docker Community (in Chinese) by
       [http://dockone.io/people/%E6%9D%8E%E9%A2%96%E6%9D%B0]@LiYingJie

English

     * [https://www.docker.com/docker-community]Docker Community
     * [https://events.docker.com/]Docker Events
     * [https://www.meetup.com/Docker-Online-Meetup/]Docker On Line Meetup
     * [https://www.reddit.com/r/docker/]Docker Reddit Community

Russian

     * [https://t.me/docker_ru]Docker Russian-speaking Community

     * © 2018 GitHub, Inc.
     * [https://github.com/site/terms]Terms
     * [https://github.com/site/privacy]Privacy
     * [https://help.github.com/articles/github-security/]Security
     * [https://status.github.com/]Status
     * [https://help.github.com/]Help

   [https://github.com/]
     * [https://github.com/contact]Contact GitHub
     * [https://developer.github.com/]API
     * [https://training.github.com/]Training
     * [https://shop.github.com/]Shop
     * [https://blog.github.com/]Blog
     * [https://github.com/about]About

   (BUTTON) You can't perform that action at this time.

   You signed in with another tab or window.
   Re
   load to refresh your session. You signed out in another tab or window.
   Re
   load to refresh your session.

   (BUTTON)

   Press h to open a hovercard with more details.
