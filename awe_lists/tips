   #Recent Commits to
   tips:master

   Skip to content
   [https://github.com/]
     * Features
     * Explore
     * Pricing

   This repository ____________________
   Sign up

     * Watch
       Star
       Fork
       1,023

tips

   Issues 9
   Projects 0
   Insights
   (BUTTON) Dismiss

Join GitHub today

   GitHub is home to over 20 million developers working together to host
   and review code, manage projects, and build software together.

   Sign up
   Most commonly used git tips and tricks.
   [http://git.io/git-tips]http://git.io/git-tips
   tips-and-tricks
     * 3 branches
     * 63 contributors
     * MIT

    1. JavaScript
       100.0%

   JavaScript
   Clone or download

Clone with HTTPS [https://help.github.com/articles/which-remote-url-should-i-use]

   Use Git or checkout with SVN using the web URL.
   https://github.com/g
   Download ZIP

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching Xcode...

   If nothing happens, [https://developer.apple.com/xcode/]download Xcode
   and try again.

   (BUTTON) Go back

Launching Visual Studio...

   If nothing happens, [https://visualstudio.github.com/]download the
   GitHub extension for Visual Studio and try again.

   (BUTTON) Go back
   Find file
   (BUTTON) Branch: master
   Switch branches/tags
   ____________________
     * Branches
     * Tags

   master
   revert-7-master
   Nothing to show
   Nothing to show
   (BUTTON) New pull request
   Fetching latest commit...
   Cannot retrieve the latest commit at this time.
   Permalink
   Failed to load latest commit information.
   .vscode
   Checkout a commit prior to a day ago. Apr 6, 2017
   .doxie.ren
   der.js
   Support alternatives in tips. Jul 17, 2015
   .doxie
   .render.toc.js
   Remove absolute links Jun 2, 2016
   .gitignore
   [file://localhost/git-tips/tips/commit/3d4092c3bd7c7cd3fa9ee5c0d695861b
   5201eb57]add .idea to .gitignore, for intellij-idea/webstorm users Mar
   28, 2017
   LICENSE
   [file://localhost/git-tips/tips/commit/ca58c81f634296e74ee61c17b055aed6
   462e2b31]LICENSE Aug 26, 2015
   README.md
   Add change a branch base tips Mar 21, 2018
   contributin
   g.md
   Emphasize to install dependencies Jun 8, 2016
   package.json
   [file://localhost/git-tips/tips/commit/e5f64df204503f274a31f20b553d5d88
   e4d5c1d7]use doxie.append Jul 22, 2015
   tips.json
   Add change a branch base tips Mar 21, 2018

README.md

git-tips

     Collection of git-tips, want to add your tips? Checkout
     contribu
     ting.md

   [http://git.io/git-tips]English |
   [https://github.com/521xueweihan/git-tips]­ |
   [https://github.com/Imangazaliev/git-tips]Russkij |
   [https://github.com/mingrammer/git-tips]­´ |
   [https://github.com/hprobotic/git-tips]Tie>'ng Vie>-.t

Tools:

     * [https://www.npmjs.com/package/git-tip]git-tip - A handy CLI to
       make optimum use of these tips.
       ([https://github.com/djoudi5/docker-git-tip]Here in Docker
       container)

   P.S: All these commands are tested on git version 2.7.4 (Apple Git-66).
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#everyday
       -git-in-twenty-commands-or-so]Everyday Git in twenty commands or so
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#show-hel
       pful-guides-that-come-with-git]Show helpful guides that come with
       Git
     * Search change by content
     * Remove sensitive data from
       history, after a push
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#sync-wit
       h-remote-overwrite-local-changes]Sync with remote, overwrite local
       changes
     * List of all files till a commit
     * Git reset first commit
     * List all the conflicted files
     * List of all files changed in a commit
     * Unstaged changes since last commit
     * Changes staged for commit
     * Show both staged and unstaged changes
     * List all branches
       that are already merged into master
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#quickly-
       switch-to-the-previous-branch]Quickly switch to the previous branch
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#remove-b
       ranches-that-have-already-been-merged-with-master]Remove branches
       that have already been merged with master
     * List
       all branches and their upstreams, as well as last commit on branch
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#track-up
       stream-branch]Track upstream branch
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#delete-l
       ocal-branch]Delete local branch
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#delete-r
       emote-branch]Delete remote branch
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#delete-l
       ocal-tag]Delete local tag
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#delete-r
       emote-tag]Delete remote tag
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#undo-loc
       al-changes-with-the-last-content-in-head]Undo local changes with
       the last content in head
     * Revert: Undo a commit by
       creating a new commit
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#reset-di
       scard-commits-advised-for-private-branch]Reset: Discard commits,
       advised for private branch
     * Reword the previous commit message
     * See commit history for just
       the current branch
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#amend-au
       thor]Amend author.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#reset-au
       thor-after-author-has-been-changed-in-the-global-config]Reset
       author, after author has been changed in the global config.
     * Changing a remote's URL
     * Get list of all remote references
     * Get list of all local and remote
       branches
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#get-only
       -remote-branches]Get only remote branches
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#stage-pa
       rts-of-a-changed-file-instead-of-the-entire-file]Stage parts of a
       changed file, instead of the entire file
     * Get git bash completion
     * What changed since two weeks?
     * See all commits made since
       forking from master
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#pick-com
       mits-across-branches-using-cherry-pick]Pick commits across branches
       using cherry-pick
     * Find out branches containing
       commit-hash
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#git-alia
       ses]Git Aliases
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#saving-c
       urrent-state-of-tracked-files-without-commiting]Saving current
       state of tracked files without commiting
     * Saving current
       state of unstaged changes to tracked files
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#saving-c
       urrent-state-including-untracked-files]Saving current state
       including untracked files
     * Saving current state with message
     * Saving
       current state of all files (ignored, untracked, and tracked)
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#show-lis
       t-of-all-saved-stashes]Show list of all saved stashes
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#apply-an
       y-stash-without-deleting-from-the-stashed-list]Apply any stash
       without deleting from the stashed list
     * Apply last stashed
       state and delete it from stashed list
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#delete-a
       ll-stored-stashes]Delete all stored stashes
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#grab-a-s
       ingle-file-from-a-stash]Grab a single file from a stash
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#show-all
       -tracked-files]Show all tracked files
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#show-all
       -untracked-files]Show all untracked files
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#show-all
       -ignored-files]Show all ignored files
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#create-n
       ew-working-tree-from-a-repository-git-25]Create new working tree
       from a repository (git 2.5)
     * Create new working tree from HEAD
       state
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#untrack-
       files-without-deleting]Untrack files without deleting
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#before-d
       eleting-untracked-filesdirectory-do-a-dry-run-to-get-the-list-of-th
       ese-filesdirectories]Before deleting untracked files/directory, do
       a dry run to get the list of these files/directories
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#forceful
       ly-remove-untracked-files]Forcefully remove untracked files
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#forceful
       ly-remove-untracked-directory]Forcefully remove untracked directory
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#update-a
       ll-the-submodules]Update all the submodules
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#show-all
       -commits-in-the-current-branch-yet-to-be-merged-to-master]Show all
       commits in the current branch yet to be merged to master
     * Rename a branch
     * Rebases 'feature' to
       'master' and merges it in to master
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#archive-
       the-master-branch]Archive the master branch
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#modify-p
       revious-commit-without-modifying-the-commit-message]Modify previous
       commit without modifying the commit message
     * P
       runes references to remote branches that have been deleted in the
       remote.
     * Retrieve the commit hash
       of the initial revision.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#visualiz
       e-the-version-tree]Visualize the version tree.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#deployin
       g-git-tracked-subfolder-to-gh-pages]Deploying git tracked subfolder
       to gh-pages
     * Adding a project to repo using
       subtree
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#get-late
       st-changes-in-your-repo-for-a-linked-project-using-subtree]Get
       latest changes in your repo for a linked project using subtree
     * Export a branch with history to a
       file.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#import-f
       rom-a-bundle]Import from a bundle
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#get-the-
       name-of-current-branch]Get the name of current branch.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#ignore-o
       ne-file-on-commit-eg-changelog]Ignore one file on commit (e.g.
       Changelog).
     * Stash changes before rebasing
     * Fetch pull request by ID to a
       local branch
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#show-the
       -most-recent-tag-on-the-current-branch]Show the most recent tag on
       the current branch.
     * Show inline word diff.
     * Show changes using common diff tools.
     * Don't consider changes for tracked
       file.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#undo-ass
       ume-unchanged]Undo assume-unchanged.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#clean-th
       e-files-from-gitignore]Clean the files from .gitignore.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#restore-
       deleted-file]Restore deleted file.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#restore-
       file-to-a-specific-commit-hash]Restore file to a specific
       commit-hash
     * Always rebase instead of merge on
       pull.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#list-all
       -the-alias-and-configs]List all the alias and configs.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#make-git
       -case-sensitive]Make git case sensitive.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#add-cust
       om-editors]Add custom editors.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#auto-cor
       rect-typos]Auto correct typos.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#check-if
       -the-change-was-a-part-of-a-release]Check if the change was a part
       of a release.
     * Dry run. (any
       command that supports dry-run flag should do.)
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#marks-yo
       ur-commit-as-a-fix-of-a-previous-commit]Marks your commit as a fix
       of a previous commit.
     * Squash fixup commits normal commits.
     * Skip staging area during commit.
     * Interactive staging.
     * List ignored files.
     * Status of ignored files.
     * Commits in Branch1 that are not
       in Branch2
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#list-n-l
       ast-commits]List n last commits
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#reuse-re
       corded-resolution-record-and-reuse-previous-conflicts-resolutions]R
       euse recorded resolution, record and reuse previous conflicts
       resolutions.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#open-all
       -conflicted-files-in-an-editor]Open all conflicted files in an
       editor.
     * Count unpacked
       number of objects and their disk consumption.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#prune-al
       l-unreachable-objects-from-the-object-database]Prune all
       unreachable objects from the object database.
     * Instantly browse your
       working repository in gitweb.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#view-the
       -gpg-signatures-in-the-commit-log]View the GPG signatures in the
       commit log
     * Remove entry in the global config.
     * Checkout a new branch without any
       history
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#extract-
       file-from-another-branch]Extract file from another branch.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#list-onl
       y-the-root-and-merge-commits]List only the root and merge commits.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#change-p
       revious-two-commits-with-an-interactive-rebase]Change previous two
       commits with an interactive rebase.
     * List all branch is WIP
     * Find guilty with binary search
     * Bypass pre-commit and commit-msg
       githooks
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#list-com
       mits-and-changes-to-a-specific-file-even-through-renaming]List
       commits and changes to a specific file (even through renaming)
     * Clone a single branch
     * Create and switch new branch
     * Ignore file mode changes on commits
     * Turn off git colored terminal output
     * Specific color settings
     * Show all local branches
       ordered by recent commits
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#find-lin
       es-matching-the-pattern-regex-or-string-in-tracked-files]Find lines
       matching the pattern (regex or string) in tracked files
     * Clone a shallow copy of a repository
     * Search Commit log
       across all branches for given text
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#get-firs
       t-commit-in-a-branch-from-master]Get first commit in a branch (from
       master)
     * Unstaging Staged file
     * Force push to Remote Repository
     * Adding Remote name
     * Sh
       ow the author, time and last revision made to each line of a given
       file
     * Group commits by authors and title
     * Forced push but
       still ensure you don't overwrite other's work
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#show-how
       -many-lines-does-an-author-contribute]Show how many lines does an
       author contribute
     * Revert: Reverting an entire merge
     * Number of commits in a branch
     * Alias: git undo
     * Add object notes
     * Show all the git-notes
     * Apply commit from another repository
     * Specific fetch reference
     * Find common ancestor of two branches
     * List unpushed git commits
     * Add everything, but whitespace
       changes
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#edit-loc
       alglobal-git-config]Edit [local/global] git config
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#blame-on
       -certain-range]blame on certain range
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#show-a-g
       it-logical-variable]Show a Git logical variable.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#preforma
       tted-patch-file]Preformatted patch file.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#get-the-
       repo-name]Get the repo name.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#logs-bet
       ween-date-range]logs between date range
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#exclude-
       author-from-logs]Exclude author from logs
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#generate
       s-a-summary-of-pending-changes]Generates a summary of pending
       changes
     * List references in a remote
       repository
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#backup-u
       ntracked-files]Backup untracked files.
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#list-all
       -git-aliases]List all git aliases
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#show-git
       -status-short]Show git status short
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#checkout
       -a-commit-prior-to-a-day-ago]Checkout a commit prior to a day ago
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/tips#push-a-n
       ew-local-branch-to-remote-repository-and-track]Push a new local
       branch to remote repository and track
     * Change a branch base

Everyday Git in twenty commands or so

git help everyday

Show helpful guides that come with Git

git help -g

Search change by content

git log -S'<a term in the source>'

Remove sensitive data from history, after a push

git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch <path-to-your-file>' --prune-empty --tag-name-filter cat -- --all && git push origin --force --all

Sync with remote, overwrite local changes

git fetch origin && git reset --hard origin/master && git clean -f -d

List of all files till a commit

git ls-tree --name-only -r <commit-ish>

Git reset first commit

git update-ref -d HEAD

List all the conflicted files

git diff --name-only --diff-filter=U

List of all files changed in a commit

git diff-tree --no-commit-id --name-only -r <commit-ish>

Unstaged changes since last commit

git diff

Changes staged for commit

git diff --cached

   Alternatives:
git diff --staged

Show both staged and unstaged changes

git diff HEAD

List all branches that are already merged into master

git branch --merged master

Quickly switch to the previous branch

git checkout -

   Alternatives:
git checkout @{-1}

Remove branches that have already been merged with master

git branch --merged master | grep -v '^\*' | xargs -n 1 git branch -d

   Alternatives:
git branch --merged master | grep -v '^\*\|  master' | xargs -n 1 git branch -d # will not delete master if master is not checked out

List all branches and their upstreams, as well as last commit on branch

git branch -vv

Track upstream branch

git branch -u origin/mybranch

Delete local branch

git branch -d <local_branchname>

Delete remote branch

git push origin --delete <remote_branchname>

   Alternatives:
git push origin :<remote_branchname>

Delete local tag

git tag -d <tag-name>

Delete remote tag

git push origin :refs/tags/<tag-name>

Undo local changes with the last content in head

git checkout -- <file_name>

Revert: Undo a commit by creating a new commit

git revert <commit-ish>

Reset: Discard commits, advised for private branch

git reset <commit-ish>

Reword the previous commit message

git commit -v --amend

See commit history for just the current branch

git cherry -v master

Amend author.

git commit --amend --author='Author Name <email@address.com>'

Reset author, after author has been changed in the global config.

git commit --amend --reset-author --no-edit

Changing a remote's URL

git remote set-url origin <URL>

Get list of all remote references

git remote

   Alternatives:
git remote show

Get list of all local and remote branches

git branch -a

Get only remote branches

git branch -r

Stage parts of a changed file, instead of the entire file

git add -p

Get git bash completion

curl http://git.io/vfhol > ~/.git-completion.bash && echo '[ -f ~/.git-completion.bash ] && . ~/.git-completion.bash' >> ~/.bashrc

What changed since two weeks?

git log --no-merges --raw --since='2 weeks ago'

   Alternatives:
git whatchanged --since='2 weeks ago'

See all commits made since forking from master

git log --no-merges --stat --reverse master..

Pick commits across branches using cherry-pick

git checkout <branch-name> && git cherry-pick <commit-ish>

Find out branches containing commit-hash

git branch -a --contains <commit-ish>

   Alternatives:
git branch --contains <commit-ish>

Git Aliases

git config --global alias.<handle> <command>
git config --global alias.st status

Saving current state of tracked files without commiting

git stash

   Alternatives:
git stash save

Saving current state of unstaged changes to tracked files

git stash -k

   Alternatives:
git stash --keep-index

git stash save --keep-index

Saving current state including untracked files

git stash -u

   Alternatives:
git stash save -u

git stash save --include-untracked

Saving current state with message

git stash save <message>

Saving current state of all files (ignored, untracked, and tracked)

git stash -a

   Alternatives:
git stash --all

git stash save --all

Show list of all saved stashes

git stash list

Apply any stash without deleting from the stashed list

git stash apply <stash@{n}>

Apply last stashed state and delete it from stashed list

git stash pop

   Alternatives:
git stash apply stash@{0} && git stash drop stash@{0}

Delete all stored stashes

git stash clear

   Alternatives:
git stash drop <stash@{n}>

Grab a single file from a stash

git checkout <stash@{n}> -- <file_path>

   Alternatives:
git checkout stash@{0} -- <file_path>

Show all tracked files

git ls-files -t

Show all untracked files

git ls-files --others

Show all ignored files

git ls-files --others -i --exclude-standard

Create new working tree from a repository (git 2.5)

git worktree add -b <branch-name> <path> <start-point>

Create new working tree from HEAD state

git worktree add --detach <path> HEAD

Untrack files without deleting

git rm --cached <file_path>

   Alternatives:
git rm --cached -r <directory_path>

Before deleting untracked files/directory, do a dry run to get the list of these files/directories

git clean -n

Forcefully remove untracked files

git clean -f

Forcefully remove untracked directory

git clean -f -d

Update all the submodules

git submodule foreach git pull

   Alternatives:
git submodule update --init --recursive

git submodule update --remote

Show all commits in the current branch yet to be merged to master

git cherry -v master

   Alternatives:
git cherry -v master <branch-to-be-merged>

Rename a branch

git branch -m <new-branch-name>

   Alternatives:
git branch -m [<old-branch-name>] <new-branch-name>

Rebases 'feature' to 'master' and merges it in to master

git rebase master feature && git checkout master && git merge -

Archive the master branch

git archive master --format=zip --output=master.zip

Modify previous commit without modifying the commit message

git add --all && git commit --amend --no-edit

Prunes references to remote branches that have been deleted in the remote.

git fetch -p

   Alternatives:
git remote prune origin

Retrieve the commit hash of the initial revision.

 git rev-list --reverse HEAD | head -1

   Alternatives:
git rev-list --max-parents=0 HEAD

git log --pretty=oneline | tail -1 | cut -c 1-40

git log --pretty=oneline --reverse | head -1 | cut -c 1-40

Visualize the version tree.

git log --pretty=oneline --graph --decorate --all

   Alternatives:
gitk --all

git log --graph --pretty=format:'%C(auto) %h | %s | %an | %ar%d'

Deploying git tracked subfolder to gh-pages

git subtree push --prefix subfolder_name origin gh-pages

Adding a project to repo using subtree

git subtree add --prefix=<directory_name>/<project_name> --squash git@github.com:<username>/<project_name>.git master

Get latest changes in your repo for a linked project using subtree

git subtree pull --prefix=<directory_name>/<project_name> --squash git@github.com:<username>/<project_name>.git master

Export a branch with history to a file.

git bundle create <file> <branch-name>

Import from a bundle

git clone repo.bundle <repo-dir> -b <branch-name>

Get the name of current branch.

git rev-parse --abbrev-ref HEAD

Ignore one file on commit (e.g. Changelog).

git update-index --assume-unchanged Changelog; git commit -a; git update-index --no-assume-unchanged Changelog

Stash changes before rebasing

git rebase --autostash

Fetch pull request by ID to a local branch

git fetch origin pull/<id>/head:<branch-name>

   Alternatives:
git pull origin pull/<id>/head:<branch-name>

Show the most recent tag on the current branch.

git describe --tags --abbrev=0

Show inline word diff.

git diff --word-diff

Show changes using common diff tools.

git difftool [-t <tool>] <commit1> <commit2> <path>

Don't consider changes for tracked file.

git update-index --assume-unchanged <file_name>

Undo assume-unchanged.

git update-index --no-assume-unchanged <file_name>

Clean the files from .gitignore.

git clean -X -f

Restore deleted file.

git checkout <deleting_commit>^ -- <file_path>

Restore file to a specific commit-hash

git checkout <commit-ish> -- <file_path>

Always rebase instead of merge on pull.

git config --global pull.rebase true

   Alternatives:
#git < 1.7.9
git config --global branch.autosetuprebase always

List all the alias and configs.

git config --list

Make git case sensitive.

git config --global core.ignorecase false

Add custom editors.

git config --global core.editor '$EDITOR'

Auto correct typos.

git config --global help.autocorrect 1

Check if the change was a part of a release.

git name-rev --name-only <SHA-1>

Dry run. (any command that supports dry-run flag should do.)

git clean -fd --dry-run

Marks your commit as a fix of a previous commit.

git commit --fixup <SHA-1>

Squash fixup commits normal commits.

git rebase -i --autosquash

Skip staging area during commit.

git commit --only <file_path>

Interactive staging.

git add -i

List ignored files.

git check-ignore *

Status of ignored files.

git status --ignored

Commits in Branch1 that are not in Branch2

git log Branch1 ^Branch2

List n last commits

git log -<n>

   Alternatives:
git log -n <n>

Reuse recorded resolution, record and reuse previous conflicts resolutions.

git config --global rerere.enabled 1

Open all conflicted files in an editor.

git diff --name-only | uniq | xargs $EDITOR

Count unpacked number of objects and their disk consumption.

git count-objects --human-readable

Prune all unreachable objects from the object database.

git gc --prune=now --aggressive

Instantly browse your working repository in gitweb.

git instaweb [--local] [--httpd=<httpd>] [--port=<port>] [--browser=<browser>]

View the GPG signatures in the commit log

git log --show-signature

Remove entry in the global config.

git config --global --unset <entry-name>

Checkout a new branch without any history

git checkout --orphan <branch_name>

Extract file from another branch.

git show <branch_name>:<file_name>

List only the root and merge commits.

git log --first-parent

Change previous two commits with an interactive rebase.

git rebase --interactive HEAD~2

List all branch is WIP

git checkout master && git branch --no-merged

Find guilty with binary search

git bisect start                    # Search start
git bisect bad                      # Set point to bad commit
git bisect good v2.6.13-rc2         # Set point to good commit|tag
git bisect bad                      # Say current state is bad
git bisect good                     # Say current state is good
git bisect reset                    # Finish search

Bypass pre-commit and commit-msg githooks

git commit --no-verify

List commits and changes to a specific file (even through renaming)

git log --follow -p -- <file_path>

Clone a single branch

git clone -b <branch-name> --single-branch https://github.com/user/repo.git

Create and switch new branch

git checkout -b <branch-name>

   Alternatives:
git branch <branch-name> && git checkout <branch-name>

Ignore file mode changes on commits

git config core.fileMode false

Turn off git colored terminal output

git config --global color.ui false

Specific color settings

git config --global <specific command e.g branch, diff> <true, false or always>

Show all local branches ordered by recent commits

git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/

Find lines matching the pattern (regex or string) in tracked files

git grep --heading --line-number 'foo bar'

Clone a shallow copy of a repository

git clone https://github.com/user/repo.git --depth 1

Search Commit log across all branches for given text

git log --all --grep='<given-text>'

Get first commit in a branch (from master)

git log master..<branch-name> --oneline | tail -1

Unstaging Staged file

git reset HEAD <file-name>

Force push to Remote Repository

git push -f <remote-name> <branch-name>

Adding Remote name

git remote add <remote-nickname> <remote-url>

Show the author, time and last revision made to each line of a given file

git blame <file-name>

Group commits by authors and title

git shortlog

Forced push but still ensure you don't overwrite other's work

git push --force-with-lease <remote-name> <branch-name>

Show how many lines does an author contribute

git log --author='_Your_Name_Here_' --pretty=tformat: --numstat | gawk '{ add += <!-- @doxie.inject start -->; subs += <!-- @doxie.inject end -->; loc += <!-- @doxie.inject start --> - <!-- @doxie.inject end --> } END { printf "added lines: %s removed lines: %s total lines: %s
", add, subs, loc }' -

   Alternatives:
git log --author='_Your_Name_Here_' --pretty=tformat: --numstat | awk '{ add += <!-- @doxie.inject start -->; subs += <!-- @doxie.inject end -->; loc += <!-- @doxie.inject start --> - <!-- @doxie.inject end --> } END { printf "added lines: %s, removed lines: %s, total lines: %s
", add, subs, loc }' - # on Mac OSX

Revert: Reverting an entire merge

git revert -m 1 <commit-ish>

Number of commits in a branch

git rev-list --count <branch-name>

Alias: git undo

git config --global alias.undo '!f() { git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}}; }; f'

Add object notes

git notes add -m 'Note on the previous commit....'

Show all the git-notes

git log --show-notes='*'

Apply commit from another repository

git --git-dir=<source-dir>/.git format-patch -k -1 --stdout <SHA1> | git am -3 -k

Specific fetch reference

git fetch origin master:refs/remotes/origin/mymaster

Find common ancestor of two branches

diff -u <(git rev-list --first-parent BranchA) <(git rev-list --first-parent BranchB) | sed -ne 's/^ //p' | head -1

List unpushed git commits

git log --branches --not --remotes

   Alternatives:
git log @{u}..

git cherry -v

Add everything, but whitespace changes

git diff --ignore-all-space | git apply --cached

 git config

git config [--global] --edit

blame on certain range

git blame -L <start>,<end>

Show a Git logical variable.

git var -l | <variable>

Preformatted patch file.

git format-patch -M upstream..topic

Get the repo name.

git rev-parse --show-toplevel

logs between date range

git log --since='FEB 1 2017' --until='FEB 14 2017'

Exclude author from logs

git log --perl-regexp --author='^((?!excluded-author-regex).*)

Generates a summary of pending changes

git request-pull v1.0 https://git.ko.xz/project master:for-linus

List references in a remote repository

git ls-remote git://git.kernel.org/pub/scm/git/git.git

Backup untracked files.

git ls-files --others -i --exclude-standard | xargs zip untracked.zip

List all git aliases

git config -l | grep alias | sed 's/^alias\.//g'

   Alternatives:
git config -l | grep alias | cut -d '.' -f 2

Show git status short

git status --short --branch

Checkout a commit prior to a day ago

git checkout master@{yesterday}

Push a new local branch to remote repository and track

git push -u origin <branch_name>

Change a branch base

git rebase --onto <new_base> <old_base>

     * © 2018 GitHub, Inc.
     * [https://github.com/site/terms]Terms
     * [https://github.com/site/privacy]Privacy
     * [https://help.github.com/articles/github-security/]Security
     * [https://status.github.com/]Status
     * [https://help.github.com/]Help

   [https://github.com/]
     * [https://github.com/contact]Contact GitHub
     * [https://developer.github.com/]API
     * [https://training.github.com/]Training
     * [https://shop.github.com/]Shop
     * [https://blog.github.com/]Blog
     * [https://github.com/about]About

   (BUTTON) You can't perform that action at this time.

   You signed in with another tab or window.
   Reload to
   refresh your session. You signed out in another tab or window.
   Reload to
   refresh your session.

   (BUTTON)

   Press h to open a hovercard with more details.
