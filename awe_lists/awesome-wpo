   #Rec
   ent Commits to awesome-wpo:master

   Skip to content
   [https://github.com/]
     * Features
     * Explore
     * Pricing

   This repository
   ____________________
   Sign
   in or Sign up

     * 373
     * 6,205
     * 473

awesome-wpo

   Code
   Pull requests 0
   Insights
   (BUTTON) Dismiss

Join GitHub today

   GitHub is home to over 20 million developers working together to host
   and review code, manage projects, and build software together.

   Sign up
   A curated list of Web Performance Optimization. Everyone can contribute
   here!
   awesome
   webperformance
   392
       commits
     * 1 branch
     * F
       etching contributors
     * M
       IT

   Clone or download

Clone with HTTPS [https://help.github.com/articles/which-remote-url-should-i-use]

   Use Git or checkout with SVN using the web URL.
   https://github.com/d
   Downlo
   ad ZIP

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching Xcode...

   If nothing happens, [https://developer.apple.com/xcode/]download Xcode
   and try again.

   (BUTTON) Go back

Launching Visual Studio...

   If nothing happens, [https://visualstudio.github.com/]download the
   GitHub extension for Visual Studio and try again.

   (BUTTON) Go back
   Find file
   (BUTTON) Branch: master
   Switch branches/tags
   ____________________
     * B
       ranches
     * T
       ags

   master
   Nothing to show
   Nothing to show
   (BUTTON) New pull request
   Fetching latest commit...
   Cannot retrieve the latest commit at this time.
   [file://localhost/davidsonfellipe/awesome-wpo/tree/41d4a2c7b8867a069d0b
   4cb262df2e55f1f96ea4]Permalink
   Failed to load latest commit information.
   A
   RTICLES.md
   Removing link that is no longer valid Feb 20,
   2018
   BLOG
   S.md
   [file://localhost/davidsonfellipe/awesome-wpo/commit/564a741f59ce91fb64
   b56dc2cf59170c401b0501]Removing blog: Web Performance Today Feb 20,
   2018
   LICEN
   SE
   Update LICENSE Feb 20, 2018
   ME
   ETUPS.md
   Update MEETUPS.md Feb 20, 2018
   PEO
   PLE.md
   Removing people no longer related to web
   performance Feb 20, 2018
   REA
   DME.md
   [file://localhost/davidsonfellipe/awesome-wpo/commit/41d4a2c7b8867a069d
   0b4cb262df2e55f1f96ea4](license): Adding badge MIT license Mar 23, 2018
   TALK
   S.md
   [file://localhost/davidsonfellipe/awesome-wpo/commit/4b402baa738bae1f2c
   c23aaddfe5a3226651de47]Update TALKS.md Feb 20, 2018

README.md

Awesome

   [https://github.com/davidsonfellipe/awesome-wpo/graphs/contributors]Git
   Hub contributors [https://davidsonfellipe.mit-license.org/]MIT license

   A curated list of Web Performance Optimization. Everyone can contribute
   here!

Categories

   Articles

   °
   Blogs

   [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-wpo#books
   ]Books

   Docs

   [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-wpo#event
   s]Events

   «
   [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-wpo#peopl
   e]People

   ¥
   [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-wpo#talks
   ]Talks

Tools

     * Analyzers
     * Analyzers API
     * Benchmark - CSS
     * Benchmark - JS
     * Benchmark - PHP
     * Bookmarklets
     * CDN
     * CDN - Monitor
     * CDN - Utilities
     * Extensions
     * Image Optimizers
     * Lazyloaders
     * Loaders
     * Metrics Monitor
     * Minifiers HTML
     * Minifiers JS & CSS
     * Miscellaneous
     * Sprite Generators
     * SVG
     * Web Components
     * Web server Benchmarks
     * Web server Modules
     * Specs
     * Stats
     * Other Awesome Lists
     * Contributing

Articles

     Go to
     ARTICLES.md.

Blogs

     Go to
     B
     LOGS.

Books

     Best books about WPO

     * [https://www.manning.com/books/http2-in-action]HTTP/2 in Action by
       Barry Pollard - Barry Pollard - early release
     * [https://www.manning.com/books/web-performance-in-action]Web
       Performance in Action by Jeremy Wagner - Jeremy L. Wagner
     * [http://www.bookofspeed.com/]Book of Speed - Stoyan Stefanov
     * [http://designingforperformance.com/]Designing for Performance:
       Weighing Aesthetics and Speed - Lara Callender Hogan
     * [http://shop.oreilly.com/product/9780596522315.do]Even Faster Web
       Sites: Performance Best Practices for Web Developers - Steve
       Souders
     * [http://shop.oreilly.com/product/0636920032427.do]Getting Started
       with Web Performance - Daniel Austin - early release
     * [http://shop.oreilly.com/product/0636920028048.do]High Performance
       Browser Networking: What every web developer should know about
       networking and web performance - Ilya Grigorik
     * [http://shop.oreilly.com/product/9780596802806.do]High Performance
       JavaScript - Nicholas C. Zakas
     * [http://books.google.de/books/about/High_Performance_Web_Sites.html
       ?id=jRVlgNDOr60C&redir_esc=y]High Performance Web Sites: Essential
       Knowledge for Front-End Engineers - Steve Souders
     * [http://shop.oreilly.com/product/0636920033103.do]High Performance
       Responsive Design: Building Faster Sites Across Devices - Tom
       Barker
     * [https://www.sitepoint.com/premium/books/lean-websites]Lean
       Websites - Barbara Bermes
     * [http://shop.oreilly.com/product/0636920041450.do]Time Is Money:
       The Business Value of Web Performance - Tammy Everts
     * [http://shop.oreilly.com/product/0636920033592.do]Using WebPagetest
       - Rick Viscomi, Andy Davies, Marcel Duran - early release
     * [http://www.oreilly.com/webops-perf/free/webpage-size-speed-perf.cs
       p]Web Page Size, Speed, and Performance - Terrence Dorsey
     * [http://www.amazon.com/Web-Performance-Daybook-Stoyan-Stefanov-eboo
       k/dp/B008CQA8BA/ref=asap_bc?ie=UTF8]Web Performance Daybook Volume
       2 - Stoyan Stefanov
     * [http://shop.oreilly.com/product/9780596001728.do]Web Performance
       Tuning - Patrick Killelea
     * [http://shop.oreilly.com/product/0636920033752.do]You Don't Know
       JS: Async & Performance - Kyle Simpson
     * [https://play.google.com/store/books/details/Colin_McKinnon_Linux_A
       pache_MySQL_PHP_Performance?id=Z3ciBgAAQBAJ]Linux, Apache, MySQL,
       PHP Performance End to End - Colin McKinnon

Case studies

     * [https://wpostats.com/]WPOStats - Case studies and experiments
       demonstrating the impact of web performance optimization (WPO) on
       user experience and business metrics.

Documentation

     * [http://browserdiet.com/en/]Browser Diet - A collaborative guide
       about front-end performance.
     * [https://developers.google.com/speed/docs/insights/rules]PageSpeed
       Insights Rules - A guide created by PageSpeed Team.
     * [https://developer.yahoo.com/performance/rules.html]Best Practices
       for Speeding Up Your Web Site - The list includes 35 best practices
       divided into 7 categories, created by Yahoo! Exceptional
       Performance team.
     * [http://www.imageoptimization.info/]Image Optimization Techniques -
       A collection of tools and techniques to optimize your images and
       improve your page load times.

People

     Go to
     
     PEOPLE.md.

Events

     Because community matters!

Conferences

     * [http://conferences.oreilly.com/velocity]Velocity - At Velocity,
       web operations, performance, and DevOps professionals learn to
       build fast, resilient, and highly available websites and apps.

Meetups

     They are categorized into
     MEETUPS.md.

Talks

     They are categorized into
     T
     ALKS.md.

Tools

Analyzers

     * [https://github.com/jamesgpearce/confess]Confess - Uses PhantomJS
       to headlessly analyze web pages and generate manifests.
     * [https://developers.google.com/speed/pagespeed/]Page Speed - The
       PageSpeed family of tools is designed to help you optimize the
       performance of your website. PageSpeed Insights products will help
       you identify performance best practices that can be applied to your
       site, and PageSpeed optimization tools can help you automate the
       process.
     * [https://github.com/GoogleChrome/lighthouse]Lighthouse - Auditing
       and performance metrics tool for Progressive Web Applications.
     * [https://github.com/marcelduran/yslow]YSlow - YSlow analyzes web
       pages and suggests ways to improve their performance based on a set
       of rules for high performance web pages.
     * [http://yslow.org/phantomjs/]YSlow for PhantomJS - YSlow for
       PhantomJS also introduces new output formats for automated test
       frameworks: TAP (Test Anything Protocol) and JUnit.
     * [https://github.com/sideroad/grunt-wpt]Grunt-WebPageTest - Grunt
       plugin for continuously measurement of WebPageTest.
       ([http://sideroad.github.io/sample-wpt-page/]Demo)
     * [https://github.com/andyshora/grunt-yslow]Grunt-yslow - Grunt task
       for testing page performance using PhantomJS, a headless WebKit
       browser.
     * [https://github.com/tkadlec/grunt-perfbudget]Grunt-perfbudget - A
       Grunt.js task for enforcing a performance budget
       ([https://timkadlec.com/2013/01/setting-a-performance-budget/]more
       on performance budgets).
     * [https://github.com/google/tracing-framework]Web Tracing Framework
       - Web Tracing Framework is a set of libraries, tools, and
       visualizers for the tracing and investigation of complex web
       applications
     * [http://www8.hp.com/us/en/software-solutions/loadrunner-load-testin
       g/]HP LoadRunner - An automated performance and test automation
       product from Hewlett-Packard for application load testing:
       examining system behavior and performance, while generating actual
       load.
     * [https://github.com/yandex/yandex-tank]Yandex.Tank - An extensible
       open source load testing tool for advanced linux users which is
       especially good as a part of an automated load testing suite.
     * [http://yellowlab.tools/]Yellow Lab Tools - Online quick and easy
       tool that audits front-end bad practices, reveals performance
       issues and profiles JavaScript.
     * [http://pagelocity.com/]Pagelocity - A web performance optimization
       and analysis tool.
     * [https://varvy.com/pagespeed/]Varvy - Test your site to see if it
       follows the Google guidelines for speed.
     * [http://www.webbloatscore.com/]Web Bloat Score Calculator - Compare
       size of a page to a compressed image of the same page
     * [https://github.com/ngryman/speedracer]Speed Racer - Collect
       performance metrics for your library/application using Chrome
       headless.

Analyzers - API

     * [https://github.com/jmervine/node-yslowjs]Node-yslowjs - YSlow.js
       on Node.js is a simple Node.js wrapper for programmatically running
       phantomjs yslow.js.
     * [https://github.com/addyosmani/psi]PSI - PageSpeed Insights for
       Node - with reporting.

Benchmark - CSS

     * [https://github.com/mdo/css-perf]CSS-perf - Completely unscientific
       way of testing CSS performance. Most of these tests will revolve
       around methodologies and techniques for determining effective CSS
       architecture. Put another way, I want to know what works best given
       a particular comparison of CSS strategies.

Benchmark - Javascript

     A set of tools for creating test cases and compare different
     implementations in JavaScript.

     * [http://jsperf.com/]JSPerf - jsPerf aims to provide an easy way to
       create and share test cases, comparing the performance of different
       JavaScript snippets by running benchmarks.
     * [http://benchmarkjs.com/]Benchmark.js - A robust benchmarking
       library that works on nearly all JavaScript platforms, supports
       high-resolution timers, and returns statistically significant
       results.
     * [https://github.com/broofa/jslitmus]JSlitmus - JSLitmus is a
       lightweight tool for creating ad-hoc JavaScript benchmark tests.
     * [https://github.com/logicalparadox/matcha]Matcha - Matcha allow you
       to design experiments that will measure the performance of your
       code. It is recommended that each bench focus on a specific point
       of impact in your application.
     * [https://github.com/addyosmani/timing.js]Timing.js - Timing.js is a
       small set of helpers for working with the Navigation Timing API to
       identify where your application is spending its time. Useful as a
       standalone script, DevTools Snippet or bookmarklet.
     * [https://github.com/mrdoob/stats.js]Stats.js - This class provides
       a simple info box that will help you monitor your code performance.
     * [https://github.com/kogarashisan/PerfTests]PerfTests - Performance
       tests of JavaScript inheritance models.
     * [https://github.com/paulirish/memory-stats.js]Memory-stats.js -
       minimal monitor for JS Heap Size via performance memory.

Benchmark - PHP

     * [https://github.com/mre/PHPench]PHPench - PHPench creates a
       graphical output for a PHP benchmark. Plot the runtime of any
       function in realtime with GnuPlot and create an image out of the
       result.
     * [https://github.com/jacobbednarz/php-bench]php-bench - Benchmark
       and profile PHP code blocks whilst measuring the performance
       footprint.

Bookmarklets

     * [https://developer.yahoo.com/yslow/]Yahoo YSlow for
       Mobile/Bookmarklet - YSlow analyzes web pages and suggests ways to
       improve their performance based on a set of rules for high
       performance web pages.
     * [https://developers.google.com/speed/pagespeed/insights_extensions]
       PageSpeed [Deprecated] - PageSpeed Insights is available as an
       open-source browser extension for Google Chrome. Webmasters and web
       developers can use PageSpeed Insights to evaluate the performance
       of their web pages and to get suggestions on how to improve them -
       Workaround by [https://github.com/kiquenet]@Kiquenet -
       [https://gist.github.com/davidsonfellipe/f8e3723b4dc0aaf9f6d4]https
       ://gist.github.com/davidsonfellipe/f8e3723b4dc0aaf9f6d4.
     * [https://github.com/zeman/perfmap]PerfMap - A bookmarklet to create
       a front-end performance heatmap of resources loaded in the browser
       using the Resource Timing API.
     * [https://github.com/madrobby/dom-monster]DOM Monster - A
       cross-platform, cross-browser bookmarklet that will analyze the DOM
       & other features of the page you're on, and give you its bill of
       health.
     * [http://andy.edinborough.org/CSS-Stress-Testing-and-Performance-Pro
       filing]CSS Stress - CSS Stress is a Testing and Performance
       Profiling.
     * [https://github.com/micmro/performance-bookmarklet]Performance-Book
       marklet - Analyze the current page through the Resource Timing API,
       Navigation Timing API and User-Timing - Sort of a light live
       WebPageTest. As
       [https://chrome.google.com/webstore/detail/performance-analyser/djg
       fmlohefpomchfabngccpbaflcahjf?hl=en]Chrome Extension and
       [https://addons.mozilla.org/en-us/firefox/addon/performance-analyse
       r/?src=cb-dl-created]Firefox Add-on under the name
       Performance-Analyser.

CDN

     A content delivery network or content distribution network (CDN) is
     a large distributed system of servers deployed in multiple data
     centers across the Internet. The goal of a CDN is to serve content
     to end-users with high availability and high performance. See a
     large list of CDN in
     [http://en.wikipedia.org/wiki/Content_delivery_network#Notable_conte
     nt_delivery_service_providers]Wikipedia.

     * [https://github.com/jsdelivr/jsdelivr]jsDelivr - Similar to Google
       Hosted Libraries, jsDelivr is an open source CDN that allows
       developers to host their own projects and anyone to link to our
       hosted files on their websites.
     * [https://developers.google.com/speed/libraries/]Google Hosted
       Libraries - Google Hosted Libraries is a content distribution
       network for the most popular, open-source JavaScript libraries.
     * [https://cdnjs.com/]CDNjs - An open source CDN for Javascript and
       CSS sponsored by CloudFlare that hosts everything from jQuery and
       Modernizr to Bootstrap.
     * [http://www.asp.net/ajax/cdn]Microsoft Ajax Content Delivery
       Network - Microsoft Ajax Content Delivery Network (CDN) hosts
       popular third party JavaScript libraries such as jQuery and enables
       you to easily add them to your Web applications.
     * [http://code.jquery.com/]jQuery - jQuery CDN - Latest Stable
       Versions, powered by MaxCDN.
     * [http://www.bootstrapcdn.com/]Bootstrap - The recommended CDN for
       Bootstrap, Font Awesome, and Bootswatch.
     * [http://www.jque.re/]Handpicked jQuery Plugins Repository CDN -
       Content Delivery Network for popular jQuery plugins.
     * [https://github.com/MaxCDN/osscdn]OSSCDN - OSSCDN is a free CDN
       powered by MaxCDN that hosts all kinds of Open Source projects.
     * [https://cdnify.com/]CDNify - A Content Delivery Network for
       distributing all your static assets with ease around the globe.
     * ¨³
       [http://developer.baidu.com/wiki/index.php?title=docs/cplat/libs]Ba
       idu public CDN - Baidu public CDN serves stable, reliable,
       high-speed services, including all of the world's most popular open
       source JavaScript libraries.
     * ¨³ [http://jscdn.upai.com/]UpYun CDN - CDN provided by upyun.
     * ¨³ [http://lib.sinaapp.com/]Sina Public Resources - CDN provided by
       sinaapp.com.
     * ¨³ [http://www.bootcdn.cn/]Bootstrap­¾CDN¡ - Bootstrap Chinese net
       open CDN service (only HTTP).
     * ·º [https://tech.yandex.ru/jslibs/]Yandex CDN - Yandex Content
       Delivery Network hosts popular third party JavaScript and CSS
       libraries (best for use in Russia).

     To find useful more information for you make the right choice
     between paid CDNs, please visit
     [http://www.cdnplanet.com/]CDNPlanet.

CDN - Monitor

     * [http://www.cdnperf.com/]CDNperf - finds you fast and reliable
       JavaScript CDNs that make your websites snappy and happy.

CDN - Utilities

     * [https://github.com/jsonmaur/cdnex]Cdnex - Prepends asset urls with
       custom CDN urls.
     * [https://github.com/sindresorhus/gulp-google-cdn]Gulp-google-cdn -
       Replaces script references with Google CDN ones.

Extensions

     * [https://github.com/zenorocha/browser-calories-chrome]Browser
       Calories - The easiest way to measure your performance budget.

Image Optimizers

     How to remove all this unnecessary data and give you a file without
     degrading quality.

     * [https://github.com/heldr/grunt-smushit]Grunt-smushit - Grunt
       plugin to remove unnecessary bytes of PNG and JPG using Yahoo
       Smushit.
     * [https://github.com/heldr/gulp-smushit]Gulp-smushit - Gulp plugin
       to optimize PNG and JPG using Yahoo Smushit. Made on top of smosh.
     * [http://www.smushit.com/ysmush.it/]Smush.it - Smush.it uses
       optimization techniques specific to image format to remove
       unnecessary bytes from image files. It is a "lossless" tool, which
       means it optimizes the images without changing their look or visual
       quality.
     * [https://github.com/imagemin/imagemin]Imagemin - Minify images
       seamlessly with Node.js.
     * [https://github.com/lovell/sharp]Sharp - The typical use case for
       this high speed Node.js module is to convert large images of many
       formats to smaller, web-friendly JPEG, PNG and WebP images of
       varying dimensions.
     * [https://github.com/aheckmann/gm]Gm - GraphicsMagick and
       ImageMagick for node.
     * [https://github.com/h4cc/awesome-elixir]Exexif - Pure elixir
       library to extract tiff and exif metadata from jpeg files.
     * [http://optipng.sourceforge.net/]OptiPNG - OptiPNG is a PNG
       optimizer that recompresses image files to a smaller size, without
       losing any information.
     * [https://github.com/gruntjs/grunt-contrib-imagemin]Grunt-contrib-im
       agemin - Minify PNG and JPEG images for Grunt.
     * [https://github.com/sindresorhus/gulp-imagemin]Gulp-imagemin -
       Minify PNG, JPEG, GIF and SVG images with imagemin for Gulp.
     * [https://github.com/somerandomdude/grunt-webp]Grunt-WebP - Convert
       your images to WebP format.
     * [https://github.com/sindresorhus/gulp-webp]Gulp-WebP - Convert
       images to WebP for Gulp.
     * [https://imageoptim.com/]Imageoptim - Free app that makes images
       take up less disk space and load faster, without sacrificing
       quality. It optimizes compression parameters, removes junk metadata
       and unnecessary color profiles.
     * [https://github.com/JamieMason/grunt-imageoptim]Grunt-imageoptim -
       Make ImageOptim, ImageAlpha and JPEGmini part of your automated
       build process.
     * [https://github.com/JamieMason/ImageOptim-CLI]ImageOptim-CLI -
       Automates ImageOptim, ImageAlpha, and JPEGmini for Mac to make
       batch optimization of images part of your automated build process.
     * [https://tinypng.com/]Tinypng - Advanced lossy compression for PNG
       images that preserves full alpha transparency.
     * [https://kraken.io/web-interface]Kraken Web-interface - Optimize
       your images and will be available for download for 12 hours.
     * [https://shrinkray.io/]Shrinkray - One-click optimization for
       images in your Github repos
     * [https://github.com/mozilla/mozjpeg]mozjpeg - Improved JPEG
       encoder.
     * [https://github.com/tjko/jpegoptim]Jpegoptim - Utility to
       optimize/compress JPEG files.
     * [https://github.com/google/zopfli]ZopfliPNG - A command line
       program to optimize PNG images.
     * [http://www.advancemame.it/doc-advpng.html]AdvPNG - Recompress png
       files to get the smallest possible size.
     * [https://github.com/JayXon/Leanify]Leanify - Lightweight lossless
       file minifier/optimizer.
     * [http://trimage.org/]Trimage - A cross-platform tool for losslessly
       optimizing PNG and JPG files.
     * [https://web.wurfl.io/#image-engine]ImageEngine - Cloud service for
       optimizing, resizing and caching images on the fly with great
       mobile support.

Lazyloaders

     * [https://github.com/vvo/lazyload]lazyload - Lazyload images,
       iframes, widgets with a standalone JavaScript lazyloader ~1kb

Loaders

     * [https://github.com/headjs/headjs]HeadJS- The only script in your
       HEAD. for Responsive Design, Feature Detections, and Resource
       Loading.
     * [http://requirejs.org/]RequireJS - RequireJS is a JavaScript file
       and module loader. It is optimized for in-browser use, but it can
       be used in other JavaScript environments, like Rhino and Node.
     * [http://labjs.com/]Labjs - is an open-source (MIT license) project
       supported by Getify Solutions. The core purpose of LABjs is to be
       an all-purpose, on-demand JavaScript loader, capable of loading any
       JavaScript resource, from any location, into any page, at any time.
     * [https://github.com/wessman/defer.js]Defer.js - Async Everything:
       Make the meat of your pages load faster with this JS morsel.
     * [https://github.com/dieulot/instantclick]InstantClick -
       InstantClick makes following links in your website instant.
     * [https://github.com/shootaroo/jit-grunt]JIT - A JIT (Just In Time)
       plugin loader for Grunt. Load time of Grunt does not slow down even
       if there are many plugins.

Metrics Monitor

     * [https://github.com/macbre/phantomas]Phantomas - PhantomJS-based
       web performance metrics collector and monitoring tool.
     * [http://www.showslow.com/]Showslow - open source tool that helps
       monitor various website performance metrics over time. It captures
       the results of YSlow, Page Speed Insights, WebPageTest and
       dynaTrace AJAX Edition.
     * [https://github.com/jmervine/bench]Bench - Using Phantomas (a
       PhantomJS backed client performance metrics scrapper). Benchmark a
       page, store results in MongoDB and display result via the built in
       server.
     * [https://github.com/keepfast/keepfast]Keepfast - Tool to monitor
       indicators related to performance of a web page.
     * [https://gtmetrix.com/]GTmetrix - GTmetrix uses Google Page Speed
       and Yahoo! YSlow to grade your site's performance and provides
       actionable recommendations to fix these issues.
     * [http://tools.pingdom.com/fpt/]Pingdom Website Speed Test - Test
       the load time of that page, analyze it and find bottlenecks.
     * [https://www.dotcom-tools.com/website-speed-test.aspx]Dotcom-tools
       - analyze your website's speed in real browsers from 20 locations
       worldwide.
     * [http://www.webpagetest.org/]WebPageTest - Run a free website speed
       test from multiple locations around the globe using real browsers
       (IE and Chrome) and at real consumer connection speeds. You can run
       simple tests or perform advanced testing including multi-step
       transactions, video capture, content blocking and much more. Your
       results will provide rich diagnostic information including resource
       loading waterfall charts, Page Speed optimization checks and
       suggestions for improvements.
     * [https://www.sitespeed.io/documentation/]Sitespeed.io -
       Sitespeed.io is an open source tool that will check your site
       against web performance best practice rules and use the Navigation
       Timing API to collect metrics. It will create XML & HTML output of
       the result.
     * [https://github.com/stefanjudis/grunt-phantomas]Grunt-phantomas -
       Grunt plugin wrapping phantomas to measure frontend performance.
     * [https://www.npmjs.com/package/perfjankie]Perfjankie - Runtime
       Browser Performance regression suite
       ([https://github.com/asciidisco/perfjankie-test]Demo).
     * [https://www.dotcom-monitor.com/website-monitor/website-speed-monit
       oring/]BrowserView Monitoring - Continually checks web page load
       times in Internet Explorer, Chrome and Firefox from multiple points
       around the world.
     * [http://newrelic.com/browser-monitoring]New Relic Browser
       Monitoring - Monitor your browser-side applications in real time,
       with a focus on real end users' experiences.
     * [https://www.dareboost.com/]DareBoost - Real Browser Monitoring.
       Offers complete reports about web performance and quality using
       YSlow, Page Speed and numerous custom tips.

Metrics Monitor - API

     * [https://github.com/marcelduran/webpagetest-api]WebPageTest API
       Wrapper for NodeJS - WebPageTest API Wrapper is a NPM package that
       wraps WebPageTest API for NodeJS as a module and a command-line
       tool.

Minifiers - HTML

     * [https://code.google.com/p/htmlcompressor/]HTMLCompressor -
       HtmlCompressor is a small, fast and very easy to use Java library
       that minifies given HTML or XML source by removing extra
       whitespaces, comments and other unneeded characters without
       breaking the content structure. As a result page become smaller in
       size and load faster. A command-line version of the compressor is
       also available.
     * [https://github.com/cobrateam/django-htmlmin]Django-htmlmin -
       django-html in an HTML minifier for Python with full support for
       HTML 5. It supports Django, Flask and any other Python web
       framework. It also provides a command line tool that can be used
       for static websites or deployment scripts.
     * [https://github.com/kangax/html-minifier]HTMLMinifier -
       HTMLMinifier is a highly configurable, well-tested,
       Javascript-based HTML minifier, with lint-like capabilities.
     * [https://github.com/gruntjs/grunt-contrib-htmlmin]Grunt-contrib-htm
       lmin - A grunt plugin to minify HTML that uses HTMLMinifier.
     * [https://github.com/jonschlinkert/gulp-htmlmin]Gulp-htmlmin - A
       gulp plugin to minify HTML that uses HTMLMinifier.
     * [https://github.com/jney/grunt-htmlcompressor]Grunt-htmlcompressor
       - Grunt plugin for html compression, using htmlcompressor.
     * [https://github.com/stereobooster/html_minifier]HTML_minifier -
       Ruby wrapper for kangax html-minifier.
     * [https://github.com/stereobooster/html_press]HTML_press - Ruby gem
       for compressing html, that removes all whitespace junk, and leaves
       only HTML.
     * [https://github.com/koajs/html-minifier]Koa HTML Minifier -
       Middleware that minifies your HTML responses using html-minifier.
       It uses html-minifier's default options which are all turned off by
       default, so you have to set the options otherwise it's not going to
       do anything.
     * [http://kangax.github.io/html-minifier/]HTML Minifier Online - A
       HTML min tool by kangax (HTMLMinifier Creator).
     * [https://github.com/Swaagie/minimize]Minimize - Minimize is a HTML
       minifier based on the node-htmlparser,currently, HTML minifier is
       only usuable server side. Client side minification will be added in
       a future release.
     * [https://github.com/deanhume/html-minifier]Html-minifier - A simple
       Windows command line tool to minify your HTML, Razor views & Web
       Forms views

Minifiers - JS & CSS

     * [https://github.com/yui/yuicompressor]YUI Compressor - JavaScript
       compressor which, in addition to removing comments and
       white-spaces, obfuscates local variables using the smallest
       possible variable name. This obfuscation is safe, even when using
       constructs such as 'eval' or 'with' (although the compression is
       not optimal is those cases) Compared to jsmin, the average savings
       is around 20%.
     * [https://github.com/mishoo/UglifyJS2]UglifyJS2 - UglifyJS is a
       JavaScript parser, minifier, compressor or beautifier toolkit,
       written in JavaScript.
     * [https://github.com/css/csso]CSSO - CSS minimizer unlike others. In
       addition to usual minification techniques it can perform structural
       optimization of CSS files, resulting in smaller file size compared
       to other minifiers.
     * [https://github.com/stoyan/yuicompressor/blob/master/ports/js/cssmi
       n.js]CSSmin.js - cssmin.js is a JavaScript port of YUICompressor's
       CSS minifier.
     * [https://github.com/gruntjs/grunt-contrib-concat]Grunt-contrib-conc
       at - A Grunt plugin to concatenate files.
     * [https://github.com/gruntjs/grunt-contrib-uglify]Grunt-contrib-ugli
       fy - A Grunt plugin to concatenate and minify Javascript files.
     * [https://github.com/jakubpawlowicz/clean-css]Clean-css - A fast,
       efficient, and well tested CSS minifier for node.js.
     * [https://github.com/django-compressor/django-compressor]Django-comp
       ressor - Compresses linked and inline javascript or CSS into a
       single cached file.
     * [https://github.com/cyberdelia/django-pipeline]Django-pipeline -
       Pipeline is an asset packaging library for Django, providing both
       CSS and JavaScript concatenation and compression, built-in
       JavaScript template support, and optional data-URI image and font
       embedding.
     * [https://github.com/tedious/JShrink]JShrink - JShrink is a PHP
       class that minifies javascript so that it can be delivered to the
       client quicker.
     * [http://jscompress.com/]JSCompress - The most minimalistic online
       JS Compress tool.
     * [https://github.com/stoyan/cssshrink]CSSshrink - Because CSS is
       ospon the critical path to rendering pages. It must be small! Or
       else!
     * [https://github.com/JohnCashmore/grunt-cssshrink]Grunt-cssshrink -
       This is just a grunt wrapper for CSS Shrink.
     * [https://github.com/torrottum/gulp-cssshrink]Gulp-cssshrink -
       Shrinks CSS files using cssshrink for Gulp.
     * [https://github.com/stoyan/prettyugly]Prettyugly - Uglify (strip
       spaces) or prettify (add consistent spaces) CSS code.
     * [https://github.com/gruntjs/grunt-contrib-cssmin]Grunt-contrib-cssm
       in - CSS Minifier for Grunt.
     * [https://github.com/chilijung/gulp-cssmin]Gulp-cssmin - CSS
       Minifier for Gulp.
     * [https://github.com/addyosmani/grunt-uncss]Grunt-uncss - A grunt
       task for removing unused CSS from your projects.
     * [https://github.com/ben-eb/gulp-uncss]Gulp-uncss - A gulp task for
       removing unused CSS from your projects.

Miscellaneous

     * [http://socialitejs.com/]Socialite.js - Socialite provides a very
       easy way to implement and activate a plethora of social sharing
       buttons -- any time you wish. On document load, on article hover,
       on any event.
     * [https://github.com/oyvindeh/ucss]uCSS - uCSS is made for crawling
       (large) websites to find unused CSS selectors, but not remove
       unused CSS.
     * [https://github.com/jakutis/httpinvoke]HTTPinvoke- A
       no-dependencies HTTP client library for browsers and Node.js with a
       promise-based or Node.js-style callback-based API to progress
       events, text and binary file upload and download, partial response
       body, request and response headers, status code.
     * [https://github.com/addyosmani/critical]Critical - Extract & Inline
       Critical-path CSS in HTML pages (alpha).
     * [https://github.com/stoyan/csscolormin]Csscolormin - Utility that
       minifies CSS colors, example: min("white"); // minifies to "#fff".
     * [http://www.stylestats.org/]StyleStats - StyleStats is a Node.js
       library to collect CSS statistics.
     * [https://github.com/aFarkas/lazysizes]Lazysizes - High performance
       lazy loader for images (responsive and normal), iframes and
       scripts, that detects any visibility changes triggered through user
       interaction, CSS or JavaScript without configuration.
     * [http://perf-tooling.today/]Perf-Tooling - Perf Tooling is a shared
       resource to keep track of new and existent performance tools.
     * [https://github.com/addyosmani/tmi]TMI - TMI (Too Many Images) -
       discover your image weight on the web.

Generators

     * [https://github.com/jorgebastida/glue]Glue - Glue is a simple
       command line tool to generate sprites:
     * [https://github.com/pitomba/spriter]Pitomba-spriter - Spriter is a
       simple and flexible dynamic sprite generator for CSS, using Python.
       It can process CSS both synchronous and asynchronous as it provides
       classes to be used in your python code and also a watcher that
       listens to your filesystem and changes CSS and sprite as soon as a
       static is changed.
     * [https://github.com/Ensighten/grunt-spritesmith]Grunt-spritesmith -
       Grunt task for converting a set of images into a spritesheet and
       corresponding CSS variables.
     * [https://www.npmjs.com/package/grunt-sprite-css-replace]Grunt-sprit
       e-css-replace - Grunt task that generates a sprite from images
       referenced in a stylesheet and then updates the references with the
       new sprite image and positions.
     * [https://www.npmjs.com/package/grunt-svg-sprite]Grunt-svg-sprite -
       SVG sprites & stacks galore -- Grunt plugin wrapping around
       svg-sprite that reads in a bunch of SVG files, optimizes them and
       creates SVG sprites and CSS resources in various flavours.
     * [https://github.com/aslansky/gulp-sprite]Gulp-sprite - gulp task
       for creating an image sprite and the corresponding stylesheets for
       Gulp.
     * [https://github.com/shakyShane/gulp-svg-sprites]Gulp-svg-sprites -
       gulp task for creating svg sprites.
     * [https://github.com/kajyr/SvgToCSS]SvgToCSS - Optimizes and renders
       SVG files in css / sass sprites.
     * [https://github.com/assetgraph/assetgraph-sprite]Assetgraph-sprite
       - Assetgraph transform for auto generating sprites based on the CSS
       dependency graph.
     * [http://www.spritecow.com/]Sprite Cow - Sprite Cow helps you get
       the background-position, width and height of sprites within a
       spritesheet as a nice bit of copyable css.
     * [http://spriteme.org/]Spriteme - Create, integrate, and maintain
       CSS sprites with ease.
     * [http://zerosprites.com/]ZeroSprites - ZeroSprites is a CSS sprites
       generator aimed at area minimization using algorithms used in the
       field of VLSI floorplanning.
     * [http://css.spritegen.com/]CSS Sprite Generator - CSS sprites allow
       you to combine multiple images into a single file.
     * [https://github.com/sprity/sprity]Sprity - A modular image sprite
       generator with a lot of features: supports retina sprites, supports
       different output formats, generates sprites and proper style files
       out of a directory of images, etc...
     * [https://github.com/jakesgordon/sprite-factory]Sprite Factory - The
       sprite factory is a ruby library that can be used to generate CSS
       sprites. It combines individual image files from a directory into a
       single unified sprite image and creates an appropriate CSS
       stylesheet for use in your web application.

SVG

     * [https://github.com/svg/svgo]SVGO - SVGO is a Nodejs-based tool for
       optimizing SVG vector graphics files.
     * [https://jakearchibald.github.io/svgomg/]SVG OMG - SVGOMG is SVGO's
       Missing GUI, aiming to expose the majority, if not all the
       configuration options of SVGO.
     * [https://github.com/sindresorhus/grunt-svgmin]Grunt-svgmin - Minify
       SVG using SVGO for Grunt.
     * [https://www.npmjs.com/package/gulp-svgmin]Gulp-svgmin - Minify SVG
       with SVGO for Gulp.
     * [http://www.codedread.com/scour/]Scour - Scour is an open-source
       Python script that aggressively cleans SVG files, removing a lot of
       'cruft' that certain tools or authors embed into their documents.
     * [https://github.com/RazrFalcon/SVGCleaner]SVG Cleaner - SVG Cleaner
       could help you to clean up your SVG files from unnecessary data. It
       has a lot of options for cleanup and optimization, works in batch
       mode, provides threaded processing on the multicore processors.

Web Components

     * [https://github.com/Polymer/vulcanize]Vulcanize - Concatenate a set
       of Web Components into one file, a Build tool for HTMLImports and
       Web Components.
     * [https://github.com/Polymer/grunt-vulcanize]Grunt-vulcanize - Grunt
       task for Polymer's Vulcanize.
     * [https://github.com/sindresorhus/gulp-vulcanize]Gulp-vulcanize -
       Concatenate a set of Web Components into one file that use
       Vulcanize.

Web server Benchmarks

     * [https://github.com/httperf/httperf]HTTPerf - httperf is a tool for
       measuring web server performance. It provides a flexible facility
       for generating various HTTP workloads and for measuring server
       performance.
     * [http://jmeter.apache.org/download_jmeter.cgi]Apache JMeter - Open
       source load testing tool: It is a Java platform application.
     * [http://locust.io/]Locust - An open source load testing tool.
       Define user behaviour with Python code, and swarm your system with
       millions of simultaneous users.
     * [https://github.com/igrigorik/autoperf]Autoperf - Autoperf is a
       ruby driver for httperf, designed to help you automate load and
       performance testing of any web application - for a single end
       point, or through log replay.
     * [https://github.com/jmervine/httperfrb]HTTPerf.rb - Simple Ruby
       interface for httperf, written in Ruby.
     * [https://github.com/jmervine/php-httperf]PHP-httperf - PHP Port of
       HTTPerf.rb.
     * [https://github.com/jmervine/httperfjs]HTTPerf.js - JS Port of
       HTTPerf.rb.
     * [https://github.com/jmervine/httperfpy]HTTPerf.py - Python Port of
       HTTPerf.rb.
     * [https://github.com/jmervine/gohttperf]Gohttperf - Go Port of
       HTTPerf.rb.
     * [https://github.com/wg/wrk]wrk - A HTTP benchmarking tool (with
       optional Lua scripting for request generation, response processing,
       and custom reporting)
     * [https://github.com/newsapps/beeswithmachineguns]beeswithmachinegun
       s - A utility for arming (creating) many bees (micro EC2 instances)
       to attack (load test) targets (web applications).

Web server Modules

     * [https://developers.google.com/speed/pagespeed/module/download]Page
       Speed Module - PageSpeed speeds up your site and reduces page load
       time. This open-source web server module automatically applies web
       performance best practices to pages and associated assets (CSS,
       JavaScript, images) without requiring that you modify your existing
       content or workflow. PageSpeed is available as a module for Apache
       2.x and Nginx 1.x.
     * [https://github.com/igrigorik/webp-detect]WebP-detect - WebP with
       Accept negotiation.

Specs

     * [http://www.w3.org/2010/webperf/]Web Performance Working Group -
       The mission of the Web Performance Working Group, part of the Rich
       Web Client Activity, is to provide methods to measure aspects of
       application performance of user agent features and APIs.
     * [http://www.w3.org/TR/page-visibility/]Page Visibility - This
       specification defines a means for site developers to
       programmatically determine the current visibility state of the page
       in order to develop power and CPU efficient web applications.
     * [https://w3c.github.io/navigation-timing/]Navigation Timing - This
       specification defines a unified interface to store and retrieve
       high resolution performance metric data related to the navigation
       of a document.
     * [http://www.w3.org/TR/resource-timing/]Resource Timing - This
       specification defines an interface for web applications to access
       the complete timing information for resources in a document.
     * [http://www.w3.org/TR/user-timing/]User Timing - This specification
       defines an interface to help web developers measure the performance
       of their applications by giving them access to high precision
       timestamps.
     * [http://www.w3.org/TR/performance-timeline/]Performance Timeline -
       This specification defines an unified interface to store and
       retrieve performance metric data. This specification does not cover
       individual performance metric interfaces.
     * [https://drafts.csswg.org/css-will-change/]CSS will-change - This
       specification defines the will-change CSS property which allows an
       author to declare ahead-of-time what properties are likely to
       change in the future, so the UA can set up the appropriate
       optimizations some time before they're needed. This way, when the
       actual change happens, the page updates in a snappy manner.
     * [http://www.w3.org/TR/resource-hints/]Resource Hints - This
       specification defines the dns-prefetch, preconnect, prefetch, and
       prerender relationships of the HTML Link Element (<link>). These
       primitives enable the developer, and the server generating or
       delivering the resources, to assist the user agent in the decision
       process of which origins it should connect to, and which resources
       it should fetch and preprocess to improve page performance.

Stats

     * [http://httparchive.org/index.php]HTTP Archive - It's a permanent
       repository of web performance information such as size of pages,
       failed requests, and technologies utilized. This performance
       information allows us to see trends in how the Web is built and
       provides a common data set from which to conduct web performance
       research.

Other Awesome Lists

     * [https://github.com/bayandin/awesome-awesomeness]bayandin/awesome-a
       wesomeness.
     * [https://github.com/sindresorhus/awesome]sindresorhus/awesome.

Contributing

   For contributing,
   [https://github.com/davidsonfellipe/awesome-wpo/issues]open an issue
   and/or a [https://github.com/davidsonfellipe/awesome-wpo/pulls]pull
   request.

     * © 2018 GitHub, Inc.
     * [https://github.com/site/terms]Terms
     * [https://github.com/site/privacy]Privacy
     * [https://help.github.com/articles/github-security/]Security
     * [https://status.github.com/]Status
     * [https://help.github.com/]Help

   [https://github.com/]
     * [https://github.com/contact]Contact GitHub
     * [https://developer.github.com/]API
     * [https://training.github.com/]Training
     * [https://shop.github.com/]Shop
     * [https://blog.github.com/]Blog
     * [https://github.com/about]About

   (BUTTON) You can't perform that action at this time.

   You signed in with another tab or window.
   Reloa
   d to refresh your session. You signed out in another tab or window.
   Reloa
   d to refresh your session.

   (BUTTON)

   Press h to open a hovercard with more details.
