   #GitHub
   [https://github.com/ligurio/awesome-software-quality/commits/master.ato
   m]Recent Commits to awesome-software-quality:master

   Skip to content
   [https://github.com/]
     * Features
     * Explore
     * Pricing

   This repository
   ____________________
   [file://localhost/login?return_to=%2Fligurio%2Fawesome-software-quality
   ]Sign in or Sign up

     * Watch
       168
     * [file://localhost/login?return_to=%2Fligurio%2Fawesome-software-qua
       lity]Star
       1,063
     * Fork
       239

awesome-software-quality

   Issues 0
   Projects
   0 Insights
   (BUTTON) Dismiss

Join GitHub today

   GitHub is home to over 20 million developers working together to host
   and review code, manage projects, and build software together.

   Sign up
   List of free software testing and verification resources
   quality-assurance
   courses
   awesome
   tla
   model-checking
   2
       72 commits
     * 1
       branch
     * 0
       releases
     * [file://localhost/ligurio/awesome-software-quality/graphs/contribut
       ors]Fetching contributors
     * [file://localhost/ligurio/awesome-software-quality/blob/master/LICE
       NSE]Unlicense

   Clone or download

Clone with HTTPS [https://help.github.com/articles/which-remote-url-should-i-use]

   Use Git or checkout with SVN using the web URL.
   https://github.com/l
   D
   ownload ZIP

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching Xcode...

   If nothing happens, [https://developer.apple.com/xcode/]download Xcode
   and try again.

   (BUTTON) Go back

Launching Visual Studio...

   If nothing happens, [https://visualstudio.github.com/]download the
   GitHub extension for Visual Studio and try again.

   (BUTTON) Go back
   Find
   file
   (BUTTON) Branch: master
   Switch branches/tags
   ____________________
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-softw
       are-quality]Branches
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-softw
       are-quality]Tags

   master
   Nothing to show
   Nothing to show
   (BUTTON) New pull request
   Fetching latest commit...
   Cannot retrieve the latest commit at this time.
   Permalink
   Failed to load latest commit information.
   [file://localhost/ligurio/awesome-software-quality/blob/master/.travis.
   yml].travis.yml
   [file://localhost/ligurio/awesome-software-quality/commit/1f3dc462d4550
   9e0db212002bd902fafad19258e]add vimeos videos to wl Nov 30, 2017
   
   LICENSE
   [file://localhost/ligurio/awesome-software-quality/commit/efd016902a0b6
   86916ad216edd0f21a570a774b2]first version May 12, 2014
   [file://localhost/ligurio/awesome-software-quality/blob/master/README.m
   d]README.md
   [file://localhost/ligurio/awesome-software-quality/commit/c233309bc519d
   1cefd941f9e14925bf5d654ad72]Formal Methods of Software Design Apr 6,
   2018
   cheatsheets.md
   Update cheatsheets.md Nov 16, 2017

README.md

List of Free Software Testing Resources

   [https://travis-ci.org/ligurio/awesome-software-quality]Build Status
   [https://github.com/sindresorhus/awesome]Awesome

Intro

   There is a list of [https://github.com/vhf/free-programming-books]free
   programming ebooks. And I have decided to create a similar list with
   books, courses and podcasts about software quality.

   [https://github.com/ligurio/awesome-software-quality/subscription]Subsc
   ribe to receive notificatons.

Testimonials

     * Alexander Todorov (Open source QA, Senior QA engineer at Red Hat):

     There's
     [http://atodorov.org/blog/2015/05/20/free-software-testing-books/]a
     huge list of free books on the topic of software testing. This will
     definitely be my summer reading list. I hope you find it helpful.

     * [https://www.cambridge.org/core/journals/powder-diffraction/article
       /why-scientists-should-learn-to-program-in-python/EB88FFCC738499876
       8AFDAE219EF6EFA/core-reader]Cambridge University
     * [https://sqa.stackexchange.com/posts/22640/revisions]Stack Exchange
     * [https://www.utest.com/status/11754]UTest:

     Just found this gold and feel like I have to share it with the best
     testing community: Free Books about Software Testing!

Index

     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-softw
       are-quality#books]Books
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-softw
       are-quality#courses]Courses
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-softw
       are-quality#podcasts]Podcasts
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-softw
       are-quality#conferences]Conferences
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-softw
       are-quality#workshops-and-interactive-learning-tools]Workshops and
       interactive learning tools
     * Learned lessons
     * Awesome lists

Books

In English

Software Testing Theory

     * [https://info.thoughtworks.com/ebook-agile-software-testing]Perspec
       tives on Agile Software Testing
     * [https://leanpub.com/testingindevops]A Practical Guide to Testing
       in DevOps
     * [http://ilyasergey.net/pnp/]Programs and Proofs. Mechanizing
       Mathematics with Dependent Types. - Ilya Sergey @ilyasergey
     * [https://github.com/DinisCruz/Book_Software_Quality/tree/master/con
       tent]Measure Software Quality using Application Security (WIP) -
       Dinis Cruz
     * [https://leanpub.com/TheAWord]The "A" Word - Alan Page
     * [http://mixmastamyk.bitbucket.org/pro_soft_dev/]Professional
       Software Development (Chapter: "5. Software Quality") - Mike G.
       Miller
     * [https://testingguidance.codeplex.com/]Acceptance Test Engineering
       Guide, Vol. I - RC1
     * [http://www.betoryuu.com/images/tour/items/file/testingPrimer.pdf]A
       Software Testing Primer (PDF)
     * [http://www.exampler.com/testing-com/writings/classic/mistakes.pdf]
       Classic Testing Mistakes (PDF) - Brian Marick
     * [http://www.bullseye.com/coverage.html]Code Coverage Analysis -
       Steve Cornett
     * [http://www.softwaretestinghelp.com/practical-software-testing-new-
       free-ebook-download/]Practical Software Testing - STH in
       association with Chindam Damodar
     * [http://www.kaner.com/pdfs/QAIExploring.pdf]A Tutorial in
       Exploratory Testing (PDF)
     * [https://leanpub.com/essential_acceptance_testing/c/HgPDBsxyYT6q]Es
       sential Acceptance Testing
     * [https://www.theseus.fi/bitstream/handle/10024/46873/Lepisto_Juho.p
       df?sequence=1]Embedded Software Testing Methods Juho Lepistö
     * [http://my.safaribooksonline.com/book/software-engineering-and-deve
       lopment/software-testing/9788131707951]Foundations of Software
       Testing: Fundamental Algorithms and Techniques Aditya P. Mathur
     * [http://ebooks.allfree-stuff.com/eBooks_down/Software%20Testing/Int
       roduction%20to%20Software%20Testing.pdf]Introduction to software
       testing (PDF)
     * [http://www.softwaretestinghelp.com/manual-testing-help-ebook-free-
       download/]Manual Testing Help
     * [http://enjoytesting.files.wordpress.com/2013/10/mobile_testing_rea
       dy_reckoner.pdf]Mobile Testing: Ready Reckoner (PDF) - Ajay
       Balamurugadas, Sundaresan Krishnaswami
     * [https://perftestingguide.codeplex.com/]Performance Testing
       Guidance
     * [https://github.com/regehr/random-testing-book]Random testing book
       DRAFT
     * [https://github.com/laboon/ebook]Software Testing: A Comprehensive
       Approach - Bill Laboon
     * [http://www.tutorialspoint.com/software_testing/index.htm]Software
       Testing Tutorial
     * [http://www.tutorialspoint.com/software_testing_dictionary/index.ht
       m]Software Testing Dictionary
     * [http://www.agitar.com/downloads/TheWayOfTestivus.pdf]The Way of
       Testivus
     * [http://www.thetesteye.com/papers/TheLittleBlackBookOnTestDesign.pd
       f]The Littleblack Book On Test Design (PDF)
     * [http://core.ecu.edu/STRG/materials/uTest_eBook_Mobile_Testing.pdf]
       The Essential Guide to Mobile App Testing (PDF)
     * [http://enjoytesting.files.wordpress.com/2013/10/ui_and_ux_testing_
       ready_reckoner.pdf]UI and UX Testing: Ready Reckoner (PDF) - Ajay
       Balamurugadas
     * [http://enjoytesting.files.wordpress.com/2013/10/whatif.pdf]What
       If: A collection of tips from a software tester (PDF) - Ajay
       Balamurugadas
     * [http://enjoytesting.files.wordpress.com/2013/10/50tipstowintesting
       contests.pdf]What If: 50+ tips to win testing contests (PDF) - Ajay
       Balamurugadas
     * [http://enjoytesting.files.wordpress.com/2013/10/50-tips-to-boost-y
       our-productivity.pdf]What If: 50+ tips to boost your productivity
       (PDF) - Ajay Balamurugadas
     * [http://enjoytesting.files.wordpress.com/2013/10/50-tips-to-improve
       -tester-programmer-relationship.pdf]What If: 50+ tips to improve
       tester-programmer relationship (PDF) - Ajay Balamurugadas
     * [http://www.cse.cuhk.edu.hk/%7Elyu/book/reliability/]Handbook of
       Software Reliability Engineering
     * [https://leanpub.com/mutationtesting]Mutation Testing: Better Code
       by Making Bugs - Filip van Laenen
     * [https://jasonpolites.github.io/tao-of-testing/index-1.1.html]The
       Tao of Testing. A Field Manual for Software Engineers. - Jason
       Polites
     * [https://huddle.eurostarsoftwaretesting.com/wp-content/uploads/2017
       /09/Jerry-Weinberg-eBook-final-compressed-contents-page.pdf]Observi
       ng and Reasoning About Errors
     * [http://thetesteye.com/papers/TheLittleBlackBookOnTestDesign.pdf]Th
       e Little Black Book On Test Design -- Rikard Endgren

Standards In software Testing

     * [http://www.testingstandards.co.uk/]Testing Standards Working Party
     * [http://softwaretestingstandard.org/]The International Software
       Testing Standard
     * [http://www.testingstandards.co.uk/Component%20Testing.pdf]Standard
       for Software Component Testing (PDF)
     * [https://dou.ua/lenta/articles/software-test-formats/]Everything
       You Need to Know About Software Test Formats (in Russian)
     * [http://www.system-safety.org/Documents/NASA-GB-8719.13.pdf]Softwar
       e Testing Standards in NASA
     * [http://ecss.nl/standard/ecss-q-st-80c-rev-1-software-product-assur
       ance-15-february-2017/]ECSS-Q-ST-80C Rev.1 - Software product
       assurance

Testing of Free and OpenSource Software

     * [http://www.cyrius.com/publications/michlmayr-phd.pdf]Quality
       Improvement in Volunteer Free and Open Source Software Project
       (PDF)

Testing by different programming languages

     * [http://refcardz.dzone.com/refcardz/phpunit-php-test-driven]PHPUnit
       PHP Test-Driven Development - Automated Tools to Improve Your PHP
       Code Quality
     * [http://www.giorgiosironi.com/2009/12/practical-php-testing-is-here
       .html]Practical PHP testing
     * [https://github.com/zkessin/testing-erlang-book]Testing Erlang
     * [https://github.com/dhinojosa/testing-in-scala-book]Testing in
       Scala
     * [https://github.com/grzesiek-galezowski/tdd-ebook]Test-Driven
       Development - Extensive Tutorial - Grzegorz Gal/ezowski
     * [https://github.com/roblevintennis/Testing-and-Debugging-JavaScript
       ]Testing and Debugging JavaScript
     * [https://leanpub.com/watirbook/read]Web Application Testing in Ruby
       Zeljko Filipin

Testing Tools

     * [http://www.vdalabs.com/tools/The_Evolving_Art_of_Fuzzing.pdf]The
       Evolving Art of Fuzzing (PDF) - Jared DeMott
     * [http://www.lausd.net/istem/2know_files/Software_Manual.pdf]AccelTe
       st (PDF)
     * [http://www2.smartbear.com/download-mqi-inbound-testcomplete-functi
       onal-testing-top-5-ebook-blog.html]A Step-by-Step Guide to
       Functional Testing with TestComplete
     * [http://www.tutorialspoint.com/qc/index.htm]HP Quality Center
       Tutorial
     * [http://www.tutorialspoint.com/qtp/index.htm]HP QuickTest
       Professional Tutorial
     * [http://download.red-gate.com/ebooks/DotNet/Perf_Test_and_opt_eBook
       .zip].NET Performance Testing and Optimization - The Complete Guide
       (zip) - RedGate, By Paul Glavich and Chris Farrell
     * [https://leanpub.com/manualToAutomatedWithSeleniumIDEAndSahi]Record
       -Playback Test Automation: Sahi & Selenium IDE
     * [http://refcardz.dzone.com/refcardz/getting-started-selenium-20#ref
       card-download-social-buttons-display]Selenium 2.0 Using the
       WebDriver API to Create Robust User Acceptance Tests
     * [http://www2.smartbear.com/download-mqi-nbound-soapui-top-5-blast-e
       book-blog.html]SoapUI 101: Beginner's Guide to Functional Testing
     * [http://www.tutorialspoint.com/testng/index.htm]TestNG Tutorial
     * [http://www.tutorialspoint.com/junit/index.htm]JUnit Tutorial
     * [http://propertesting.com/]PropEr Testing - Fred Hebert
     * [https://social.technet.microsoft.com/wiki/contents/articles/11608.
       e-book-gallery-for-microsoft-technologies-en.aspx#Better_Unit_Testi
       ng_with_Microsoft_Fakes]Better Unit Testing with Microsoft Fakes
     * [https://social.technet.microsoft.com/wiki/contents/articles/11608.
       e-book-gallery-for-microsoft-technologies-en.aspx#Testing_for_Conti
       nuous_Delivery]Testing for Continuous Delivery with Visual Studio
       2012

Formal methods

     * [https://learntla.com/]Learn TLA+ - Hillel Wayne @hwayne
     * [http://lamport.azurewebsites.net/tla/book.html]Specifying Systems
       - Leslie Lamport
     * [http://lamport.azurewebsites.net/tla/hyperbook.html]The TLA+
       Hyperbook - Leslie Lamport
     * [https://www.microsoft.com/en-us/research/people/lamport/]Books and
       papers about TLA+ and formal verification by Leslie Lamport
     * [http://alloy.mit.edu/alloy/documentation.html]Alloy Documentation
       - Daniel Jackson
     * [http://spinroot.com/spin/Man/]Introduction to Spin - Multiple
       Authors
     * Software Foundations:
       [https://www.cis.upenn.edu/%7Ebcpierce/sf/sf-4.0/]4.0,
       [https://www.cis.upenn.edu/%7Ebcpierce/sf/current/index.html]curren
       t, [https://softwarefoundations.cis.upenn.edu/draft/]draft ,
       [https://github.com/carliros/software-foundations-book]epub -
       Benjamin C. Pierce & Co
     * [http://www.cs.princeton.edu/%7Eappel/vfa/]Verified Functional
       Algorithms - Andrew W. Appel
     * [https://www.cl.cam.ac.uk/teaching/1998/FoundsCS/]Foundations of
       Computer Science - Dr Larry Paulson
     * [https://pdfs.semanticscholar.org/f126/9591359fddc20f95da10c7bd4c05
       4080b447.pdf]Principles of Model Checking - Christel Baier,
       Joost-Pieter Katoen
     * [http://adam.chlipala.net/cpdt/]Certified Programming with
       Dependent Types - Adam Chlipala @achlipala
     * [http://adam.chlipala.net/frap/]Formal Reasoning About Programs -
       Adam Chlipala @achlipala
     * [http://concrete-semantics.org/]Concrete Semantics - Tobias Nipkow
       and Gerwin Klein @lsf37
     * [https://www.cl.cam.ac.uk/%7Elp15/MLbook/pub-details.html]ML for
       the Working Programmer, 2nd Edition - Lawrence C. Paulson
     * [http://www.paultaylor.eu/stable/Proofs+Types.html]Proofs and Types
       - Jean-Yves Girard, Yves Lafont and Paul Taylor
     * [http://www.ias.ac.in/article/fulltext/sadh/034/01/0003-0025]Proof
       assistants: History, ideas and future - H. Geuvers
     * [http://cdn.worldcolleges.info/sites/default/files/x20v_1991.pdf]De
       sign and validation of computer protocols - Gerard J. Holzmann
     * [http://logic.stanford.edu/intrologic/secondary/index.html]Introduc
       tion to Logic - Michael Genesereth, Eric Kao (Stanford University)
     * [https://www.fecundity.com/codex/forallx.pdf]An Introduction to
       Formal Logic - P.D. Magnus (University at Albany)
     * [http://euclid.trentu.ca/math/sb/pcml/pcml-16.pdf]A Problem Course
       in Mathematical Logic - Stefan Bilaniuk (Trent University)
     * [http://homepages.uc.edu/%7Emartinj/Symbolic_Logic/341%20Syllabus,%
       20Textbook,%20Handouts,%20Notes/LPL%20textbook.pdf]Language, Proof,
       and Logic - Jon Barwise, John Etchemendy
     * [http://www.mathematik.uni-muenchen.de/%7Eschwicht/lectures/logic/w
       s03/ml.pdf]Mathematical Logic - Helmut Schwichtenberg
     * [http://www.personal.psu.edu/t20/notes/logic.pdf]Mathematical Logic
       - Stephen G. Simpson (Pennsylvania State University)
     * [http://maude.sip.ucm.es/%7Emiguelpt/papers/flogic.pdf]Formal Logic
       - Miguel Palomino
     * [https://github.com/paulmckrcu/perfbook/]Is Parallel Programming
       Hard, And, If So, What Can You Do About It? (chapters "Validation"
       and "Formal verification") - Paul E. McKenney @paulmckrcu
     * [http://www.freetechbooks.com/index.php/formal-methods-f28.html]Mor
       e books...
     * [https://www.cs.utoronto.ca/%7Ehehner/FMSD/]Formal Methods of
       Software Design

In Russian

Upravlenie proektami

     * [http://www.stratoplan.ru/free/mbb/]CHernaya kniga menedzhera
       ([http://labs.stratoplan.ru/wmbook-03-01/black_book.pdf]pdf,
       [http://labs.stratoplan.ru/wmbook-03-01/black_book.epub]epub,
       [http://labs.stratoplan.ru/wmbook-03-01/black_book.mobi]mobi) Slava
       Pankratov
     * [http://labs.stratoplan.ru/wmbook-03-01/]Belaya knizhnaya polka
       menedzhera
       ([http://labs.stratoplan.ru/wmbook-03-01/wmbook.epub]epub,
       [http://labs.stratoplan.ru/wmbook-03-01/wmbook.mobi]mobi,
       [http://labs.stratoplan.ru/wmbook-03-01/wmbook.zip]zip)
     * Kak stat' menedzherom
       ([http://labs.stratoplan.ru/wmbook-03-01/it_manager.pdf]pdf,
       [http://labs.stratoplan.ru/wmbook-03-01/it_manager.epub]epub,
       [http://labs.stratoplan.ru/wmbook-03-01/it_manager.mobi]mobi) -
       Slava Pankratov, Aleksandr Orlov
     * [https://www.intercom.com/books/product-management]It starts with a
       great product

Testirovanie PO

     * [https://github.com/risik/tdd-book]Test-Driven Development in
       Practice - Sergej Borisov
     * [http://svyatoslav.biz/software_testing_book/]Testirovanie
       programmnogo obespecheniya. Bazovyj kurs. - Svyatoslav Kulikov
     * [https://gist.github.com/ligurio/6efa8576e175fa0fb5d04cfe5c85a2a5]V
       sio, chto vam nuzhno znat' o formatah otchiotov v testirovanii PO -
       Sergej Bronnikov
     * [https://uxcrowd.ru/file/guide.pdf]Rukovodstvo po testirovaniyu
       pol'zovatel'skogo opyta dlya sajtov, mobil'nyh prilozhenij i
       prototipov
     * [https://alpaev.com/testautomation/]Avtomatizaciya testirovaniya ot
       «A» do «Y» - Gennadiy Alpaev
     * [https://alpaev.com/silktest/]Uchebnik po SilkTest - Gennadiy
       Alpaev
     * [https://alpaev.com/testcomplete/]Uchebnik po TestComplete -
       Gennadiy Alpaev

Formal'nye metody

     * [http://intsys.msu.ru/staff/mironov/modelchk.pdf]Verifikaciya
       programm metodom Model Checking - A.M.Mironov
     * [http://is.ifmo.ru/verification/]http://is.ifmo.ru/verification/
     * [http://dcn.icc.spbstu.ru/%7Ekarpov/%D0%9A%D1%83%D1%80%D1%81%20%D0%
       92%D0%B5%D1%80%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F/Kypc
       ovaja/SPIN%20Manual.pdf]Vvedenie v yazyk Promela i sistemu
       kompleksnoj verifikacii Spin - I.V. SHoshmina, YU.G. Karpov
     * [http://panda.ispras.ru/%7Ekuliamin/mbt-course.html]Testirovanie na
       osnove modelej - V.V. Kulyamin
     * [http://www.mi.ras.ru/%7Esk/lehre/coq/coq_pract.pdf]Praktikum po
       matematicheskoj logike. Coq.

Courses

In English

     * [https://www.edx.org/course/software-engineering-introduction-ubcx-
       softeng1x]Software Engineering: Introduction
     * [https://www.udacity.com/course/software-debugging--cs259]Software
       Debugging
     * [https://www.udacity.com/course/software-analysis-testing--ud333]So
       ftware Analysis & Testing
     * [https://thoughtbot.com/upcase/fundamentals-of-tdd]Fundamentals of
       TDD
     * [http://podcasts.ox.ac.uk/series/critical-reasoning-beginners]Criti
       cal Reasoning for Beginners
     * [https://ru.coursera.org/learn/critical-reasoning]Reasoning Across
       the Disciplines
     * [https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iDze6fOp
       3qofgyjJVUioedA]Discrete Mathematics and Probability Theory
     * [https://www.youtube.com/playlist?list=PL2EB5662A0D455A81&feature=p
       lcp]Mathematical Logic
     * [https://ocw.mit.edu/courses/engineering-systems-division/esd-932-e
       ngineering-ethics-spring-2006/audio-lectures/]Engineering Ethics
     * [https://itunes.apple.com/us/course/engineering-ethics/id1039496124
       ?ign-mpt=uo%3D8]Engineering Ethics
     * Software Development Process:
       [https://www.youtube.com/playlist?list=PLAwxTw4SYaPkNAtqsKcFkUGpf4j
       67NBaz]Part 1,
       [https://www.youtube.com/playlist?list=PLAwxTw4SYaPm8PAGH7ov2Bj-nG4
       sXgCtJ]Part 2,
       [https://www.youtube.com/playlist?list=PLAwxTw4SYaPkoQFThzsc9e7Fe3Q
       V_KJCs]Part 3

Software Testing

     * [http://www.testingeducation.org/BBST/]Black Box Software Testing
       course - Cem Kaner, J.D. Ph.D.
     * [http://nptel.ac.in/courses/106105150/]Software Testing
     * [http://nptel.ac.in/courses/117106112/]Embedded Software Testing
     * [https://www.edx.org/course/software-testing-fundamentals-usmx-univ
       ersity-maryland-university-stv1-1x]Software Testing Fundamentals
     * [https://www.udacity.com/course/software-testing--cs258]Software
       Testing Methods
     * [https://github.com/TelerikAcademy/QA-Academy]QA Academy
     * [https://github.com/HackBulgaria/QA-and-Automation-101]QA and
       Automation course
     * [https://www.edx.org/micromasters/software-testing-verification]Sof
       tware Testing and Verification
     * [https://alison.com/course/introduction-to-software-testing]Introdu
       ction to Software Testing
     * [https://alison.com/course/software-testing-black-box-strategies-an
       d-white-box-testing]Software Testing - Black-box Strategies and
       White-box Testing
     * [https://alison.com/course/diploma-in-software-testing]Diploma in
       Software Testing
     * [https://alison.com/course/software-testing-testing-levels-and-obje
       ct-oriented-program-testing]Software Testing - Testing Levels and
       Object-Oriented Program Testing
     * [https://alison.com/course/software-testing-condition-coverage-and-
       mutation-testing-strategies]Software Testing - Condition Coverage
       and Mutation Testing Strategies
     * [https://www.youtube.com/playlist?list=PLDC2A0C8D2EC934C7]Software
       Testing Training
     * [https://www.youtube.com/playlist?list=PL2CA3A709452D4E27]Quality
       Center Training
     * [https://www.youtube.com/playlist?list=PLF20D996D82993E79]QTP
       Training
     * [https://www.guru99.com/selenium-tutorial.html]Selenium Tutorials
     * [https://thefriendlytester.co.uk/selenium/course/]Selenium
       WebDriver Course

Fuzz testing

     * [https://vimeo.com/88662183]Intro: Unknown vulnerability management
       and discovery using fuzzing
     * [https://vimeo.com/88676857]Part 1: What are unknown
       vulnerabilities and why should I care
     * [https://vimeo.com/89234167]Part 2: What is fuzz testing, and where
       does it fit in the world of software?
     * [https://vimeo.com/89974203]Part 3: How and why fuzz testing, and
       managing your unknown vulnerabilities saves money
     * [https://vimeo.com/90074270]Part 4: Fuzz testing techniques:
       unfuzzing the fuzzing

Software Testing Management

     * [https://www.edx.org/course/software-testing-management-usmx-univer
       sity-maryland-university-stv1-2x]Software Testing Management

User Testing

     * [https://ru.coursera.org/learn/ui-testing/lecture/aal6p/introductio
       n-to-user-testing]Introduction to User Testing

Security Testing

     * [https://ru.coursera.org/learn/software-security]Software security

Performance Testing

     * [https://www.youtube.com/playlist?list=PLD2AE32F507F10481&feature=p
       lcp]Performance Engineering of Software Systems
     * [https://www.youtube.com/playlist?list=PLFB7DB42D42A7C31C]LoadRunne
       r Tutorials
     * [http://www.cs.wustl.edu/%7Ejain/cse567-06/index.html]Computer
       Systems Analysis

Formal Software Verification

     * [http://www.macs.hw.ac.uk/%7Egabbay/F28FS/]Formal Specification
     * [https://www.edx.org/course/formal-software-verification-usmx-umuc-
       stv1-3x]Formal Software Verification and
       [https://www.edx.org/course/formal-software-verification-usmx-unive
       rsity-maryland-university-stv1-3x]Formal Software Verification
       (previous page of the course)
     * [https://www.cs.uoregon.edu/research/summerschool/summer12/curricul
       um.html]Logic, Languages, Compilation, and Verification
       ([https://www.youtube.com/user/nrolland/playlists]Youtube)
     * [http://compsciclub.ru/en/courses/theoremproving/2013-autumn/]A
       survey of automated theorem proving
     * [http://www.cse.chalmers.se/research/group/logic/Types/tutorials.ht
       ml]Tutorials and advanced lectures
     * [http://www.cse.chalmers.se/research/group/logic/Types/index.html]T
       ypes Project
     * [https://itunes.apple.com/us/itunes-u/csci-e-207-introduction-to/id
       429428100?ign-mpt=uo%3D8]Introduction to Formal Systems and
       Computation
     * [https://cse.msu.edu/%7Ecse814/]CSE 814 Formal Methods in Software
       Engineering (slides)

Coq

     * [https://cel.archives-ouvertes.fr/file/index/docid/72365/filename/c
       oq-hurry.pdf]Coq in a Hurry
     * [https://www.cis.upenn.edu/%7Errand/popl_2016/]Programs and Proofs
       in the Coq Proof Assistant
     * [https://www.cis.upenn.edu/%7Errand/cufp_2015/]An Introduction to
       the Coq Proof Assistant
     * [https://video.ias.edu/univalent/appel]Introduction to the Coq
       Proof Assistant
     * [https://www.youtube.com/playlist?list=PLovJjGVqXXf3RgVdCXH96pPwSjF
       LDhSri]Coq Intensive - DeepSpec Summer School
     * [http://adam.chlipala.net/itp/]Interactive Computer Theorem Proving
     * [https://www.youtube.com/playlist?list=PLDD40A96C2ED54E99]Coq
       tutorials
     * [http://www.cs.ru.nl/%7Efreek/courses/tt-2011/]Type Theory and Coq
     * [http://www.cs.vu.nl//%7Ejbe248/lv2017/]Logical Verification
     * [https://www.di.ens.fr/%7Ezappa/teaching/coq/ecole10/]Modelling and
       verifying algorithms in Coq: an introduction
     * [https://frap.csail.mit.edu/main]Formal Reasoning About Programs
     * [https://www.youtube.com/watch?v=KKrD4JcfW90&list=PLGCr8P_YncjUT7gX
       UVJWSoefQ40gTOz89]Software foundations in Coq 0.1 - Benjamin Pierce
     * [https://www.youtube.com/watch?v=-UdPqZTqExM&list=PLGCr8P_YncjUX7yH
       chN7KSS83KXMHmC6e]Compiler Certification -- Xavier Leroy

Isabelle/HOL

     * [https://www.cse.unsw.edu.au/%7Ecs4161/16s2/]Advanced Topics in
       Software Verification
     * [https://www.cse.unsw.edu.au/%7Ekleing/teaching/thprv-04/index.html
       ]Theorem Proving - Principles, Techniques, Applications

TLA+

     * [http://lamport.azurewebsites.net/video/videos.html]The TLA+ Video
       Course
     * [https://github.com/tlaplus/DrTLAPlus]Dr. TLA+ Series

Spin/PVS

     * [https://www.cs.cmu.edu/%7Eemc/15-820A/]Theorem Proving and Model
       Checking in PVS - Edmund M. Clarke

In Russian

     * [https://compscicenter.ru/courses/seintro/2012-spring/]Osnovy
       programmnoj inzhenerii
     * [http://www.intuit.ru/studies/courses/497/353/info]Vvedenie v
       programmnuyu inzheneriyu
     * [http://www.intuit.ru/studies/courses/2262/160/info]Vvedenie v
       tehnologiyu programmirovaniya
     * [https://www.lektorium.tv/lecture/13635]YUnit-testirovanie i
       metriki pokrytiya koda testami
     * [http://kspt.icc.spbstu.ru/course/QA]Metody analiza i obespecheniya
       kachestva PO

Testirovanie PO

     * [http://universarium.org/course/526]Osnovy testirovaniya
       programmnogo obespecheniya
     * [https://itvdn.com/ru/video/testing-process]Osnovy testirovaniya PO
     * [http://www.intuit.ru/studies/courses/48/48/info]Osnovy
       testirovaniya programmnogo obespecheniya
     * [https://academy.yandex.ru/events/testing/spb-2014/]SHkola
       avtomatizacii processov razrabotki
     * [https://academy.yandex.ru/events/testing/msk-2014/]SHkola
       testirovaniya bannernoj sistemy
     * [http://compsciclub.ru/courses/softwaretesting/2008-spring/]Softwar
       e Testing
     * Software Testing 101
       ([http://kspt.ftk.spbstu.ru/media/files/people/akhin/lectures/Softw
       are-Testing-101.pdf]na anglijskom,
       [http://kspt.icc.spbstu.ru/media/files/people/akhin/lectures/Softwa
       re-Testing-101-ru.pdf]na russkom)
     * [http://kspt.icc.spbstu.ru/media/files/people/akhin/lectures/Softwa
       re-Testing-102v2.pdf]Software Testing 102
     * [http://kspt.icc.spbstu.ru/media/files/people/akhin/lectures/Softwa
       re-Testing-102v3.pdf]Software Testing 103
     * [http://kspt.icc.spbstu.ru/2014/course/software-testing]Testirovani
       e PO
     * SHkola testirovaniya:
       [https://academy.yandex.ru/events/testing/spb-2016/]Ruchnoe
       testirovanie i Avtomatizaciya testirovaniya
       ([https://www.youtube.com/playlist?list=PLJMRN_6MT0JYItlUeor7YRa0r6
       -lI8MMR]Youtube)
     * [https://www.lektorium.tv/course/22774]Testirovanie na osnove
       modelej
       ([http://compsciclub.ru/media/slides/modelbasedtesting_2010_spring/
       2010_04_25_modelbasedtesting_2010_spring_m98ClS2.pdf]slajdy)

Formal'naya verifikaciya PO

     * [https://www.youtube.com/user/ksavenkov/playlists]Verifikaciya
       programm na modelyah
     * [https://www.lektorium.tv/course/22862?id=22862]Verifikaciya
       parallel'nyh i raspredelennyh programmnyh sistem
       ([http://is.ifmo.ru/present/2012/20120218_model_che%D1%81king_karpo
       v_lecture01.pdf]PDF)
     * [http://kspt.icc.spbstu.ru/2010/course/quality]Formal'nye metody
       obespecheniya kachestva PO
     * [http://www.intuit.ru/studies/courses/1040/209/info]Verifikaciya
       programmnogo obespecheniya
     * [http://compsciclub.ru/courses/softwareverification/2008-spring/]So
       ftware Verification
     * [https://www.youtube.com/playlist?list=PLk5aZ4JAk_ZO32dammZRXxnSGhU
       SjOJzZ]Formal'naya specifikaciya i verifikaciya programm
     * [http://panda.ispras.ru/%7Ekuliamin/docs/ConfTheory-book-2008.pdf]T
       eoriya sootvetstviya dlya sistem s blokirovkami i razrusheniem -
       I.B. Burdonov, A.S. Kosachev, V.V. Kulyamin
     * [http://sp.cs.msu.ru/courses/vmp/kamkin_mc2018.pdf]Vvedenie v
       formal'nye metody verifikacii programm -- A.S. Kamkin
     * [http://www.ict.edu.ru/ft/005645/62322e1-st09.pdf]Metody
       verifikacii programmnogo obespecheniya -- V.V. Kulyamin

Workshops and interactive learning tools

     * [https://learntla.com/introduction/]Learn TLA
     * [https://github.com/parlarjb/tla_workshop]tla_workshop
     * [https://github.com/finnp/test-anything]test-anything
     * [https://math-comp.github.io/mcb/]https://math-comp.github.io/mcb/
     * [https://github.com/Dor1s/libfuzzer-workshop]LibFuzzer Wokshop
     * [https://github.com/google/fuzzer-test-suite/blob/master/tutorial/l
       ibFuzzerTutorial.md]LibFuzzer Tutorial
     * [https://rise4fun.com/z3/tutorial/guide]Interactive Z3 Guide
     * [http://code-defenders.org/login]Code-defenders game (mutation
       testing)
     * [http://www.sqrlab.ca/software/robobug/]RoboBUG: A Debugging Game
     * [http://www.sqrlab.ca/software/roboton/]Robot ON! A Program
       Understanding Game
     * [http://www.sqrlab.ca/software/firefinder/]FireFinder
     * [http://www.sqrlab.ca/software/threadedpaws/]Threaded Paws: A
       Concurrency Game
     * [http://verigames.com/]Verigames
     * [https://www.edukera.com/]Edukera

Conferences

     * [http://testingconferences.org/]Software Testing Conferences

Podcasts

Russian

     * [http://radio-qa.com/]Radio QA

English

     * [http://pythontesting.net/]Python Testing
     * [http://www.angryweasel.com/ABTesting/]AB Testing
     * [https://joecolantonio.com/testtalks/]Test Talks
     * [http://www.testingbias.com/]Testing Bias
     * [http://thetestingshow.libsyn.com/podcast]The Testing Show
     * [http://letstalkabouttests.xyz/]Let's Talk About Tests
     * [http://testinginthepub.co.uk/testinginthepub/]Testing In The Pub
     * [http://testingpodcast.com/]Testing Podcast
     * [http://www.testcast.net/]TestCast
     * [http://codingqa.com/]CodingQA
     * [https://dojo.ministryoftesting.com/series/podcast-series-ministry-
       of-testing]The Ministry of Testing Podcast
     * [http://www.schmonz.com/tag/tdd-in-context/]TDD in context

Learned lessons

     * [https://llis.nasa.gov/]NASA Public Lessons Learned System
     * [http://aisel.aisnet.org/cgi/viewcontent.cgi?article=1671&context=a
       mcis2009]Flight Software Engineering Lessons
     * [http://catless.ncl.ac.uk/Risks/]Forum on Risks to the Public in
       Computers and Related Systems

Awesome lists

     * [https://github.com/secfigo/Awesome-Fuzzing]Fuzzing testing
     * [https://github.com/theofidry/mutation-testing]Mutation testing
     * [https://github.com/dastergon/awesome-chaos-engineering]Chaos
       Engineering
     * [https://github.com/mre/awesome-static-analysis]Static analysis
     * [https://github.com/sindresorhus/awesome-tap]TAP (Test Anything
       Protocol)
     * [https://github.com/TheJambo/awesome-testing]Selenium
     * [https://github.com/ksluckow/awesome-symbolic-execution]Symbolic
       execution
     * [https://github.com/uhub/awesome-coq]Coq Proof Assistant
     * [https://github.com/awesomo4000/awesome-provable]awesome-provable
     * [https://github.com/mojoaxel/awesome-regression-testing]Visual
       regression testing
     * [https://github.com/johnyf/tool_lists/blob/master/verification_synt
       hesis.md]List of verification and synthesis tools
     * [https://github.com/asatarin/testing-distributed-systems]Testing of
       distributed systems

License

   [http://creativecommons.org/publicdomain/zero/1.0/]CC0 Public Domain

   To the extent possible under law, [https://bronevichok.ru/]Sergey
   Bronnikov has waived all copyright and related or neighboring rights to
   this work.

     * © 2018 GitHub, Inc.
     * [https://github.com/site/terms]Terms
     * [https://github.com/site/privacy]Privacy
     * [https://help.github.com/articles/github-security/]Security
     * [https://status.github.com/]Status
     * [https://help.github.com/]Help

   [https://github.com/]
     * [https://github.com/contact]Contact GitHub
     * [https://developer.github.com/]API
     * [https://training.github.com/]Training
     * [https://shop.github.com/]Shop
     * [https://blog.github.com/]Blog
     * [https://github.com/about]About

   (BUTTON) You can't perform that action at this time.

   You signed in with another tab or window.
   [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/awesome-software-
   quality]Reload to refresh your session. You signed out in another tab
   or window.
   Reload to refresh your session.

   (BUTTON)

   Press h to open a hovercard with more details.
