   #Recent Commits
   to ElixirBooks:master

   Skip to content
   [https://github.com/]
     * Features
     * Explore
     * Pricing

   This repository ____________________
   Sign up

     * Watch
       Star
       Fork
       29

ElixirBooks

   Issues 0
   Projects 0
   Insights
   (BUTTON) Dismiss

Join GitHub today

   GitHub is home to over 20 million developers working together to host
   and review code, manage projects, and build software together.

   Sign up
   List of Elixir books
   elixir
   erlang
   books
   otp
   elixir-school
   epub
   distributed-systems
   tutorials
   phoenix
   83 commits
     * 0 releases
     * Fetching
       contributors

   Clone or download

Clone with HTTPS [https://help.github.com/articles/which-remote-url-should-i-use]

   Use Git or checkout with SVN using the web URL.
   https://github.com/s
   Download ZIP

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching Xcode...

   If nothing happens, [https://developer.apple.com/xcode/]download Xcode
   and try again.

   (BUTTON) Go back

Launching Visual Studio...

   If nothing happens, [https://visualstudio.github.com/]download the
   GitHub extension for Visual Studio and try again.

   (BUTTON) Go back
   Find file
   (BUTTON) Branch: master
   Switch branches/tags
   ____________________
     * B
       ranches
     * T
       ags

   master
   Nothing to show
   Nothing to show
   (BUTTON) New pull request
   Latest commit
   485b42c Feb 24, 2018
   sger
   Fixing missing url for Études for Elixir
   Permalink
   Failed to load latest commit information.
   .travis.yml
   fixing travis Jun 4, 2016
   CONTRIBU
   TING.md
   updates Jun 3, 2016
   LICENSE
   [file://localhost/sger/ElixirBooks/commit/2ed662bd6ace33cdec0865127eabf
   f9d0ce6eb29]updates Oct 11, 2016
   README.md
   Fixing missing url for Études for Elixir Feb 24, 2018
   ab-results-README.md-markdown-table.json
   Merge branch 'master' of
   https://github.com/sger/ElixirBooks Jan 5, 2018
   ab-results-README.md.json
   Merge branch 'master' of
   https://github.com/sger/ElixirBooks Jan 5, 2018

README.md

Awesome

Contents

     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/elixirBooks#b
       ooks]Books
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/elixirBooks#s
       tarter-books]Starter Books
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/elixirBooks#a
       dvanced-books]Advanced Books
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/elixirBooks#w
       eb-development]Web Development
     * [file://localhost/Users/admin/Pros/sh/awesome/awe_raw/elixirBooks#r
       esources]Resources

Books

Starter Books

Getting Started Free

   [https://camo.githubusercontent.com/a23a53ec91ec43de7a169bce318e40326e7
   f4fe4/687474703a2f2f656c697869722d6c616e672e6f72672f696d616765732f6c6f6
   76f2f6c6f676f2e706e67]Elixir logo

   Official Elixir starting guide that will take you through the language
   foundations. You will also explore how to build projects with Mix and
   OTP, and it will introduce you to more advanvced techniques suchs as
   meta-programming.

Adopting Elixir

   [https://camo.githubusercontent.com/659c19a1fee84cfd56c400b3c8bdeaed0b0
   a2122/68747470733a2f2f636f766572732e6f7265696c6c797374617469632e636f6d2
   f696d616765732f393738313638303530323532372f6361742e676966]Elixir logo

   Adoption is more than programming. Elixir is an exciting new language,
   but to successfully get your application from start to finish, you're
   going to need to know more than just the language. You need the case
   studies and strategies in this book. Learn the best practices for the
   whole life of your application, from design and team-building, to
   managing stakeholders, to deployment and monitoring. Go beyond the
   syntax and the tools to learn the techniques you need to develop your
   Elixir application from concept to production.

Elixir School Free

   [https://camo.githubusercontent.com/6f1e24638595874be9d838ada69a33ff398
   879fa/687474703a2f2f656c697869722d6c616e672e6f72672f696d616765732f6c656
   1726e696e672f656c697869722d7363686f6f6c2e6a7067][687474703a2f2f656c6978
   69722d6c616e672e6f72672f696d616765732f6c6561726e696e672f656c697869722d7
   363686f6f6c2e6a7067]

   Elixir-School is an open and community driven effort inspired by
   Twitter's Scala School. The site's content consists of peer-reviewed
   lessons on various Elixir topics that range in difficulty. The lessons
   are currently available in over 10 languages to help make programming
   Elixir more accessible to non-English speakers.

Introducing Elixir

   [https://camo.githubusercontent.com/796fc13d255103a1ac9ecc3a240a3e74fe1
   84140/687474703a2f2f616b616d6169636f766572732e6f7265696c6c792e636f6d2f6
   96d616765732f303633363932303033303538342f6361742e676966][687474703a2f2f
   616b616d6169636f766572732e6f7265696c6c792e636f6d2f696d616765732f3036333
   63932303033303538342f6361742e676966]

   Elixir is an excellent language if you want to learn about functional
   programming, and with this hands-on introduction, you'll discover just
   how powerful and fun Elixir can be. This language combines the robust
   functional programming of Erlang with a syntax similar to Ruby, and
   includes powerful features for metaprogramming.

Études for Elixir Free

   [https://camo.githubusercontent.com/2b00291c1cc655ba87ca865b8ae3413aad0
   62cbf/687474703a2f2f6f726d2d6f746865722e73332e616d617a6f6e6177732e636f6
   d2f656c697869725f6574756465735f73706c6173682f636f7665722e6a7067][687474
   703a2f2f6f726d2d6f746865722e73332e616d617a6f6e6177732e636f6d2f656c69786
   9725f6574756465735f73706c6173682f636f7665722e6a7067]

   In this book, you will find descriptions of programs that you can write
   in Elixir. The programs will usually be short, and each one has been
   designed to provide practice material for a particular Elixir
   programming concept. These programs have not been designed to be of
   considerable difficulty, though they may ask you to stretch a bit
   beyond the immediate material and examples that you find in the book
   Introducing Elixir.

Elixir Cookbook

   [https://camo.githubusercontent.com/99a9b7628892164aa94fb18a4125fe37fab
   2faec/68747470733a2f2f64316c647a34746534636f76706d2e636c6f756466726f6e7
   42e6e65742f73697465732f64656661756c742f66696c65732f696d6167656361636865
   2f707076345f6d61696e5f626f6f6b5f636f7665722f333936345f456c6978697225323
   0436f6f6b626f6f6b5f436f7665725f312e6a7067][68747470733a2f2f64316c647a34
   746534636f76706d2e636c6f756466726f6e742e6e65742f73697465732f64656661756
   c742f66696c65732f696d61676563616368652f707076345f6d61696e5f626f6f6b5f63
   6f7665722f333936345f456c69786972253230436f6f6b626f6f6b5f436f7665725f312
   e6a7067]

   This book is a set of recipes grouped by topic that acts as a good
   reference to get ideas from or to quickly search for a solution to a
   problem. You will begin by launching an IEx session and using it to
   test some ideas. Next, you will perform various operations like loading
   and compiling modules, inspecting your system, generating a supervised
   app, and so on. Furthermore, you will be introduced to immutability,
   working with data structures, performing pattern matching, and using
   stream modules to generate infinite data sequences. You will learn
   about everything from joining strings to determining the word frequency
   in text. With respect to modules and functions, you will also discover
   how to load code from other modules and use guards and pattern matching
   in functions.

Elixir in Action

   [https://camo.githubusercontent.com/c27aa9b2aede95946891feaca2fe9ff67b3
   c9c30/68747470733a2f2f696d616765732e6d616e6e696e672e636f6d2f3235352f333
   4302f726573697a652f626f6f6b2f352f326538656662312d396536662d343632632d39
   3438372d3034656163303765613632332f6a757269632e706e67][68747470733a2f2f6
   96d616765732e6d616e6e696e672e636f6d2f3235352f3334302f726573697a652f626f
   6f6b2f352f326538656662312d396536662d343632632d393438372d303465616330376
   5613632332f6a757269632e706e67]

   Elixir in Action teaches you how to solve practical problems of
   scalability, concurrency, fault tolerance, and high availability using
   Elixir. You'll start with the language, learning basic constructs and
   building blocks. Then, you'll learn to think about problems using
   Elixir's functional programming mindset. With that solid foundation,
   you'll confidently explore Elixir's seamless integration with BEAM and
   Erlang's powerful OTP framework of battle-tested abstractions you can
   use immediately. Finally, the book provides guidance on how to
   distribute a system over multiple machines and control it in
   production.

The Little Elixir & OTP Guidebook

   [https://camo.githubusercontent.com/928e72aac1686731bb3b9a25227edadac90
   3b4c2/68747470733a2f2f696d616765732e6d616e6e696e672e636f6d2f3235352f333
   4302f726573697a652f626f6f6b2f322f636637303533372d303036382d346437362d62
   3235342d3330383263336263313261332f54616e57656948616f5f66696e616c2e706e6
   7][68747470733a2f2f696d616765732e6d616e6e696e672e636f6d2f3235352f333430
   2f726573697a652f626f6f6b2f322f636637303533372d303036382d346437362d62323
   5342d3330383263336263313261332f54616e57656948616f5f66696e616c2e706e67]

   The Little Elixir & OTP Guidebook gets you started programming
   applications with Elixir and OTP. You begin with a quick overview of
   the Elixir language syntax, along with just enough functional
   programming to use it effectively. Then, you'll dive straight into OTP
   and learn how it helps you build scalable, fault-tolerant and
   distributed applications through several fun examples. Come rediscover
   the joy of programming with Elixir and remember how it feels like to be
   a beginner again.

Learning Elixir

   [https://camo.githubusercontent.com/2689bcaa26efa6e4336cfc42a678cda7f69
   83646/68747470733a2f2f64323535657364726e37333568722e636c6f756466726f6e7
   42e6e65742f73697465732f64656661756c742f66696c65732f696d6167656361636865
   2f707076345f6d61696e5f626f6f6b5f636f7665722f4230343930375f4d6f636b75704
   36f7665725f4e6f726d616c2e6a7067][68747470733a2f2f64323535657364726e3733
   3568722e636c6f756466726f6e742e6e65742f73697465732f64656661756c742f66696
   c65732f696d61676563616368652f707076345f6d61696e5f626f6f6b5f636f7665722f
   4230343930375f4d6f636b7570436f7665725f4e6f726d616c2e6a7067]

   Elixir, based on Erlang's virtual machine and ecosystem, makes it
   easier to achieve scalability, concurrency, fault tolerance, and high
   availability goals that are pursued by developers using any programming
   language or programming paradigm. Elixir is a modern programming
   language that utilizes the benefits offered by Erlang VM without really
   incorporating the complex syntaxes of Erlang.

Programming Elixir >= 1.6

   [https://camo.githubusercontent.com/c6eb4fa8330c07a27be789123dee5764e1d
   a4b79/68747470733a2f2f696d616765732d6e612e73736c2d696d616765732d616d617
   a6f6e2e636f6d2f696d616765732f492f343138316d3333526d514c2e5f53583431355f
   424f312c3230342c3230332c3230305f2e6a7067][68747470733a2f2f696d616765732
   d6e612e73736c2d696d616765732d616d617a6f6e2e636f6d2f696d616765732f492f34
   3138316d3333526d514c2e5f53583431355f424f312c3230342c3230332c3230305f2e6
   a7067]

     This book is the introduction to Elixir for experienced programmers,
     completely updated for Elixir 1.6 and beyond. Explore functional
     programming without the academic overtones (tell me about monads
     just one more time). Create concurrent applications, but get them
     right without all the locking and consistency headaches. Meet
     Elixir, a modern, functional, concurrent language built on the
     rock-solid Erlang VM. Elixir's pragmatic syntax and built-in support
     for metaprogramming will make you productive and keep you interested
     for the long haul. Maybe the time is right for the Next Big Thing.
     Maybe it's Elixir.

Learn You Some Erlang for Great Good

   [https://camo.githubusercontent.com/b4c68be44a91199c6bc9baeb6e5350c9b73
   669c6/68747470733a2f2f7777772e6e6f7374617263682e636f6d2f73697465732f646
   56661756c742f66696c65732f696d61676563616368652f70726f647563745f6d61696e
   5f706167652f65726c616e675f6e6577736d616c6c2e706e67][68747470733a2f2f777
   7772e6e6f7374617263682e636f6d2f73697465732f64656661756c742f66696c65732f
   696d61676563616368652f70726f647563745f6d61696e5f706167652f65726c616e675
   f6e6577736d616c6c2e706e67]

   Hey there! This is Learn You Some Erlang for great good! This book is
   for you if you've got some programming experience and if you're not too
   familiar with functional programming. It can still be useful if you're
   too good for that, as we progressively go into more and more advanced
   topics.

Learn Functional Programming with Elixir

   [https://camo.githubusercontent.com/e57db13afad22310f0d9ef9a31e1f3afb14
   649cc/687474703a2f2f74332e677374617469632e636f6d2f696d616765733f713d746
   26e3a414e64394763534b7174534a50695847527858313430592d42415849374274376a
   6139393635684c5f586f34435656426272564e4f6c626d][687474703a2f2f74332e677
   374617469632e636f6d2f696d616765733f713d74626e3a414e64394763534b7174534a
   50695847527858313430592d42415849374274376a6139393635684c5f586f344356564
   26272564e4f6c626d]

   Elixir's straightforward syntax and this guided tour give you a clean,
   simple path to learn modern functional programming techniques. No
   previous functional programming experience required! This book walks
   you through the right concepts at the right pace, as you explore
   immutable values and explicit data transformation, functions, modules,
   recursive functions, pattern matching, high-order functions,
   polymorphism, and failure handling, all while avoiding side effects.

Take Off With Elixir

   [https://camo.githubusercontent.com/10e0aabe7601553e03026192f8b7eed363d
   15453/68747470733a2f2f63646e2e73686f706966792e636f6d2f732f66696c65732f3
   12f323138342f363532352f70726f64756374732f636f7665725f3530305f3230343878
   2e6a70673f763d31353034343033393037][68747470733a2f2f63646e2e73686f70696
   6792e636f6d2f732f66696c65732f312f323138342f363532352f70726f64756374732f
   636f7665725f3530305f32303438782e6a70673f763d31353034343033393037]

   This isn't your typical "let's build a blog" situation. You'll be
   working with me, the Dev Lead of the fictional Aerospace startup RED:4,
   as we dive into Elixir and conduct various scientific studies.

Advanced Books

Craft GraphQL APIs in Elixir with Absinthe

   [https://camo.githubusercontent.com/354011cd2088358e28e04e55768ca179f22
   b4c3e/68747470733a2f2f696d616765732d6e612e73736c2d696d616765732d616d617
   a6f6e2e636f6d2f696d616765732f492f35316e59396e4365306a4c2e5f53583431355f
   424f312c3230342c3230332c3230305f2e6a7067][68747470733a2f2f696d616765732
   d6e612e73736c2d696d616765732d616d617a6f6e2e636f6d2f696d616765732f492f35
   316e59396e4365306a4c2e5f53583431355f424f312c3230342c3230332c3230305f2e6
   a7067]

   Your domain is rich and interconnected, and your API should be too.
   Upgrade your web API to GraphQL, leveraging its flexible queries to
   empower your users, and its declarative structure to simplify your
   code. Absinthe is the GraphQL toolkit for Elixir, a functional
   programming language designed to enable massive concurrency atop robust
   application architectures. Written by the creators of Absinthe, this
   book will help you take full advantage of these two groundbreaking
   technologies. Build your own flexible, high-performance APIs using
   step-by-step guidance and expert advice you won't find anywhere else.

Metaprogramming Elixir

   [https://camo.githubusercontent.com/41b25d2e683e4e689aef5978b797ffcd0c7
   ab24e/687474703a2f2f656c697869722d6c616e672e6f72672f696d616765732f6c656
   1726e696e672f6d65746170726f6772616d6d696e672d656c697869722e6a7067][6874
   74703a2f2f656c697869722d6c616e672e6f72672f696d616765732f6c6561726e696e6
   72f6d65746170726f6772616d6d696e672d656c697869722e6a7067]

   Write code that writes code with Elixir macros. Macros make
   metaprogramming possible and define the language itself. In this book,
   you'll learn how to use macros to extend the language with fast,
   maintainable code and share functionality in ways you never thought
   possible. You'll discover how to extend Elixir with your own
   first-class features, optimize performance, and create domain-specific
   languages.

Designing for Scalability with Erlang/OTP

   [https://camo.githubusercontent.com/56d2e82e6a583e6f5041bb5745bff716a1a
   51fc8/687474703a2f2f616b616d6169636f766572732e6f7265696c6c792e636f6d2f6
   96d616765732f303633363932303032343134392f6c72672e6a7067][687474703a2f2f
   616b616d6169636f766572732e6f7265696c6c792e636f6d2f696d616765732f3036333
   63932303032343134392f6c72672e6a7067]

   If you need to build a scalable, fault tolerant system with
   requirements for high availability, discover why the Erlang/OTP
   platform stands out for the breadth, depth, and consistency of its
   features. This hands-on guide demonstrates how to use the Erlang
   programming language and its OTP framework of reusable libraries,
   tools, and design principles to develop complex commercial-grade
   systems that simply cannot fail.

Erlang and OTP in Action

   [https://camo.githubusercontent.com/2b25de0310b0e9b6c3c3eb09949e3258ceb
   90c00/68747470733a2f2f696d616765732e6d616e6e696e672e636f6d2f3235352f333
   4302f726573697a652f626f6f6b2f662f643231303639622d376130352d346265372d62
   6364382d3764333861666630336533342f6c6f67616e2e706e67][68747470733a2f2f6
   96d616765732e6d616e6e696e672e636f6d2f3235352f3334302f726573697a652f626f
   6f6b2f662f643231303639622d376130352d346265372d626364382d376433386166663
   0336533342f6c6f67616e2e706e67]

   Erlang and OTP in Action teaches you the concepts of concurrent
   programming and the use of Erlang's message-passing model. It walks you
   through progressively more interesting examples, building systems in
   Erlang and integrating them with C/C++, Java, and .NET applications,
   including SOA and web architectures.

Programming Erlang

   [https://camo.githubusercontent.com/d9e65c69083aec14431bf8ea9d79c7499a6
   b419e/687474703a2f2f6563782e696d616765732d616d617a6f6e2e636f6d2f696d616
   765732f492f34314962574542736a624c2e5f53583431355f424f312c3230342c323033
   2c3230305f2e6a7067][687474703a2f2f6563782e696d616765732d616d617a6f6e2e6
   36f6d2f696d616765732f492f34314962574542736a624c2e5f53583431355f424f312c
   3230342c3230332c3230305f2e6a7067]

   A multi-user game, web site, cloud application, or networked database
   can have thousands of users all interacting at the same time. You need
   a powerful, industrial-strength tool to handle the really hard problems
   inherent in parallel, concurrent environments. You need Erlang. In this
   second edition of the bestselling Programming Erlang, you'll learn how
   to write parallel programs that scale effortlessly on multicore
   systems.

Erlang In Anger

   [https://camo.githubusercontent.com/df7735954da7f1931c70d6852c8c8294a8e
   1ac2d/68747470733a2f2f73332e75732d656173742d322e616d617a6f6e6177732e636
   f6d2f666572642e65726c616e672d696e2d616e6765722f626f6f6b2d636f7665722e70
   6e67][68747470733a2f2f73332e75732d656173742d322e616d617a6f6e6177732e636
   f6d2f666572642e65726c616e672d696e2d616e6765722f626f6f6b2d636f7665722e70
   6e67]

   This book intends to be a little guide about how to be the Erlang medic
   in a time of war. It is first and foremost a collection of tips and
   tricks to help understand where failures come from, and a dictionary of
   different code snippets and practices that helped developers debug
   production systems that were built in Erlang.

Building Scalable Applications with Erlang

   [https://camo.githubusercontent.com/3eb116466389abe1cd5758f25d6b745b126
   4e92f/68747470733a2f2f696d616765732d6e612e73736c2d696d616765732d616d617
   a6f6e2e636f6d2f696d616765732f492f3531765855466e48253242364c2e5f53583338
   345f424f312c3230342c3230332c3230305f2e6a7067][68747470733a2f2f696d61676
   5732d6e612e73736c2d696d616765732d616d617a6f6e2e636f6d2f696d616765732f49
   2f3531765855466e48253242364c2e5f53583338345f424f312c3230342c3230332c323
   0305f2e6a7067]

   Erlang is emerging as a leading language for concurrent programming in
   mission-critical enterprise environments where applications must
   deliver exceptional reliability, availability, and scalability. It's
   already used by organizations ranging from Facebook to Amazon, and many
   others are adopting or considering it. As a functional language,
   however, Erlang is radically different from conventional
   object-oriented languages like C++ and Java. This book quickly brings
   experienced object-oriented programmers up to speed with both Erlang
   and the principles of functional programming. Jerry Jackson thoroughly
   explains Erlang's key concepts, principles, and features, bridging the
   conceptual gaps that often frustrate object developers. Next, he shows
   how to use Erlang to build massively-scalable real-world systems with
   up to "nine nines" availability: that is, up to 99.9999999% uptime.

Erlang and Elixir for Imperative Programmers

   [https://camo.githubusercontent.com/dc3567ad1c6b6caeec53671c68f603e1223
   dcda9/68747470733a2f2f696d616765732e737072696e6765722e636f6d2f7367772f6
   26f6f6b732f6d656469756d2f393738313438343232333933322e6a7067][6874747073
   3a2f2f696d616765732e737072696e6765722e636f6d2f7367772f626f6f6b732f6d656
   469756d2f393738313438343232333933322e6a7067]

   Learn and understand Erlang and Elixir and develop a working knowledge
   of the concepts of functional programming that underpin them. This book
   takes the author's experience of taking on a project that required
   functional programming and real-time systems, breaks it down, and
   organizes it. You will get the necessary knowledge about differences to
   the languages you know, where to start, and where to go next.

Web Development

Programming Phoenix

   [https://camo.githubusercontent.com/7556d3c1a88bf28d1bc08b7990498cde0ec
   75611/687474703a2f2f6563782e696d616765732d616d617a6f6e2e636f6d2f696d616
   765732f492f343170506e3530566e764c2e5f53583431355f424f312c3230342c323033
   2c3230305f2e6a7067][687474703a2f2f6563782e696d616765732d616d617a6f6e2e6
   36f6d2f696d616765732f492f343170506e3530566e764c2e5f53583431355f424f312c
   3230342c3230332c3230305f2e6a7067]

   Don't accept the compromise between fast and beautiful: you can have it
   all. Phoenix creator Chris McCord, Elixir creator José Valim, and
   award-winning author Bruce Tate walk you through building an
   application that's fast and reliable. At every step, you'll learn from
   the Phoenix creators not just what to do, but why. Packed with insider
   insights, this definitive guide will be your constant companion in your
   journey from Phoenix novice to expert, as you build the next generation
   of web applications.

Phoenix in Action

   [https://camo.githubusercontent.com/fe1b81c05a13d9d41de35a6d91b1b0c215f
   6046c/68747470733a2f2f696d616765732e6d616e6e696e672e636f6d2f3732302f393
   6302f726573697a652f626f6f6b2f362f306261643135392d356130302d346161392d62
   3462312d3137636665326664373435352f4c657373656c2d50686f656e69782d4d45415
   02d48492e706e67][68747470733a2f2f696d616765732e6d616e6e696e672e636f6d2f
   3732302f3936302f726573697a652f626f6f6b2f362f306261643135392d356130302d3
   46161392d623462312d3137636665326664373435352f4c657373656c2d50686f656e69
   782d4d4541502d48492e706e67]

   Phoenix is a modern web framework built for the Elixir programming
   language. Elegant, fault-tolerant, and performant, Phoenix is as easy
   to use as Rails and as rock-solid as Elixir's Erlang-based foundation.
   Phoenix in Action builds on your existing web dev skills, teaching you
   the unique benefits of Phoenix along with just enough Elixir to get the
   job done.

Building Web Applications with Erlang

   [https://camo.githubusercontent.com/c79ec0c86bf884abdbf72b2f8ec4dfff53a
   37d19/687474703a2f2f616b616d6169636f766572732e6f7265696c6c792e636f6d2f6
   96d616765732f303633363932303032313435322f6361742e676966][687474703a2f2f
   616b616d6169636f766572732e6f7265696c6c792e636f6d2f696d616765732f3036333
   63932303032313435322f6361742e676966]

   Why choose Erlang for web applications? Discover the answer hands-on by
   building a simple web service with this book. If you're an experienced
   web developer who knows basic Erlang, you'll learn how to work with
   REST, dynamic content, web sockets, and concurrency through several
   examples. In the process, you'll see first-hand that Erlang is ideal
   for building business-critical services.

Functional Web Development with Elixir, OTP, and Phoenix

   [https://camo.githubusercontent.com/e20667db7d2c9949eedb521e539dca23679
   80bfc/68747470733a2f2f656c69786972666f72756d2e636f6d2f75706c6f6164732f6
   4656661756c742f6f726967696e616c2f32582f332f3363623336643436653935393862
   38643231616330363165363733333564303334633834396533302e6a7067][687474707
   33a2f2f656c69786972666f72756d2e636f6d2f75706c6f6164732f64656661756c742f
   6f726967696e616c2f32582f332f3363623336643436653935393862386432316163303
   63165363733333564303334633834396533302e6a7067]

   Elixir and Phoenix are generating tremendous excitement as an
   unbeatable platform for building modern web applications. Make the most
   of them as you build a stateful web app with Elixir and OTP. Model
   domain entities without an ORM or a database. Manage server state and
   keep your code clean with OTP Behaviours. Layer on a Phoenix web
   interface without coupling it to the business logic. Open doors to
   powerful new techniques that will get you thinking about web
   development in fundamentally new ways.

Elixir and Elm Tutorial

   [https://camo.githubusercontent.com/5e27425d6dd457c1a8ea2b3a0099c3ac7d4
   d9801/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f7469746c6570616
   765732e6c65616e7075622e636f6d2f656c697869722d656c6d2d7475746f7269616c2f
   6865726f3f31353138303739323830][68747470733a2f2f73332e616d617a6f6e61777
   32e636f6d2f7469746c6570616765732e6c65616e7075622e636f6d2f656c697869722d
   656c6d2d7475746f7269616c2f6865726f3f31353138303739323830]

   Welcome to the world of functional web programming! In this book, we'll
   learn how to create fun, scalable, and maintainable web applications.
   We'll use the latest ideas from emerging languages like Elixir and Elm
   to craft a fun experience. Rather than focusing on theory, we'll take a
   practical approach and build a real-world application.

Resources

     * [https://joearms.github.io/published/2013-05-31-a-week-with-elixir.
       html]Joe Armstrong - A week with Elixir
     * [http://elixirsips.com/]Elixir Sips
     * [https://excasts.com/]ExCasts
     * [https://www.learnelixir.tv/]LearnElixir.tv
     * [https://plus.google.com/communities/115770991058707869622]Google+
     * [https://www.reddit.com/r/elixir]Reddit
     * [http://stackoverflow.com/questions/tagged/elixir]Stack Overflow
     * [http://exercism.io/languages/elixir]Exercism.io
     * [http://plataformatec.com.br/elixir-radar]Elixir Radar Newsletter
     * [http://elixirkoans.io/]Elixir Koans
     * [https://www.youtube.com/channel/UCKrD_GYN3iDpG_uMmADPzJQ]Erlang
       Factory
     * [https://github.com/h4cc/awesome-elixir]Awesome Elixir
     * [https://www.ludu.co/course/discover-elixir-phoenix]Discover Elixir
       & Phoenix
     * [http://elixirschool.com/]Elixir School
     * [https://codestool.coding-gnome.com/courses/elixir-for-programmers]
       Elixir for Programmers

Contributing

   Your contributions are always welcome, just follow
   [https://github.com/sger/ElixirBooks/blob/master/CONTRIBUTING.md]the
   rules!

License

   [http://creativecommons.org/licenses/by/4.0/]Creative Commons License
   This work is licensed under a
   [http://creativecommons.org/licenses/by/4.0/]Creative Commons
   Attribution 4.0 International License.

     * © 2018 GitHub, Inc.
     * [https://github.com/site/terms]Terms
     * [https://github.com/site/privacy]Privacy
     * [https://help.github.com/articles/github-security/]Security
     * [https://status.github.com/]Status
     * [https://help.github.com/]Help

   [https://github.com/]
     * [https://github.com/contact]Contact GitHub
     * [https://developer.github.com/]API
     * [https://training.github.com/]Training
     * [https://shop.github.com/]Shop
     * [https://blog.github.com/]Blog
     * [https://github.com/about]About

   (BUTTON) You can't perform that action at this time.

   You signed in with another tab or window.
   Reloa
   d to refresh your session. You signed out in another tab or window.
   Reloa
   d to refresh your session.

   (BUTTON)

   Press h to open a hovercard with more details.
