   #Rec
   ent Commits to awesome-talks:master

   Skip to content
   [https://github.com/]
     * Features
     * Explore
     * Pricing

   This repository
   ____________________
   Sign
   in or Sign up

     * 256
     * 2,110
     * 187

awesome-talks

   Code
   Pull requests 20
   Insights
   (BUTTON) Dismiss

Join GitHub today

   GitHub is home to over 20 million developers working together to host
   and review code, manage projects, and build software together.

   Sign up
   Awesome online talks and screencasts
     * 155
       commits
     * 1 branch
     * 2
       1 contributors

   Clone or download

Clone with HTTPS [https://help.github.com/articles/which-remote-url-should-i-use]

   Use Git or checkout with SVN using the web URL.
   https://github.com/J
   Downlo
   ad ZIP

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching GitHub Desktop...

   If nothing happens, [https://desktop.github.com/]download GitHub
   Desktop and try again.

   (BUTTON) Go back

Launching Xcode...

   If nothing happens, [https://developer.apple.com/xcode/]download Xcode
   and try again.

   (BUTTON) Go back

Launching Visual Studio...

   If nothing happens, [https://visualstudio.github.com/]download the
   GitHub extension for Visual Studio and try again.

   (BUTTON) Go back
   Find file
   (BUTTON) Branch: master
   Switch branches/tags
   ____________________
     * Branches
     * Tags

   master
   Nothing to show
   Nothing to show
   (BUTTON) New pull request
   Latest commit
   f77244d Feb 24, 2018
   @JanVanRyswyck
   [file://localhost/JanVanRyswyck/awesome-talks/commits?author=JanVanRysw
   yck]JanVanRyswyck
   [file://localhost/JanVanRyswyck/awesome-talks/commit/f77244d2bf6f0dc363
   cf992251abf39a8fef9a3f]Added How To Stop Hating Your Tests by Justin
   Searls
   Permalink
   Failed to load latest commit information.
   REA
   DME.md
   [file://localhost/JanVanRyswyck/awesome-talks/commit/f77244d2bf6f0dc363
   cf992251abf39a8fef9a3f]Added How To Stop Hating Your Tests by Justin
   Searls Feb 24, 2018

README.md

Awesome talks

   [https://github.com/sindresorhus/awesome]Awesome

   There are a lot of screencasts, recordings of user group gatherings and
   conference talks available online. I try to commit myself watching at
   least two new talks every week, and I've been doing this for quite some
   time now. I created this list of online talks that I really enjoyed
   watching. I'll also be updating this list whenever I've watched another
   awesome talk that is worthy enough. Suggestions are always appreciated
   through a pull request. So without further ado ..

   (In no particular order)

Software Development

     * [https://www.youtube.com/watch?v=oKg1hTOQXoY]The Computer
       Revolution hasn't happend yet by Alan Kay [1:04:34]
     * [https://vimeo.com/71278954]The Future of Programming by Bret
       Victor [32:55]
     * [https://vimeo.com/36579366]Inventing on Principle by Bret Victor
       [54:20]
     * [http://worrydream.com/MediaForThinkingTheUnthinkable/]Media for
       Thinking the Unthinkable by Bret Victor [39:32]
     * [http://www.infoq.com/presentations/reimagining-software]Finding a
       Way Out by Chris Granger [33:46]
     * [https://www.youtube.com/watch?v=AUYPnxv0yss]Programming is
       terrible - Lessons learned from a life wasted by Thomas Figg
       [1:06:43]
     * [https://vimeo.com/95066828]Computers are a Sadness, I am the Cure
       by James Mickens [27:35]
     * [http://www.infoq.com/presentations/Are-We-There-Yet-Rich-Hickey]Ar
       e We There Yet? by Rich Hickey [1:10:04]
     * [http://www.infoq.com/presentations/Simple-Made-Easy]Simple Made
       Easy by Rich Hickey [1:01:26]
     * [https://www.infoq.com/presentations/Value-Values]The Value of
       Values by Rich Hickey [58:53]
     * [https://www.youtube.com/watch?v=2V1FtfBDsLU]Effective Programs -
       10 Years of Clojure by Rich Hickey [1:14:51]
     * [https://www.youtube.com/watch?v=9KKMnoTTHJk]The Web We Lost by
       Anil Dash [1:10:54]
     * [https://www.youtube.com/watch?v=_ahvzDzKdB0]Growing a Language by
       Guy Steele [53:30]
     * [https://www.youtube.com/watch?v=lKXe3HUG2l4&list=UU_QIfHvN9auy2CoO
       dSfMWDw]The Mess We're In by Joe Armstrong [45:49]
     * [https://www.youtube.com/watch?v=4Sso4HtvJsw]To the Moon! by Russ
       Olsen [52:43]
     * [https://www.youtube.com/watch?v=h1g1YyVO6j8]Simplify Challenging
       Software Problems with Rocket Science by Bradley Grzesiak [23:07]
     * [https://www.youtube.com/watch?v=9IPn5Gk_OiM]A short history of
       Software Engineering, and other ideas that didn't work by Paolo
       Perrotta [36:35]
     * [https://www.youtube.com/watch?v=idLyobOhtO4]Linus Torvalds on Git
       by Linus Torvalds [1:10:14]
     * [http://www.infoq.com/presentations/worst-programming-language]The
       Worst Programming Language Ever by Mark Rendle [43:46]
     * [https://www.youtube.com/watch?v=cHoYNStQOEc]Unconventional
       Programming with Chemical Computing by Carin Meier [36:00]
     * [https://vimeo.com/97329157]Seven Ineffective Coding Habits of Many
       Programmers by Kevlin Henney [01:02:52]
     * [https://vimeo.com/181409251]5 WTFs in 6 LOCs by Dorothy Wingrove
       [05:11]

Object-Oriented Programming

     * [https://www.youtube.com/watch?v=oiFYPAel-KY]Functional is cool,
       but do you know OO by Sandro Mancuso [54:17]
     * [http://pyvideo.org/video/880/stop-writing-classes]Stop Writing
       Classes by Jack Diederich [27:29]

Functional Programming

     * [http://www.youtube.com/watch?v=pMGY9ViIGNU]Functional Principles
       for Object-Oriented Developers by Jessica Kerr [51:13]
     * [https://vimeo.com/45140590]Adventures in Functional Programming by
       Jim Weirich [50:34]
     * [https://vimeo.com/97514630]Functional Programming: What? Why?
       When? by Robert C. Martin [58:26]
     * [http://www.infoq.com/presentations/functional-pros-cons]Deconstruc
       ting Functional Programming by Gilad Bracha [48:33]
     * [http://www.infoq.com/presentations/post-functional-scala-clojure-h
       askell]Living in a Post-Functional World by Daniel Spiewak [45:46]
     * [https://www.youtube.com/watch?v=pNhBQJN44YQ]Extreme Cleverness:
       Functional Data Structures in Scala by Daniel Spiewak [39:24]
     * [https://www.youtube.com/watch?v=faJ8N0giqzw]Tangible Functional
       Programming by Conal Elliott [56:24]
     * [https://www.youtube.com/watch?v=8frGknO8rIg]Faith, Evolution, and
       Programming Languages by Phillip Wadler [1:06:53]
     * [https://www.youtube.com/watch?v=ZhuHCtR3xq8]Don't fear the Monad
       by Dr. Brian Beckman [1:07:10]
     * [https://skillsmatter.com/skillscasts/6120-functional-programming-d
       esign-patterns-with-scott-wlaschin]Functional Programming Design
       Patterns by Scott Wlaschin [1:49:10]
     * [http://vimeo.com/97507575]Domain modelling with the F# type system
       by Scott Wlaschin [1:03:40]
     * [https://www.youtube.com/watch?v=IOiZatlZtGU]Propositions as Types
       by Philip Wadler [42:42]
     * [https://www.infoq.com/presentations/category-theory-propositions-p
       rinciple]Category Theory for the Working Hacker by Philip Wadler
       [42:17]
     * [https://www.youtube.com/watch?v=XTl7Jn_kmio]Types are like the
       Weather, Type Systems are like Weathermen by Matthias Felleisen
       [1:15:18]
     * [https://www.youtube.com/watch?v=US8QG9I1XW0]Functional
       architecture - The pits of success by Mark Seemann [1:00:09]
     * [https://www.youtube.com/watch?v=doZ0XAc9Wtc]To Clojure and back:
       Writing and rewriting in Ruby by Phillip Mendonça-Vieira [33:16]
     * [https://www.youtube.com/watch?v=epT1xgxSpFU]All I needed for FP I
       learned in High School Algebra by Eric Normand [33:05]

Software Design

     * [http://www.confreaks.com/videos/759-rubymidwest2011-keynote-archit
       ecture-the-lost-years]Architecture the Lost Years by Robert C.
       Martin [1:06:39]
     * [http://www.infoq.com/presentations/model-to-work-evans]DDD:
       putting the model to work by Eric Evans [58:48]
     * [https://vimeo.com/19428577]Unleash Your Domain by Greg Young
       [45:20]
     * [https://www.infoq.com/presentations/8-lines-code-refactoring]8
       Lines of Code by Greg Young [54:43]
     * [http://www.infoq.com/presentations/strategic-design-evans]Strategi
       c Design by Eric Evans [54:40]
     * [https://vimeo.com/6222577]Reliability, Availability, and
       Scalability by Udi Dahan [1:11:09]
     * [https://vimeo.com/79866979]Implementing Micro Service
       Architectures by Fred George [54:40]
     * [http://vimeo.com/52831373]Immutability Changes Everything by Pat
       Helland [45:19]
     * [https://vimeo.com/43598193]Crafting Wicked Domain Models by Jimmy
       Bogard [1:03:03]
     * [http://channel9.msdn.com/Shows/Going+Deep/Hewitt-Meijer-and-Szyper
       ski-The-Actor-Model-everything-you-wanted-to-know-but-were-afraid-t
       o-ask]The Actor Model by Hewitt, Meijer and Szyperski [42:34]
     * [http://www.youtube.com/watch?v=aAb7hSCtvGw]How To Design A Good
       API and Why it Matters by Josh Bloch [1:00:18]
     * [http://www.infoq.com/presentations/Lessons-Learned-Jeremy-Miller]T
       he Joys and Pains of a Long Lived Codebase by Jeremy D Miller
       [1:02:30]
     * [https://www.youtube.com/watch?v=wgdBVIX9ifA]Microservices by
       Martin Fowler [26.25]
     * [https://www.youtube.com/watch?v=2y5Pv4yN0b0]Stewardship: The
       Sobering Parts by Brian Goetz [1:03:30]
     * [https://www.youtube.com/watch?v=J4dlF0kcThQ]Therapeutic
       Refactoring by Katrina Owen [26:04]
     * [https://www.youtube.com/watch?v=uEFrE6cgVNY]Evidence-Oriented
       Programming by Andreas Stefik [41:42]
     * [https://www.youtube.com/watch?v=mDZ-QSLQIB8]The Programming
       Language Wars by Andreas Stefik [50:28]
     * [https://www.youtube.com/watch?v=TlU1opuCXB0]Hopelessness and
       Confidence in Distributed Systems Design by Camille Fournier
       [40:35]
     * [https://www.youtube.com/watch?v=-UKEPd2ipEk]Kill "Microservices"
       before its too late by Chad Fowler [39:41]

Web Development

     * [https://www.youtube.com/playlist?list=PL7664379246A246CB]Crockford
       on JavaScript by Douglas Crockford [10:14:37]
     * [http://vimeo.com/78893726]Go To There and Back Again by Douglas
       Crockford [49:06]
     * [https://www.youtube.com/watch?v=bo36MrBfTk4]The Better Parts by
       Douglas Crockford [01:00:52]
     * [http://www.yuiblog.com/blog/2010/05/20/video-dahl/]Introduction to
       Node.js by Ryan Dahl [58:19]
     * [https://www.destroyallsoftware.com/talks/wat]WAT by Gary Bernhardt
       [4:17]
     * [https://www.destroyallsoftware.com/talks/the-birth-and-death-of-ja
       vascript]The Birth & Death of JavaScript by Gary Bernhardt [29:22]
     * [http://www.youtube.com/watch?v=m3svKOdZijA]Hey Underscore, You're
       Doing It Wrong! by Brian Lonsdorf [36:30]
     * [https://www.youtube.com/watch?v=23Yxji-tEfc]Community.js by Chris
       Williams [21:39]
     * [https://www.youtube.com/watch?v=17rkSdkc5TI]An End to Negativity
       by Chris Williams [27:25]
     * [https://www.youtube.com/watch?v=C5fa1LZYodQ]Is Node.js Better by
       Brian Ford [41:42]
     * [http://vimeo.com/111122950]Life is Terrible: Let's Talk About the
       Web by James Mickens [32:07]
     * [https://www.youtube.com/watch?v=PkOBnYxqj3k]Critical rendering
       path - Crash course on web performance by Ilya Grigorik [41:10]
     * [https://vimeo.com/12529436]10 Things I Learned from the jQuery
       Source by Paul Irish [53:40]
     * [https://www.youtube.com/watch?v=ByNs9TG30E8]Om Next by David Nolen
       [46:17]
     * [https://www.youtube.com/watch?v=gsffg5xxFQI]ClojureScript for
       Skeptics by Derek Slager [41:08]

Test-Driven Development

     * [http://vimeo.com/68375232]TDD, where did it all go wrong by Ian
       Cooper [1:00:37]
     * [http://vimeo.com/68390508]Holistic testing by Jimmy Bogard
       [1:00:33]
     * [https://www.destroyallsoftware.com/talks/boundaries]Boundaries by
       Gary Bernhardt [33:44]
     * [https://www.youtube.com/watch?v=z9quxZsLcfo]Is TDD Dead? - Part 1
       by Martin Fowler, Kent Beck, and David Heinemeier Hansson (DHH)
       [30:28]
     * [https://www.youtube.com/watch?v=B93QezwTQpI]The Transformation
       Priority Premise by Robert C. Martin [53:43]
     * [https://vimeo.com/97537026]TDD in Tatters by Scott Bellware
       [01:07:53]
     * [https://www.youtube.com/watch?v=HhwElTL-mdI]Test-Driven
       Development - Write better code in less time by Evan Dorn [30:54]
     * [https://www.youtube.com/watch?v=URSWYvyc42M]The Magic Tricks of
       Testing by Sandi Metz [32:22]
     * [https://vimeo.com/145917204]How To Stop Hating Your Tests by
       Justin Searls [43:39]

Methodologies

     * [https://www.youtube.com/watch?v=hG4LH6P8Syk]The Land that Scrum
       Forgot by Robert C. Martin [45:41]
     * [https://www.youtube.com/watch?v=p0O1VVqRSK0]Demanding
       Professionalism in Software Development by Robert C. Martin [45:03]
     * [https://vimeo.com/85490944]Spotify Engineering Culture - Part 1 by
       Spotify Training & Development [13:12]
     * [http://vimeo.com/94950270]Spotify Engineering Culture - Part 2 by
       Spotify Training & Development [13:27]
     * [http://vimeo.com/68320415]Adopting Continuous Delivery by Jez
       Humble [47:22]
     * [http://www.thoughtworks.com/talks/the-death-of-agile]The Death of
       Agile by Dave Thomas [47:47]
     * [https://www.youtube.com/watch?v=BdSiBlLafNY]Why Agile Works by
       Alistair Cockburn [53:03]
     * [https://vimeo.com/79866978]Implementing Programmer Anarchy by Fred
       George [54:55]

Computer History

     * [https://www.youtube.com/playlist?list=PLOQZmjD6P2HlOoEVKOPaCFvLnjP
       865X1f]A Brief History of Graphics by Stuart Brown [46:00]
     * [http://epresence.kmdi.utoronto.ca/1/watch/630.aspx]Reflection on
       Window Systems: A Personal Study of Software Engineering by Rob
       Pike [43:33]
     * [https://www.youtube.com/watch?v=xY45YE7ggng]The Charming Genius of
       the Apollo Guidance Computer by Brian Troutwine [48:36]
     * [https://www.youtube.com/watch?v=OdI7Ukf-Bf4]The History (and the
       Future) of Software by Grady Booch [01:09:27]
     * [https://www.youtube.com/watch?v=ecIWPzGEbFc]The Future of
       Programming by Robert C. Martin [01:18:20]

Databases

     * [https://www.youtube.com/watch?v=Cym4TZwTCNU]Deconstructing the
       Database by Rich Hickey [1:06:23]

Cognitive Development

     * [https://vimeo.com/183363832]A Lecture on Creativity by John Cleese
       [36:39]
     * [https://www.youtube.com/watch?v=zzcCWEb-tyk]The Meaning of Life by
       Derek Sivers [18:54]
     * [https://vimeo.com/97415346]Becoming an Outlier: Career Reboot for
       the Developer Mind by Cory House [59:12]
     * [https://www.youtube.com/watch?v=9zc4DSTRGeM]Surviving the
       Framework Hype Cycle by Brandon Hays [35:26]
     * [https://yow.eventer.com/yow-2014-1222/stop-treading-water-learning
       -to-learn-by-edward-kmett-1750]Stop Treading Water - Learning to
       Learn by Edward Kmett [40:59]
     * [https://www.youtube.com/watch?v=ji5_MqicxSo]The Last Lecture:
       Achieving Your Childhood Dreams by Randy Pausch [1:16:26]
     * [https://www.youtube.com/watch?v=UF8uR6Z6KLc]Steve Jobs' 2005
       Stanford Commencement Address by Steve Jobs [15:04]
     * [https://www.youtube.com/watch?v=f84n5oFoZBc]Hammock Driven
       Development by Rich Hickey [39:48]
     * [https://www.youtube.com/watch?v=u6XAPnuFjJc]Drive - The Surprising
       Truth About What Motivates Us by RSA Animate [10:47]

Cryptocurrencies

     * [https://www.youtube.com/watch?v=HaJ1hvon0E0]Bitcoin: Where the
       Laws of Mathematics Prevail by Andreas Antonopoulos [23:47]
     * [https://www.youtube.com/watch?v=AecPrwqjbGw]Delivering Liberty, at
       Scale by Andreas Antonopoulos [30:15]

License

   [http://creativecommons.org/publicdomain/zero/1.0/]CC0

     * © 2018 GitHub, Inc.
     * [https://github.com/site/terms]Terms
     * [https://github.com/site/privacy]Privacy
     * [https://help.github.com/articles/github-security/]Security
     * [https://status.github.com/]Status
     * [https://help.github.com/]Help

   [https://github.com/]
     * [https://github.com/contact]Contact GitHub
     * [https://developer.github.com/]API
     * [https://training.github.com/]Training
     * [https://shop.github.com/]Shop
     * [https://blog.github.com/]Blog
     * [https://github.com/about]About

   (BUTTON) You can't perform that action at this time.

   You signed in with another tab or window.
   Rel
   oad to refresh your session. You signed out in another tab or window.
   Rel
   oad to refresh your session.

   (BUTTON)

   Press h to open a hovercard with more details.
